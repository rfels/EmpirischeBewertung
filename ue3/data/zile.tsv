file	tstamp	developer	version	lines_add	lines_del	description
/cvsroot/zile/zile/.cvsignore	2004-12-21 01:30:15.0	rrt	1.9	2	0	Improve EPOC packaging: add emxuser.sis to the SIS. Add the files thusused to .cvsignore.
/cvsroot/zile/zile/.cvsignore	2004-12-19 01:17:14.0	rrt	1.8	1	1	Correct the pattern for tarballs.
/cvsroot/zile/zile/.cvsignore	2004-12-19 00:28:04.0	rrt	1.7	1	0	First cut of &quot;make dist-epoc&quot;. Currently this just makes the SIS. Itshould make a versioned zip containing a README.
/cvsroot/zile/zile/.cvsignore	2004-12-19 00:03:31.0	rrt	1.6	1	0	Add a pattern for make dist tarballs.
/cvsroot/zile/zile/.cvsignore	2004-09-20 11:59:56.0	rrt	1.5	1	0	Add stamp-h1
/cvsroot/zile/zile/.cvsignore	2004-07-10 23:47:37.0	rrt	1.4	2	1	Remove stamp-h1, which seems to be obsolete, and add stamp-h andstamp-h.in.
/cvsroot/zile/zile/.cvsignore	2004-01-28 15:09:24.0	rrt	1.3	4	0	Added more files resulting from autotoolisation.
/cvsroot/zile/zile/.cvsignore	2003-05-25 22:47:20.0	rrt	1.2	1	0	Add configure.
/cvsroot/zile/zile/.cvsignore	2003-05-16 17:17:53.0	ssigala	1.1	0	0	added files to ignore configure generated files.
/cvsroot/zile/zile/AUTHORS	2004-12-19 01:10:04.0	rrt	1.5	0	42	Put the acknowledgements, more correctly and logically, in THANKS.
/cvsroot/zile/zile/AUTHORS	2004-12-19 01:09:24.0	rrt	1.4	7	4	Add some acknowledgements for the EPOC port.
/cvsroot/zile/zile/AUTHORS	2004-12-19 00:28:45.0	rrt	1.3	2	2	Sort the authors in the same order as everywhere else.
/cvsroot/zile/zile/AUTHORS	2004-12-17 12:58:37.0	rrt	1.2	2	2	Make Nicolas Duboc rather more prominent. He deserves it.
/cvsroot/zile/zile/AUTHORS	2004-02-18 15:27:32.0	ssigala	1.1	0	0	CREDITS --&gt; AUTHORS: follows std unix/gnu convention
/cvsroot/zile/zile/COPYING	2004-02-17 21:21:16.0	ssigala	1.1	0	0	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/Attic/COPYRIGHT	2004-02-17 21:21:16.0	ssigala	1.6	0	0	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/Attic/COPYRIGHT	2004-02-05 11:14:42.0	rrt	1.5	2	1	Update the authors list everywhere, and generally rejig to reflectreality.Change bug-reporting address to the zile-devel mailing list.
/cvsroot/zile/zile/Attic/COPYRIGHT	2003-10-25 01:32:08.0	ssigala	1.4	1	1	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/Attic/COPYRIGHT	2003-05-07 00:28:39.0	rrt	1.3	1	1	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/COPYRIGHT	2003-04-24 17:11:14.0	rrt	1.2	3	1	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/COPYRIGHT	2001-01-19 22:59:09.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/COPYRIGHT	2001-01-19 23:07:23.0	ssigala	1.1.1.2	1	1	import of version 1.3.
/cvsroot/zile/zile/Attic/COPYRIGHT	2001-01-19 22:59:09.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/Attic/CREDITS	2004-02-18 15:27:32.0	ssigala	1.7	0	0	CREDITS --&gt; AUTHORS: follows std unix/gnu convention
/cvsroot/zile/zile/Attic/CREDITS	2004-02-17 21:21:16.0	ssigala	1.6	1	1	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/Attic/CREDITS	2004-02-05 11:14:42.0	rrt	1.5	43	33	Update the authors list everywhere, and generally rejig to reflectreality.Change bug-reporting address to the zile-devel mailing list.
/cvsroot/zile/zile/Attic/CREDITS	2003-05-07 00:28:39.0	rrt	1.4	13	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/CREDITS	2003-05-06 13:47:30.0	rrt	1.3	1	0	Last-minute updates (mostly for Nicolas Duboc&apos;s bug fixes).
/cvsroot/zile/zile/Attic/CREDITS	2003-04-24 17:11:15.0	rrt	1.2	11	4	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/CREDITS	2001-01-19 22:59:09.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/CREDITS	2001-01-19 23:07:23.0	ssigala	1.1.1.2	1	3	import of version 1.3.
/cvsroot/zile/zile/Attic/CREDITS	2001-01-19 22:59:09.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/ChangeLog	2004-05-10 18:03:42.0	rrt	1.1	0	0	Add a placeholder ChangeLog file to keep autotools happy. It just says&quot;see cvs log&quot;.
/cvsroot/zile/zile/Attic/HISTORY	2004-12-17 12:45:53.0	rrt	1.7	0	0	This file was yet another thing to maintain, and its contents was notvery interesting. Get rid of it.
/cvsroot/zile/zile/Attic/HISTORY	2004-02-18 21:28:08.0	ssigala	1.6	1	0	bump to version 1.7-b4
/cvsroot/zile/zile/Attic/HISTORY	2004-02-18 21:19:16.0	ssigala	1.5	2	1	prepare for 1.7-b3
/cvsroot/zile/zile/Attic/HISTORY	2003-10-25 01:32:08.0	ssigala	1.4	1	0	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/Attic/HISTORY	2003-05-07 00:28:39.0	rrt	1.3	2	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/HISTORY	2003-04-24 17:11:15.0	rrt	1.2	13	6	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/HISTORY	2001-01-19 22:59:09.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/HISTORY	2001-01-19 22:59:09.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/INSTALL	2004-03-14 15:36:06.0	rrt	1.3	2	22	branches:  1.3.2;DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/INSTALL	2004-01-28 16:01:22.0	rrt	1.2	80	179	Rewrite the installation instructions in README.compile and move themto INSTALL, where they should be. The file now covers both normalinstallation and simply building zile to try out.
/cvsroot/zile/zile/INSTALL	2001-01-19 22:59:12.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/INSTALL	2001-01-19 22:59:12.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/INSTALL	2005-02-09 01:48:21.0	rrt	1.3.2.1	1	1	Fix reference to the etc directory to the doc directory.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-09-20 15:52:51.0	rrt	1.11	0	0	Fold the rest of KNOWNBUGS (which isn&apos;t really about bugs) into TODO.We should really just have bugs in Bugzilla.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-09-20 12:34:21.0	rrt	1.10	1	4	Remove bug about speed of insertion of large blocks of text infont-lock mode, because we no longer have font-lock.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-03-14 15:36:06.0	rrt	1.9	0	8	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-03-10 11:27:04.0	rrt	1.8	0	2	Make RET do auto-fill as well as SPC.Remove special-case code from self_insert_command for KBD_RET andKBD_TAB, which aren&apos;t handled here anyway. If they do end up bound toself-insert-command, then they should act in a vanilla way anyway.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-03-10 10:35:11.0	rrt	1.7	0	3	Removed bug about background colours not working well. It said thatusers had reported it but Sandro couldn&apos;t repro it. I&apos;ve never seen iteither and it hasn&apos;t been reported since I&apos;ve been on the project, andsince it&apos;s also likely it could be an ncurses bug (maybe now fixed) itseems reasonable to remove it.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-03-10 00:29:35.0	rrt	1.6	0	9	I think I&apos;ve removed all possible static buffer overflows.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2004-03-03 02:50:32.0	rrt	1.5	7	1	Audit possible static buffer overflows (I basically searched for\[[0-9] and identified all those instances that could overflow).I have fixed rc.c and ncurses_redisplay.c, which were two of the worstoffenders; the remaining problematic files are now listed inKNOWNBUGS. As far as I can see, all other uses of static char buffersare safe.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2003-05-26 00:06:34.0	rrt	1.4	1	1	Tweak the English.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2003-05-07 00:28:39.0	rrt	1.3	15	8	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2003-04-24 17:11:15.0	rrt	1.2	13	3	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2001-01-19 22:59:12.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/KNOWNBUGS	2001-01-19 23:07:25.0	ssigala	1.1.1.2	1	4	import of version 1.3.
/cvsroot/zile/zile/Attic/KNOWNBUGS	2001-01-19 22:59:12.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/Makefile.am	2005-01-03 12:06:39.0	rrt	1.16	2	2	Remove reference to lib/, which no longer exists.
/cvsroot/zile/zile/Makefile.am	2005-01-01 03:06:03.0	rrt	1.15	2	4	Simplify dist-epoc target and ensure zile.zip is always remade.
/cvsroot/zile/zile/Makefile.am	2004-12-21 01:21:05.0	rrt	1.14	7	2	Build a zip file for EPOC with a Readme.txt (just a copy of README).
/cvsroot/zile/zile/Makefile.am	2004-12-20 14:55:24.0	rrt	1.13	1	2	Remove TODO, and place all the TODO items in the feature request tracker.
/cvsroot/zile/zile/Makefile.am	2004-12-19 01:10:46.0	rrt	1.12	2	1	Add THANKS.
/cvsroot/zile/zile/Makefile.am	2004-12-19 00:28:04.0	rrt	1.11	4	1	First cut of &quot;make dist-epoc&quot;. Currently this just makes the SIS. Itshould make a versioned zip containing a README.
/cvsroot/zile/zile/Makefile.am	2004-12-19 00:10:28.0	rrt	1.10	1	2	Remove zile.lsm and mentions of sunsite. I can&apos;t be bothered to spendtime putting zile on sunsite (especially tedious is having to updatethe LSM file by hand; if someone implements an automatic solution,I&apos;ll be quite happy to reinstate sunsite).
/cvsroot/zile/zile/Makefile.am	2004-12-18 23:37:05.0	rrt	1.9	3	4	Add .pkg file for EPOC.
/cvsroot/zile/zile/Makefile.am	2004-12-18 23:09:24.0	rrt	1.8	2	2	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/Makefile.am	2004-11-15 01:54:49.0	rrt	1.7	2	2	Remove lib directory from configure.ac, and reorder dirs so that srcgets built before etc, as it contains some necessary object files.
/cvsroot/zile/zile/Makefile.am	2004-11-15 01:47:12.0	rrt	1.6	2	2	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/Makefile.am	2004-02-18 15:27:32.0	ssigala	1.5	2	2	CREDITS --&gt; AUTHORS: follows std unix/gnu convention
/cvsroot/zile/zile/Makefile.am	2004-02-17 21:46:41.0	ssigala	1.4	2	2	COPYRIGHT is now COPYING
/cvsroot/zile/zile/Makefile.am	2004-02-01 03:19:29.0	dacap	1.3	1	2	I guess that rrt removed README.compile from repository but no fromthis Makefile.am
/cvsroot/zile/zile/Makefile.am	2004-01-27 17:53:13.0	rrt	1.2	2	2	Whitespace correction.
/cvsroot/zile/zile/Makefile.am	2004-01-23 02:45:44.0	dacap	1.1	0	0	Added the automake support.
/cvsroot/zile/zile/Attic/Makefile.in	2004-01-23 03:14:01.0	dacap	1.5	1	1	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/Attic/Makefile.in	2003-05-07 01:02:17.0	rrt	1.4	3	2	Adjust distclean rule for newer autoconf.
/cvsroot/zile/zile/Attic/Makefile.in	2003-05-07 00:28:39.0	rrt	1.3	5	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/Makefile.in	2003-04-24 17:11:15.0	rrt	1.2	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/Makefile.in	2001-01-19 22:59:12.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/Makefile.in	2001-01-19 23:07:25.0	ssigala	1.1.1.2	2	2	import of version 1.3.
/cvsroot/zile/zile/Attic/Makefile.in	2001-01-19 22:59:12.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/NEWS	2004-12-17 12:43:37.0	rrt	1.21	4	1	Update NEWS for zile 2.0.
/cvsroot/zile/zile/NEWS	2004-11-15 01:53:28.0	rrt	1.20	5	2	Belatedly added some news for 2.0-a1.
/cvsroot/zile/zile/NEWS	2004-11-14 22:52:25.0	rrt	1.19	1	1	Really extirpate mini help.
/cvsroot/zile/zile/NEWS	2004-04-05 19:30:34.0	rrt	1.18	1	1	Remove text-mode, which no longer does anything.
/cvsroot/zile/zile/NEWS	2004-04-04 22:33:11.0	rrt	1.17	4	0	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/NEWS	2004-02-18 21:40:27.0	ssigala	1.16	2	0	bump to version 1.7 b4
/cvsroot/zile/zile/NEWS	2004-02-18 17:21:53.0	ssigala	1.15	2	2	minor tweaks
/cvsroot/zile/zile/NEWS	2004-02-17 21:21:16.0	ssigala	1.14	1	0	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/NEWS	2004-02-08 05:39:15.0	dacap	1.13	8	1	Rewritten point/marker API mainly.
/cvsroot/zile/zile/NEWS	2004-02-05 10:21:03.0	rrt	1.12	28	30	Now that David is listed as an author, I&apos;ve removed his &quot;patchessupplied by&quot; line, and reformatted the changes. Also fixed a couple ofproblems in the English, and removed non-user-visible changes (put anote about &quot;code cleanups&quot; instead.
/cvsroot/zile/zile/NEWS	2004-02-05 03:45:54.0	dacap	1.11	1	0	Added regexp search functions.
/cvsroot/zile/zile/NEWS	2004-02-04 04:07:27.0	dacap	1.10	7	0	The `prev_bp&apos; was removed.`exchange-point-and-mark&apos; activates the mark.`insert_char&apos; doesn&apos;t move the mark when insert a character in the same mark position.Fixed `insert_nstring&apos; when is used in overwrite-mode.Modified `previous-line&apos; and `next-line&apos; to Emacs behavior.
/cvsroot/zile/zile/NEWS	2004-02-04 00:41:30.0	rrt	1.9	2	0	Implement low priority TODO: case-matching search and replace.
/cvsroot/zile/zile/NEWS	2004-02-03 02:24:34.0	dacap	1.8	1	0	Modified previous-line and next-line to Emacs behavior.
/cvsroot/zile/zile/NEWS	2004-01-21 03:14:17.0	dacap	1.7	22	0	New changes by David A. Capello.
/cvsroot/zile/zile/NEWS	2003-10-25 01:32:08.0	ssigala	1.6	8	7	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/NEWS	2003-05-07 01:03:30.0	rrt	1.5	3	0	Add a note about 1.6.2 to explain its absence from NEWS.
/cvsroot/zile/zile/NEWS	2003-05-07 00:28:39.0	rrt	1.4	41	4	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/NEWS	2003-05-06 13:47:30.0	rrt	1.3	2	0	Last-minute updates (mostly for Nicolas Duboc&apos;s bug fixes).
/cvsroot/zile/zile/NEWS	2003-04-24 17:11:15.0	rrt	1.2	50	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/NEWS	2001-01-19 22:59:16.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/NEWS	2001-01-19 23:07:25.0	ssigala	1.1.1.2	1	23	import of version 1.3.
/cvsroot/zile/zile/NEWS	2001-01-19 22:59:16.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/README	2005-01-23 14:48:24.0	rrt	1.9	2	2	Mention POSIX.
/cvsroot/zile/zile/README	2004-12-21 01:37:38.0	rrt	1.8	3	5	branches:  1.8.2;Tidy up the README some more.
/cvsroot/zile/zile/README	2004-12-21 01:16:41.0	rrt	1.7	3	3	Tidy slightly and add minimal installation instructions for EPOC, sothis file can be used as the Readme.txt in the EPOC zip distribution.
/cvsroot/zile/zile/README	2004-10-11 03:08:39.0	rrt	1.6	2	2	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/README	2004-03-13 17:49:28.0	rrt	1.5	11	38	Rewrite the readme to make it much shorter and avoid duplication (it&apos;seasy for it to get out of date with respect to the main documentationotherwise). Stick to general features, and give pointers to the otherdocs.
/cvsroot/zile/zile/README	2004-02-17 21:21:16.0	ssigala	1.4	5	6	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/README	2003-05-07 00:28:39.0	rrt	1.3	3	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/README	2003-04-24 17:11:15.0	rrt	1.2	12	7	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/README	2001-01-19 22:59:17.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/README	2001-01-19 23:07:25.0	ssigala	1.1.1.2	3	3	import of version 1.3.
/cvsroot/zile/zile/README	2001-01-19 22:59:17.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/README	2005-01-23 14:48:20.0	rrt	1.8.2.2	2	2	Mention POSIX better.
/cvsroot/zile/zile/README	2005-01-23 14:47:18.0	rrt	1.8.2.1	1	1	Mention POSIX.
/cvsroot/zile/zile/Attic/README.compile	2004-01-28 16:01:22.0	rrt	1.3	0	0	Rewrite the installation instructions in README.compile and move themto INSTALL, where they should be. The file now covers both normalinstallation and simply building zile to try out.
/cvsroot/zile/zile/Attic/README.compile	2003-05-07 00:28:39.0	rrt	1.2	23	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/README.compile	2003-04-24 17:11:16.0	rrt	1.1	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/THANKS	2005-02-02 03:04:54.0	rrt	1.5	1	0	Add Han Boethes for a security fix.
/cvsroot/zile/zile/THANKS	2005-01-25 13:53:17.0	rrt	1.4	6	4	Add Scott &quot;Jerry&quot; Lawrence, for lithp.
/cvsroot/zile/zile/THANKS	2004-12-24 14:51:28.0	rrt	1.3	8	8	branches:  1.3.2;Tidy up slightly.
/cvsroot/zile/zile/THANKS	2004-12-20 19:51:27.0	rrt	1.2	44	1	Fix a bug where a buffer could end up without a line ending setting.Acknowledge Richard Smith&apos;s help with cross-compiling.
/cvsroot/zile/zile/THANKS	2004-12-19 01:10:04.0	rrt	1.1	0	0	Put the acknowledgements, more correctly and logically, in THANKS.
/cvsroot/zile/zile/THANKS	2005-02-02 03:04:39.0	rrt	1.3.2.2	1	1	Fix punctuation.
/cvsroot/zile/zile/THANKS	2005-02-02 03:03:31.0	rrt	1.3.2.1	1	0	Add Han Boethes for security fix to copy_file.
/cvsroot/zile/zile/Attic/TODO	2004-12-20 14:55:24.0	rrt	1.31	0	0	Remove TODO, and place all the TODO items in the feature request tracker.
/cvsroot/zile/zile/Attic/TODO	2004-11-14 01:09:35.0	rrt	1.30	0	2	Remove &quot;undo compaction&quot;. It already exists. Duh.
/cvsroot/zile/zile/Attic/TODO	2004-11-14 01:06:42.0	rrt	1.29	1	0	Add a note about being able to rebind keys within zile (which shouldbe possible), including within the config file.
/cvsroot/zile/zile/Attic/TODO	2004-10-25 00:37:06.0	rrt	1.28	1	2	Add support for keypad keys, and fix a bug in the case where one ormore keys are not supported by the termcap description.
/cvsroot/zile/zile/Attic/TODO	2004-10-23 17:41:20.0	rrt	1.27	1	4	Remove the high priority category. High priority todos should be filedas bugs.
/cvsroot/zile/zile/Attic/TODO	2004-10-16 23:05:39.0	rrt	1.26	6	4	Declare remaining high priority todos to be medium priority.
/cvsroot/zile/zile/Attic/TODO	2004-10-16 23:04:37.0	rrt	1.25	13	15	Implement fill-paragraph.Tidy up the TODO, reordering a bit and rewriting all entries in theform as actions to be done.
/cvsroot/zile/zile/Attic/TODO	2004-10-14 02:54:04.0	rrt	1.24	0	4	Tests are now built by make check.
/cvsroot/zile/zile/Attic/TODO	2004-10-13 18:04:28.0	rrt	1.23	4	4	Screen update dealt with.
/cvsroot/zile/zile/Attic/TODO	2004-10-13 00:08:20.0	rrt	1.22	0	2	mark-paragraph now implemented.
/cvsroot/zile/zile/Attic/TODO	2004-10-13 00:03:19.0	rrt	1.21	6	7	Implement forward-paragraph and backward-paragraph.Move the sentence functions from HIGH PRIORITY to MEDIUM PRIORITY.This means I don&apos;t intend to get them done for zile 2.0.
/cvsroot/zile/zile/Attic/TODO	2004-10-06 19:30:57.0	rrt	1.20	0	3	expand_path dealt with
/cvsroot/zile/zile/Attic/TODO	2004-10-06 18:48:24.0	rrt	1.19	0	2	Remove todo about stripping binaries on install; the correct way to dothis with automake is make install-strip.
/cvsroot/zile/zile/Attic/TODO	2004-10-06 18:27:24.0	rrt	1.18	4	0	Add getting tests in lib built to list. Give an example command forbuilding a test.
/cvsroot/zile/zile/Attic/TODO	2004-09-20 15:52:51.0	rrt	1.17	6	2	Fold the rest of KNOWNBUGS (which isn&apos;t really about bugs) into TODO.We should really just have bugs in Bugzilla.
/cvsroot/zile/zile/Attic/TODO	2004-05-10 17:56:52.0	rrt	1.16	5	0	Clarify the added binding under &quot;MEDIUM PRIORITY&quot; and add a new item,namely, to strip the binary during installation.
/cvsroot/zile/zile/Attic/TODO	2004-05-07 00:16:52.0	rrt	1.15	4	6	Add dummy function for name-last-kbd-macro and tidy up TODO.
/cvsroot/zile/zile/Attic/TODO	2004-05-02 08:16:35.0	rrt	1.14	11	11	Rename priority levels more reasonably.
/cvsroot/zile/zile/Attic/TODO	2004-04-05 18:00:44.0	rrt	1.13	3	4	Correct backward-paragraph and forward-paragraph bindings to the sameas Emacs (M-{ and M-}).
/cvsroot/zile/zile/Attic/TODO	2004-04-05 02:50:47.0	rrt	1.12	1	3	Add keybinding (global-set-key).
/cvsroot/zile/zile/Attic/TODO	2004-04-04 22:33:11.0	rrt	1.11	7	20	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/Attic/TODO	2004-02-08 05:39:26.0	dacap	1.10	7	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/Attic/TODO	2004-02-04 13:02:55.0	rrt	1.9	0	7	Implement uniarg functionality for the transpose-* functions.
/cvsroot/zile/zile/Attic/TODO	2004-02-04 00:41:31.0	rrt	1.8	2	5	Implement low priority TODO: case-matching search and replace.
/cvsroot/zile/zile/Attic/TODO	2004-01-29 05:02:10.0	dacap	1.7	0	1	delete-horizontal-space doesn&apos;t need uniarg.
/cvsroot/zile/zile/Attic/TODO	2004-01-21 03:16:46.0	dacap	1.6	8	16	Updated to the new changes of David A. Capello.
/cvsroot/zile/zile/Attic/TODO	2003-10-25 01:32:08.0	ssigala	1.5	2	5	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/Attic/TODO	2003-05-07 00:28:39.0	rrt	1.4	76	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/TODO	2003-05-06 13:47:30.0	rrt	1.3	1	1	Last-minute updates (mostly for Nicolas Duboc&apos;s bug fixes).
/cvsroot/zile/zile/Attic/TODO	2003-04-24 17:11:16.0	rrt	1.2	2	53	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/TODO	2001-01-19 22:59:17.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/TODO	2001-01-19 23:07:25.0	ssigala	1.1.1.2	19	22	import of version 1.3.
/cvsroot/zile/zile/Attic/TODO	2001-01-19 22:59:17.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/Attic/acconfig.h	2003-05-07 01:04:03.0	rrt	1.3	0	0	Replaced by config.h.in in newer autoconf.
/cvsroot/zile/zile/Attic/acconfig.h	2003-04-24 17:11:16.0	rrt	1.2	7	1	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/acconfig.h	2001-01-19 22:59:17.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/acconfig.h	2001-01-19 22:59:17.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/acinclude.m4	2004-12-21 01:13:07.0	rrt	1.4	2	1	Add a credit to Richard Smith.
/cvsroot/zile/zile/acinclude.m4	2004-12-20 18:27:13.0	rrt	1.3	35	39	Add support for getting the build system compiler, so we can supportbuilding mkdoc when cross-compiling.Provided by Richard Smith from binutils code.
/cvsroot/zile/zile/acinclude.m4	2004-09-20 11:59:05.0	rrt	1.2	1	1	Quote macro names in AC_DEFUN to make recent autotools happy.
/cvsroot/zile/zile/acinclude.m4	2004-01-23 02:54:57.0	dacap	1.1	0	0	*** empty log message ***
/cvsroot/zile/zile/Attic/aclocal.m4	2004-01-25 13:58:37.0	rrt	1.2	0	0	This is a generated file, so shouldn&apos;t be in CVS.
/cvsroot/zile/zile/Attic/aclocal.m4	2004-01-23 02:58:38.0	dacap	1.1	0	0	*** empty log message ***
/cvsroot/zile/zile/autogen.sh	2004-12-18 23:56:42.0	rrt	1.5	1	1	Pass --add-missing to automake so it installs missing files that areneeded.
/cvsroot/zile/zile/autogen.sh	2004-01-25 14:03:23.0	rrt	1.4	0	0	Re-add with correct permissions.
/cvsroot/zile/zile/autogen.sh	2004-01-25 14:02:41.0	rrt	1.3	0	0	Try removing the file in order to re-add it with chmod +x.
/cvsroot/zile/zile/autogen.sh	2004-01-25 14:00:20.0	rrt	1.2	1	0	Add a comment saying what this script does and chmod +x it.
/cvsroot/zile/zile/autogen.sh	2004-01-23 03:01:31.0	dacap	1.1	0	0	Script to run auto-generations tools.
/cvsroot/zile/zile/Attic/config.h.in	2004-01-23 03:14:03.0	dacap	1.3	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/Attic/config.h.in	2003-05-07 01:05:03.0	rrt	1.2	4	9	Since we always require (n)curses, remove USE_NCURSES symbol; alsosince we can use plain curses, rename HAVE_LIBNCURSES to HAVE_LIBCURSES.
/cvsroot/zile/zile/Attic/config.h.in	2003-05-07 00:28:39.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/configure	2003-05-20 00:04:47.0	rrt	1.7	0	0	Remove generated files from CVS. Yeah, I know, we probably want themin source tarballs, but that&apos;s fine, you do a &quot;make; make distclean&quot;and then make the tarball.
/cvsroot/zile/zile/Attic/configure	2003-05-16 17:19:41.0	ssigala	1.6	44	7	regenerated configure with the latest autoconf.the info file should be included into the distribution(makeinfo may be unavailable on user machine).
/cvsroot/zile/zile/Attic/configure	2003-05-07 00:42:10.0	rrt	1.5	0	0	Remove generated file from the repo. N.B. This is not removed by makedistclean, so should still be present when making a distributiontarball. The same applies to doc/zile.info
/cvsroot/zile/zile/Attic/configure	2003-05-07 00:28:39.0	rrt	1.4	272	80	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/Attic/configure	2003-04-24 17:34:32.0	rrt	1.3	4330	1373	Added check for MAKEINFO (snaffled from OpenAL&apos;s configure.in).
/cvsroot/zile/zile/Attic/configure	2003-04-24 17:11:16.0	rrt	1.2	310	98	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/configure	2001-01-19 23:00:00.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/configure	2001-01-19 23:07:31.0	ssigala	1.1.1.2	1	1	import of version 1.3.
/cvsroot/zile/zile/Attic/configure	2001-01-19 23:00:00.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/configure.ac	2005-02-02 03:17:16.0	rrt	1.55	1	1	Check for sigaction as part of build fix for EPOC.
/cvsroot/zile/zile/configure.ac	2005-01-28 02:20:33.0	rrt	1.54	1	1	Add -W to CFLAGS.
/cvsroot/zile/zile/configure.ac	2005-01-26 01:27:18.0	rrt	1.53	1	1	Add -Wconversion to the gcc command line.
/cvsroot/zile/zile/configure.ac	2005-01-25 17:02:17.0	rrt	1.52	1	1	Add tests to EXTRA_DIST and bump version to 2.1.0.The 2.1 development branch is go!
/cvsroot/zile/zile/configure.ac	2005-01-23 19:41:41.0	rrt	1.51	1	19	Don&apos;t check for limits.h, it&apos;s ANSI/ISO, and we assume that.Remove --enable-debug: debugging code should always be compiled in. Atthe moment there&apos;s only one block (in term_termcap.c), which should bechanged so it can be switched on (e.g. using a -d command-line flag orsomesuch).
/cvsroot/zile/zile/configure.ac	2005-01-18 22:16:25.0	rrt	1.50	2	2	Change getopt handling to detect getopt_long_only and useAC_REPLACE_FUNCS. Assume that if it exists, getopt.h must too(otherwise we&apos;re stuffed anyway).
/cvsroot/zile/zile/configure.ac	2005-01-17 02:07:13.0	rrt	1.49	2	2	Add check for getopt.h. This is sufficient, since getopt.c andgetopt1.c are always compiled, and only generate code if glibc is notinstalled.Add fchown and fchmod to AC_CHECK_FUNCS, where they should be. (Theywere previously in AC_REPLACE_FUNCS, which was wrong, and were thenremoved, which was also wrong.)
/cvsroot/zile/zile/configure.ac	2005-01-17 01:54:58.0	rrt	1.48	0	3	Remove AC_CONFIG_SRCDIR (no longer used by autoconf, it seems), andAC_C_INLINE and AC_PROG_RANLIB (we don&apos;t need them).
/cvsroot/zile/zile/configure.ac	2005-01-17 01:44:26.0	rrt	1.47	1	37	Remove unnecessary code, mainly features that are either ANSI (andwhich we hence assume) or are no longer used.
/cvsroot/zile/zile/configure.ac	2005-01-17 01:26:46.0	rrt	1.46	2	2	Remove strerror and strstr from AC_CHECK_FUNCS call, because these arestandard ANSI C functions.Remove xmalloc, xrealloc and xstrdup from AC_REPLACE_FUNCS call,because we don&apos;t use them any more.Remove fchown and fchmod from the AC_REPLACE_FUNCS call, because wehave no alternative implementations of them!
/cvsroot/zile/zile/configure.ac	2005-01-09 18:47:52.0	rrt	1.45	1	1	Change version number to 2.1CVS. (The 2.0 branch has now been split off.)
/cvsroot/zile/zile/configure.ac	2005-01-06 23:33:46.0	rrt	1.44	1	1	branches:  1.44.2;Bump to 2.0beta4.
/cvsroot/zile/zile/configure.ac	2005-01-03 04:40:25.0	rrt	1.43	1	1	Bump version to 2.0beta3.
/cvsroot/zile/zile/configure.ac	2005-01-03 01:48:18.0	rrt	1.42	1	1	Bump to 2.0beta2.
/cvsroot/zile/zile/configure.ac	2005-01-03 01:38:37.0	rrt	1.41	1	1	Update to 2.0beta1.
/cvsroot/zile/zile/configure.ac	2004-12-21 00:45:48.0	rrt	1.40	1	1	Bump to 2.0alpha5.
/cvsroot/zile/zile/configure.ac	2004-12-20 18:27:13.0	rrt	1.39	1	0	Add support for getting the build system compiler, so we can supportbuilding mkdoc when cross-compiling.Provided by Richard Smith from binutils code.
/cvsroot/zile/zile/configure.ac	2004-12-20 14:56:05.0	rrt	1.38	1	1	Bump version for 2.0alpha4 release.
/cvsroot/zile/zile/configure.ac	2004-12-18 23:24:56.0	rrt	1.37	1	2	Remove etc/Makefile now we no longer have etc/.
/cvsroot/zile/zile/configure.ac	2004-12-17 15:23:02.0	rrt	1.36	1	1	Update for 2.0-a3.
/cvsroot/zile/zile/configure.ac	2004-12-09 00:45:25.0	rrt	1.35	1	1	Add -pedantic to CFLAGS.
/cvsroot/zile/zile/configure.ac	2004-11-16 01:35:42.0	rrt	1.34	24	3	Add EPOC support (in term_epocemx.c).Add --enable-epocemx to configure.acRemove gperf test from configure.ac.Note: term_epocemx.c currently duplicates quite a lot ofterm_termcap.c, of which it is a heavily modified version. I willfactor out the comon bits shortly.Also, building under epocemx requires a configure line something like:./configure --build=&lt;current-platform&gt; --host=arm-epoc-pe --enable-epocemx
/cvsroot/zile/zile/configure.ac	2004-11-15 23:01:27.0	rrt	1.33	1	1	Add support for systems without fchown or fchmod. Do not use chown orchmod on such systems; that would result in race condition. Instead,just omit the unsupported calls.
/cvsroot/zile/zile/configure.ac	2004-11-15 01:54:49.0	rrt	1.32	2	3	Remove lib directory from configure.ac, and reorder dirs so that srcgets built before etc, as it contains some necessary object files.
/cvsroot/zile/zile/configure.ac	2004-10-13 00:02:00.0	rrt	1.31	1	1	Bump version to 2.0-a1. It will be...
/cvsroot/zile/zile/configure.ac	2004-10-11 03:08:40.0	rrt	1.30	4	34	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/configure.ac	2004-10-05 21:40:53.0	rrt	1.29	1	1	Update include files needed for termcap (as per term_termcap.c).
/cvsroot/zile/zile/configure.ac	2004-09-20 11:59:05.0	rrt	1.28	2	2	Quote macro names in AC_DEFUN to make recent autotools happy.
/cvsroot/zile/zile/configure.ac	2004-09-20 11:33:23.0	rrt	1.27	1	1	Change version to 1.8-a1: there have been enough changes since the 1.7series was started to deserve a new series.
/cvsroot/zile/zile/configure.ac	2004-09-04 04:37:22.0	dacap	1.26	0	1	*** empty log message ***
/cvsroot/zile/zile/configure.ac	2004-09-03 04:09:07.0	dacap	1.25	52	17	Added the Allegro interface.
/cvsroot/zile/zile/configure.ac	2004-07-11 00:49:48.0	rrt	1.24	3	1	If building with termcap, look for libtermcap and add it to the LIBS.
/cvsroot/zile/zile/configure.ac	2004-07-11 00:34:34.0	rrt	1.23	14	12	Fix configuration again so that you can now build with or without--disable-curses.Factor out the curses header and library detection code into afunction.
/cvsroot/zile/zile/configure.ac	2004-07-09 02:45:28.0	rrt	1.22	11	9	Set curses macros properly so that curses build can be performed.
/cvsroot/zile/zile/configure.ac	2004-07-01 00:52:40.0	rrt	1.21	27	6	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/configure.ac	2004-05-20 23:41:00.0	rrt	1.20	1	2	Expunge the last references to term_ncurses directory and libterm_ncurses.a
/cvsroot/zile/zile/configure.ac	2004-05-10 18:00:26.0	rrt	1.19	7	0	Add code to configure.ac so that if we&apos;re building with GCC we getplenty of compiler warnings turned on. Always.As a result of this warnings bonanza, fix all the warnings found inthe rest of the code. Given a recent warnings cleanup, this was mostlylimited to extern functions that were not declared before beingdefined. In all cases here this was fixed by making the function static.
/cvsroot/zile/zile/configure.ac	2004-04-05 20:28:15.0	rrt	1.18	0	5	Remove some unused macros.
/cvsroot/zile/zile/configure.ac	2004-03-14 15:36:06.0	rrt	1.17	0	183	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/configure.ac	2004-03-10 15:39:50.0	rrt	1.16	2	2	Fix horrible brain malfunction causing strrchr prototype to be wronglynamed.
/cvsroot/zile/zile/configure.ac	2004-03-10 15:09:01.0	rrt	1.15	4	0	Add prototype to config.h for strrstr, and correct the declaration instrrstr.
/cvsroot/zile/zile/configure.ac	2004-03-10 14:01:12.0	rrt	1.14	1	1	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/configure.ac	2004-03-09 17:10:51.0	rrt	1.13	9	0	Add AC_GNU_SOURCE so we get vasprintf on GNU (glibc) systems, and addprototypes for vasprintf and asprintf to config.h for those systemsthat don&apos;t have them.
/cvsroot/zile/zile/configure.ac	2004-02-18 21:28:08.0	ssigala	1.12	1	1	bump to version 1.7-b4
/cvsroot/zile/zile/configure.ac	2004-02-18 21:19:16.0	ssigala	1.11	1	1	prepare for 1.7-b3
/cvsroot/zile/zile/configure.ac	2004-02-17 21:21:16.0	ssigala	1.10	10	3	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/configure.ac	2004-02-14 23:19:01.0	ssigala	1.9	4	2	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/configure.ac	2004-02-14 10:25:50.0	dacap	1.8	25	25	Changed regex test position
/cvsroot/zile/zile/configure.ac	2004-02-08 05:39:26.0	dacap	1.7	59	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/configure.ac	2004-01-29 16:29:45.0	rrt	1.6	5	11	Change --enable-debug so it only controls the DEBUG symbol, i.e. realdebugging code. Assertions should always be compiled in. If thebuilder really wants to build a small binary, it&apos;s possible to add-DNDEBUG to CFLAGS.Change the Lua detection code so it looks for header files, notlibraries, as with curses and the standard C library.
/cvsroot/zile/zile/configure.ac	2004-01-29 11:38:57.0	rrt	1.5	44	23	Add support for Lua. It&apos;s marked EXPERIMENTAL and is switched off bydefault.Make check for curses much simpler (just check for header file). Don&apos;tdifferentiate between ncurses and curses: the whole point of ncursesis that it&apos;s a drop-in replacment. Stop if curses.h can&apos;t be found, asit&apos;s essential.Rename --enable-all-features to --enable-all-modes.
/cvsroot/zile/zile/configure.ac	2004-01-23 02:45:29.0	dacap	1.4	33	13	Added the automake support.
/cvsroot/zile/zile/configure.ac	2003-05-25 23:20:11.0	rrt	1.3	2	2	Make vasprintf mandatory, and provide an implementation for thoseplatforms that lack it (courtesy of David Taillandier&apos;s xnprintf library).
/cvsroot/zile/zile/configure.ac	2003-05-07 01:05:03.0	rrt	1.2	11	10	Since we always require (n)curses, remove USE_NCURSES symbol; alsosince we can use plain curses, rename HAVE_LIBNCURSES to HAVE_LIBCURSES.
/cvsroot/zile/zile/configure.ac	2003-05-07 00:28:39.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/configure.ac	2005-02-27 18:44:48.0	rrt	1.44.2.12	1	1	Bump version to 2.0.2.
/cvsroot/zile/zile/configure.ac	2005-02-14 23:04:05.0	rrt	1.44.2.11	1	1	Bump version number to 2.0.1.
/cvsroot/zile/zile/configure.ac	2005-02-08 00:13:48.0	rrt	1.44.2.10	1	1	Bump version to 2.0.0
/cvsroot/zile/zile/configure.ac	2005-02-02 02:53:05.0	rrt	1.44.2.9	1	1	Bump version to 2.0beta12.
/cvsroot/zile/zile/configure.ac	2005-01-29 12:59:37.0	rrt	1.44.2.8	1	0	Make sigaction optional, so that Zile compiles again on EPOC.
/cvsroot/zile/zile/configure.ac	2005-01-26 19:13:01.0	rrt	1.44.2.7	1	1	Bump version number to 2.0beta11.
/cvsroot/zile/zile/configure.ac	2005-01-26 16:17:19.0	rrt	1.44.2.6	4	15	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/configure.ac	2005-01-24 23:31:23.0	rrt	1.44.2.5	1	1	Bump version to 2.0beta9.
/cvsroot/zile/zile/configure.ac	2005-01-20 00:58:42.0	rrt	1.44.2.4	1	1	Bump version to 2.0beta8.
/cvsroot/zile/zile/configure.ac	2005-01-17 18:55:08.0	rrt	1.44.2.3	1	1	Bump the version to 2.0beta7.
/cvsroot/zile/zile/configure.ac	2005-01-16 21:56:19.0	rrt	1.44.2.2	1	1	Bump version to 2.0beta6.
/cvsroot/zile/zile/configure.ac	2005-01-11 23:22:55.0	rrt	1.44.2.1	1	1	Bump to 2.0beta5.
/cvsroot/zile/zile/Attic/configure.in	2003-05-07 00:52:36.0	rrt	1.4	0	0	configure.in superceded by configure.ac
/cvsroot/zile/zile/Attic/configure.in	2003-04-24 17:34:32.0	rrt	1.3	7	0	Added check for MAKEINFO (snaffled from OpenAL&apos;s configure.in).
/cvsroot/zile/zile/Attic/configure.in	2003-04-24 17:11:16.0	rrt	1.2	33	10	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/configure.in	2001-01-19 23:00:00.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/configure.in	2001-01-19 23:07:31.0	ssigala	1.1.1.2	1	1	import of version 1.3.
/cvsroot/zile/zile/Attic/configure.in	2001-01-19 23:00:00.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/Attic/install-sh	2004-01-23 03:14:03.0	dacap	1.2	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/Attic/install-sh	2001-01-19 23:00:01.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/install-sh	2001-01-19 23:00:01.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/Attic/mkinsdir.sh	2004-01-23 03:14:03.0	dacap	1.2	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/Attic/mkinsdir.sh	2001-01-19 23:00:01.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/mkinsdir.sh	2001-01-19 23:00:01.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/Attic/move-if-change	2004-01-23 03:14:03.0	dacap	1.2	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/Attic/move-if-change	2001-01-19 23:00:01.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/move-if-change	2001-01-19 23:00:01.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/zile.lnk	2005-01-01 03:03:53.0	rrt	1.2	2	1	Swap link and exe in EPOC package (they don&apos;t work the other way around).
/cvsroot/zile/zile/zile.lnk	2005-01-01 02:25:10.0	rrt	1.1	0	0	Move zile.exe into emx\bin on EPOC, and add a link from C:\ for easyaccess from the System screen. Add the link to the PKG file.
/cvsroot/zile/zile/Attic/zile.lsm	2004-12-19 00:10:28.0	rrt	1.12	0	0	Remove zile.lsm and mentions of sunsite. I can&apos;t be bothered to spendtime putting zile on sunsite (especially tedious is having to updatethe LSM file by hand; if someone implements an automatic solution,I&apos;ll be quite happy to reinstate sunsite).
/cvsroot/zile/zile/Attic/zile.lsm	2004-12-17 15:23:02.0	rrt	1.11	3	3	Update for 2.0-a3.
/cvsroot/zile/zile/Attic/zile.lsm	2004-12-17 01:15:35.0	rrt	1.10	3	3	Update LSM file for 2.0-a2.
/cvsroot/zile/zile/Attic/zile.lsm	2004-11-13 00:09:56.0	rrt	1.9	2	2	Add date and archive size for 2.0-a1.
/cvsroot/zile/zile/Attic/zile.lsm	2004-10-11 03:08:40.0	rrt	1.8	4	4	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/Attic/zile.lsm	2004-02-17 22:01:09.0	ssigala	1.7	3	3	BSD --&gt; GPL
/cvsroot/zile/zile/Attic/zile.lsm	2004-02-05 11:14:42.0	rrt	1.6	2	2	Update the authors list everywhere, and generally rejig to reflectreality.Change bug-reporting address to the zile-devel mailing list.
/cvsroot/zile/zile/Attic/zile.lsm	2003-09-28 20:46:16.0	rrt	1.5	2	4	Update for actual 1.7-b1 beta release.
/cvsroot/zile/zile/Attic/zile.lsm	2003-05-07 00:31:35.0	rrt	1.4	3	3	Update for 1.7-b1.
/cvsroot/zile/zile/Attic/zile.lsm	2003-05-06 16:04:27.0	rrt	1.3	8	8	LSM file needed for sunsite.unc.edu (now ibiblio), so readd.
/cvsroot/zile/zile/Attic/zile.lsm	2003-04-24 17:11:16.0	rrt	1.2	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/Attic/zile.lsm	2001-01-19 23:00:01.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/Attic/zile.lsm	2001-01-19 23:07:31.0	ssigala	1.1.1.2	4	4	import of version 1.3.
/cvsroot/zile/zile/Attic/zile.lsm	2001-01-19 23:00:01.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/zile.pkg	2005-02-15 01:46:27.0	rrt	1.8	1	1	Update versions and copyright year.In zile.h, add an leWipe to tidy up the argument of each DEFUN. Thisdoesn&apos;t actually work yet, because each DEFUN has already returnedbefore this call is reached. Need to change DEFUNs to set a returnvalue (and never return themselves) to fix this...
/cvsroot/zile/zile/zile.pkg	2005-02-14 22:57:47.0	rrt	1.7	1	1	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/zile.pkg	2005-01-01 03:03:53.0	rrt	1.6	2	2	branches:  1.6.2;Swap link and exe in EPOC package (they don&apos;t work the other way around).
/cvsroot/zile/zile/zile.pkg	2005-01-01 02:25:10.0	rrt	1.5	2	1	Move zile.exe into emx\bin on EPOC, and add a link from C:\ for easyaccess from the System screen. Add the link to the PKG file.
/cvsroot/zile/zile/zile.pkg	2004-12-21 01:30:15.0	rrt	1.4	1	1	Improve EPOC packaging: add emxuser.sis to the SIS. Add the files thusused to .cvsignore.
/cvsroot/zile/zile/zile.pkg	2004-12-19 01:49:35.0	rrt	1.3	5	5	Fix paths to docs.
/cvsroot/zile/zile/zile.pkg	2004-12-19 00:28:04.0	rrt	1.2	1	1	First cut of &quot;make dist-epoc&quot;. Currently this just makes the SIS. Itshould make a versioned zip containing a README.
/cvsroot/zile/zile/zile.pkg	2004-12-18 23:37:05.0	rrt	1.1	0	0	Add .pkg file for EPOC.
/cvsroot/zile/zile/zile.pkg	2005-02-16 18:16:52.0	rrt	1.6.2.1	2	2	Bump version to 2.01.
/cvsroot/zile/zile/doc/.cvsignore	2005-01-22 14:09:35.0	rrt	1.6	1	1	Change mentions of zilerc.texi to dotzile.texi.
/cvsroot/zile/zile/doc/.cvsignore	2005-01-12 01:43:40.0	rrt	1.5	1	0	Move man page to doc.
/cvsroot/zile/zile/doc/.cvsignore	2004-12-18 23:09:24.0	rrt	1.4	4	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/doc/.cvsignore	2004-01-28 15:05:28.0	rrt	1.3	2	0	Add Makefile.in and zilerc.texi
/cvsroot/zile/zile/doc/.cvsignore	2003-05-25 23:41:58.0	rrt	1.2	1	0	Add zile.info
/cvsroot/zile/zile/doc/.cvsignore	2003-05-16 17:17:54.0	ssigala	1.1	0	0	added files to ignore configure generated files.
/cvsroot/zile/zile/doc/BANNER.EPOC	2005-02-15 01:46:28.0	rrt	1.2	2	2	Update versions and copyright year.In zile.h, add an leWipe to tidy up the argument of each DEFUN. Thisdoesn&apos;t actually work yet, because each DEFUN has already returnedbefore this call is reached. Need to change DEFUNs to set a returnvalue (and never return themselves) to fix this...
/cvsroot/zile/zile/doc/BANNER.EPOC	2004-12-19 00:28:05.0	rrt	1.1	0	0	branches:  1.1.2;First cut of &quot;make dist-epoc&quot;. Currently this just makes the SIS. Itshould make a versioned zip containing a README.
/cvsroot/zile/zile/doc/BANNER.EPOC	2005-02-15 01:42:04.0	rrt	1.1.2.1	2	2	Update the version number and my copyright year.
/cvsroot/zile/zile/doc/FAQ	2005-02-14 22:57:47.0	rrt	1.7	6	6	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/doc/FAQ	2005-01-23 14:43:36.0	rrt	1.6	5	6	More minor tidying up.
/cvsroot/zile/zile/doc/FAQ	2005-01-23 14:40:58.0	rrt	1.5	54	83	Improve the FAQ.
/cvsroot/zile/zile/doc/FAQ	2005-01-22 13:31:52.0	rrt	1.4	1	4	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/doc/FAQ	2004-12-20 14:53:58.0	rrt	1.3	4	2	branches:  1.3.2;Answer the question about how to display non-English characters.
/cvsroot/zile/zile/doc/FAQ	2004-12-19 00:10:29.0	rrt	1.2	1	5	Remove zile.lsm and mentions of sunsite. I can&apos;t be bothered to spendtime putting zile on sunsite (especially tedious is having to updatethe LSM file by hand; if someone implements an automatic solution,I&apos;ll be quite happy to reinstate sunsite).
/cvsroot/zile/zile/doc/FAQ	2004-12-18 23:09:25.0	rrt	1.1	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/doc/FAQ	2005-01-23 14:44:17.0	rrt	1.3.2.1	57	90	Copy FAQ from CVS HEAD (so far, it fits 2.0).
/cvsroot/zile/zile/doc/Makefile.am	2005-02-05 14:48:15.0	rrt	1.15	4	2	Add C files #included into mkdoc.c as deps, and fix warnings inmkdoc.c compilation.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-23 15:00:58.0	rrt	1.14	2	1	Add basic lisp documentation, based on lithp&apos;s README.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-22 13:31:53.0	rrt	1.13	7	7	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-22 02:00:55.0	rrt	1.12	3	3	Fix mkdoc&apos;s dependencies: mkdoc.o rather than mkdoc itself shoulddepend on the various sources.Remove mkdoc&apos;s dependence on getopt (which might not exist on someplatforms) and remove its command-line options and usage message,which aren&apos;t needed, as it&apos;s only used by the build system.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-13 08:34:16.0	rrt	1.11	2	2	Make mkdoc depend on tbl_funcs.h and tbl_vars.h.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-12 01:43:04.0	rrt	1.10	10	2	Move the man page into the doc directory.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-03 12:11:32.0	rrt	1.9	2	2	Use $(top_srcdir) so that VPATH builds work (specifically for makedistcheck).
/cvsroot/zile/zile/doc/Makefile.am	2005-01-03 04:43:02.0	rrt	1.8	3	2	Add dummy config.h to dist.
/cvsroot/zile/zile/doc/Makefile.am	2005-01-03 04:39:53.0	rrt	1.7	3	2	Add mkdoc.c to the distribution, which had been left out. Thanks toCort Danger Stratton for the report.
/cvsroot/zile/zile/doc/Makefile.am	2004-12-20 19:23:20.0	rrt	1.6	2	2	Add an empty config.h so that the config.h (for the host platform)doesn&apos;t interfere with building mkdoc (for the build platform).Fix some little problems revealed by not having any HAVE_* macrosdefined.
/cvsroot/zile/zile/doc/Makefile.am	2004-12-20 19:14:59.0	rrt	1.5	8	6	First cut of building mkdoc when cross-compiling. At the moment itstill uses config.h, which is BAD.
/cvsroot/zile/zile/doc/Makefile.am	2004-12-19 01:43:16.0	rrt	1.4	1	7	zilerc.texi should not be installed as an info file, because a) it&apos;snot an info file and b) its content is included in zile.info.
/cvsroot/zile/zile/doc/Makefile.am	2004-12-18 23:09:25.0	rrt	1.3	34	3	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/doc/Makefile.am	2004-01-29 04:05:19.0	dacap	1.2	10	2	Added zilerc.texi rules to avoid dependencies of this auto-generatedfile when automake is run.
/cvsroot/zile/zile/doc/Makefile.am	2004-01-23 02:45:50.0	dacap	1.1	0	0	Added the automake support.
/cvsroot/zile/zile/doc/Attic/Makefile.in	2004-01-23 03:14:09.0	dacap	1.4	1	1	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/doc/Attic/Makefile.in	2003-05-07 00:28:40.0	rrt	1.3	3	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/doc/Attic/Makefile.in	2003-04-24 17:11:16.0	rrt	1.2	5	4	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/doc/Attic/Makefile.in	2001-01-19 23:00:01.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/doc/Attic/Makefile.in	2001-01-19 23:07:31.0	ssigala	1.1.1.2	3	9	import of version 1.3.
/cvsroot/zile/zile/doc/Attic/Makefile.in	2001-01-19 23:00:01.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/doc/TUTORIAL	2005-01-23 14:46:35.0	rrt	1.3	1	1	Make a minor improvement.
/cvsroot/zile/zile/doc/TUTORIAL	2005-01-12 00:02:16.0	rrt	1.2	3	19	Remove sentence command stubs and references to the commands in thetutorial. Implementing them is still in the wish list, but when ithappens it will almost certainly not be in C, but Lisp.
/cvsroot/zile/zile/doc/TUTORIAL	2004-12-18 23:09:25.0	rrt	1.1	0	0	branches:  1.1.2;Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/doc/TUTORIAL	2005-01-23 14:48:54.0	rrt	1.1.2.1	1	1	Minor fix.
/cvsroot/zile/zile/doc/config.h	2005-01-03 12:39:32.0	rrt	1.3	5	0	Get rid of warnings while compiling mkdoc.
/cvsroot/zile/zile/doc/config.h	2004-12-20 19:51:29.0	rrt	1.2	3	1	Fix a bug where a buffer could end up without a line ending setting.Acknowledge Richard Smith&apos;s help with cross-compiling.
/cvsroot/zile/zile/doc/config.h	2004-12-20 19:23:20.0	rrt	1.1	0	0	Add an empty config.h so that the config.h (for the host platform)doesn&apos;t interfere with building mkdoc (for the build platform).Fix some little problems revealed by not having any HAVE_* macrosdefined.
/cvsroot/zile/zile/doc/dotzile.sample	2005-02-14 22:57:47.0	rrt	1.3	1	1	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/doc/dotzile.sample	2005-02-08 00:10:34.0	rrt	1.2	23	20	Document kill-whole-line and move backup settings to the end.
/cvsroot/zile/zile/doc/dotzile.sample	2005-01-22 13:31:53.0	rrt	1.1	0	0	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/doc/lisp.txt	2005-01-23 15:00:58.0	rrt	1.1	0	0	Add basic lisp documentation, based on lithp&apos;s README.
/cvsroot/zile/zile/doc/mkdoc.c	2005-02-05 14:48:15.0	rrt	1.7	2	2	Add C files #included into mkdoc.c as deps, and fix warnings inmkdoc.c compilation.
/cvsroot/zile/zile/doc/mkdoc.c	2005-01-22 02:03:07.0	rrt	1.6	87	94	Reformat code.Fix a preprocessor typo.
/cvsroot/zile/zile/doc/mkdoc.c	2005-01-22 02:00:56.0	rrt	1.5	1	31	Fix mkdoc&apos;s dependencies: mkdoc.o rather than mkdoc itself shoulddepend on the various sources.Remove mkdoc&apos;s dependence on getopt (which might not exist on someplatforms) and remove its command-line options and usage message,which aren&apos;t needed, as it&apos;s only used by the build system.
/cvsroot/zile/zile/doc/mkdoc.c	2005-01-03 12:39:32.0	rrt	1.4	5	5	Get rid of warnings while compiling mkdoc.
/cvsroot/zile/zile/doc/mkdoc.c	2004-12-20 19:23:20.0	rrt	1.3	2	2	Add an empty config.h so that the config.h (for the host platform)doesn&apos;t interfere with building mkdoc (for the build platform).Fix some little problems revealed by not having any HAVE_* macrosdefined.
/cvsroot/zile/zile/doc/mkdoc.c	2004-12-20 19:14:59.0	rrt	1.2	7	2	First cut of building mkdoc when cross-compiling. At the moment itstill uses config.h, which is BAD.
/cvsroot/zile/zile/doc/mkdoc.c	2004-12-18 23:09:25.0	rrt	1.1	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/doc/Attic/texinfo.tex	2004-12-18 23:27:20.0	rrt	1.4	0	0	texinfo.tex should not be in the repository (it comes with automake).It does still go in the distribution, of course.
/cvsroot/zile/zile/doc/Attic/texinfo.tex	2003-05-07 00:28:40.0	rrt	1.3	249	41	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/doc/Attic/texinfo.tex	2003-04-24 17:11:16.0	rrt	1.2	2168	1660	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/doc/Attic/texinfo.tex	2001-01-19 23:00:56.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/doc/Attic/texinfo.tex	2001-01-19 23:00:56.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/doc/zile.1.in	2005-02-14 22:57:47.0	rrt	1.2	3	3	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/doc/zile.1.in	2005-01-12 01:43:04.0	rrt	1.1	0	0	Move the man page into the doc directory.
/cvsroot/zile/zile/doc/Attic/zile.info	2003-05-20 00:04:48.0	rrt	1.6	0	0	Remove generated files from CVS. Yeah, I know, we probably want themin source tarballs, but that&apos;s fine, you do a &quot;make; make distclean&quot;and then make the tarball.
/cvsroot/zile/zile/doc/Attic/zile.info	2003-05-16 17:19:42.0	ssigala	1.5	0	0	regenerated configure with the latest autoconf.the info file should be included into the distribution(makeinfo may be unavailable on user machine).
/cvsroot/zile/zile/doc/Attic/zile.info	2003-05-07 00:40:51.0	rrt	1.4	0	0	Remove inessential file from the repo.
/cvsroot/zile/zile/doc/Attic/zile.info	2003-05-07 00:28:41.0	rrt	1.3	315	178	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/doc/Attic/zile.info	2003-04-24 17:11:16.0	rrt	1.2	143	67	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/doc/Attic/zile.info	2001-01-19 23:01:08.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/doc/Attic/zile.info	2001-01-19 23:07:54.0	ssigala	1.1.1.2	190	382	import of version 1.3.
/cvsroot/zile/zile/doc/Attic/zile.info	2001-01-19 23:01:08.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/doc/zile.texi	2005-02-14 22:57:47.0	rrt	1.33	2	2	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/doc/zile.texi	2005-02-08 00:14:29.0	rrt	1.32	4	5	Fix some English.
/cvsroot/zile/zile/doc/zile.texi	2005-02-06 13:22:30.0	rrt	1.31	2	6	Update binding for list-buffers.
/cvsroot/zile/zile/doc/zile.texi	2005-02-06 09:47:32.0	rrt	1.30	7	13	Document where-is and kill-whole-line.
/cvsroot/zile/zile/doc/zile.texi	2005-01-22 14:09:35.0	rrt	1.29	1	1	Change mentions of zilerc.texi to dotzile.texi.
/cvsroot/zile/zile/doc/zile.texi	2005-01-22 13:31:53.0	rrt	1.28	25	44	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/doc/zile.texi	2005-01-18 22:19:15.0	rrt	1.27	2	13	Remove switch-to-correlated-buffer docs, as the function no longerexists.Other minor fixes.
/cvsroot/zile/zile/doc/zile.texi	2005-01-13 08:34:16.0	rrt	1.26	3	3	Make mkdoc depend on tbl_funcs.h and tbl_vars.h.
/cvsroot/zile/zile/doc/zile.texi	2005-01-12 02:02:11.0	rrt	1.25	3	3	Update my copyright dates to 2005.
/cvsroot/zile/zile/doc/zile.texi	2005-01-09 00:20:33.0	rrt	1.24	0	6	Remove -f and -v command-line flags. They&apos;re rarely useful and willeventually be replaced with --eval (when we have a Lisp interpreter).
/cvsroot/zile/zile/doc/zile.texi	2004-12-18 22:50:08.0	rrt	1.23	0	2	branches:  1.23.2;Remove key abbreviations SFT and CTL (for Shift and Control) which arenot actually used in the documentation.
/cvsroot/zile/zile/doc/zile.texi	2004-12-17 12:53:28.0	rrt	1.22	18	11	Document open-line and line end auto-detection.Add a pointer to the SourceForge trackers for bug reports.Add Reuben Thomas and David A. Capello to the list of zile authors.
/cvsroot/zile/zile/doc/zile.texi	2004-11-14 22:57:54.0	rrt	1.21	0	4	Remove novice-mode, and always add string to *scratch* buffer, asEmacs does.
/cvsroot/zile/zile/doc/zile.texi	2004-11-14 22:52:27.0	rrt	1.20	2	10	Really extirpate mini help.
/cvsroot/zile/zile/doc/zile.texi	2004-11-14 22:39:48.0	rrt	1.19	0	8	Remove last vestiges of minihelp.
/cvsroot/zile/zile/doc/zile.texi	2004-10-11 03:21:00.0	rrt	1.18	0	27	Remove the rest of the docs and code pertaining to displayable-chars.
/cvsroot/zile/zile/doc/zile.texi	2004-10-11 03:08:41.0	rrt	1.17	1	3	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/doc/zile.texi	2004-10-08 15:30:43.0	rrt	1.16	0	12	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/doc/zile.texi	2004-10-05 20:51:10.0	rrt	1.15	0	63	Remove support for putting the time in the status bar. This featureinvolved a lot of (sometimes tricky) code for very little return interms of functionality.
/cvsroot/zile/zile/doc/zile.texi	2004-05-09 20:07:41.0	rrt	1.14	0	3	Remove documentation for show-eob-marker, which I&apos;ve removed.
/cvsroot/zile/zile/doc/zile.texi	2004-04-05 19:30:35.0	rrt	1.13	0	2	Remove text-mode, which no longer does anything.
/cvsroot/zile/zile/doc/zile.texi	2004-04-05 19:18:14.0	rrt	1.12	7	67	Remove mail mode mentions in documentation.Change the variable text-mode-auto-fill to auto-fill-mode.
/cvsroot/zile/zile/doc/zile.texi	2004-04-04 22:33:12.0	rrt	1.11	0	14	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/doc/zile.texi	2004-04-04 21:48:52.0	rrt	1.10	1	17	Remove &quot;revision&quot; mode of backup, which is just bloat. Again, if youwant this level of functionality, use a bigger editor.
/cvsroot/zile/zile/doc/zile.texi	2004-03-10 16:16:26.0	rrt	1.9	9	10	Minor fixes, and change email address to zile-devel list.
/cvsroot/zile/zile/doc/zile.texi	2004-02-17 21:21:17.0	ssigala	1.8	1	1	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/doc/zile.texi	2004-02-15 03:03:19.0	dacap	1.7	35	1	Added documentation for key bindings of new functions.
/cvsroot/zile/zile/doc/zile.texi	2004-02-14 10:29:04.0	dacap	1.6	68	0	Added documentation for the new functions.
/cvsroot/zile/zile/doc/zile.texi	2004-02-08 05:39:26.0	dacap	1.5	15	4	Rewritten point/marker API mainly.
/cvsroot/zile/zile/doc/zile.texi	2003-10-25 01:32:08.0	ssigala	1.4	17	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/doc/zile.texi	2003-05-07 00:28:41.0	rrt	1.3	230	132	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/doc/zile.texi	2003-04-24 17:11:16.0	rrt	1.2	99	33	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/doc/zile.texi	2001-01-19 23:01:22.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/doc/zile.texi	2001-01-19 23:07:54.0	ssigala	1.1.1.2	165	320	import of version 1.3.
/cvsroot/zile/zile/doc/zile.texi	2001-01-19 23:01:22.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/doc/zile.texi	2005-02-06 09:44:57.0	rrt	1.23.2.2	0	11	Remove documentation for syntax colouring mode commands.
/cvsroot/zile/zile/doc/zile.texi	2005-01-18 21:53:51.0	rrt	1.23.2.1	12	23	Remove switch-to-correlated-buffer, which no longer exists.Remove references to function keys, which currently don&apos;t work intermcap (the most common back-end).Other small fixes.
/cvsroot/zile/zile/doc/Attic/zilerc.sample	2005-01-22 13:31:53.0	rrt	1.2	0	0	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/doc/Attic/zilerc.sample	2004-12-18 23:09:25.0	rrt	1.1	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2004-01-23 03:14:17.0	dacap	1.5	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2003-10-25 01:32:08.0	ssigala	1.4	1	0	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2003-05-07 00:28:41.0	rrt	1.3	29	7	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2003-04-24 17:11:17.0	rrt	1.2	10	8	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2001-01-19 23:01:23.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2001-01-19 23:07:55.0	ssigala	1.1.1.2	7	10	import of version 1.3.
/cvsroot/zile/zile/doc/Attic/zilerc.texi	2001-01-19 23:01:23.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/doc/zlint	2004-12-18 23:09:25.0	rrt	1.1	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/.cvsignore	2004-12-18 23:09:25.0	rrt	1.4	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/.cvsignore	2004-12-18 22:46:04.0	rrt	1.3	1	1	Remove TeX file types as we no longer have any TeX documents.
/cvsroot/zile/zile/etc/Attic/.cvsignore	2004-01-28 15:07:49.0	rrt	1.2	4	0	Added .deps, Makefile.in, HELP and *.log *.aux *.dvi *.ps
/cvsroot/zile/zile/etc/Attic/.cvsignore	2003-05-16 17:17:54.0	ssigala	1.1	0	0	added files to ignore configure generated files.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-12-18 23:09:25.0	rrt	1.16	1	1	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/FAQ	2004-12-17 12:51:24.0	rrt	1.15	8	7	Mention the EPOC port.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-10-16 22:36:50.0	rrt	1.14	24	15	Remove LATEST_VERSION and associated command and replace it with aquestion in the FAQ.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-10-11 03:21:00.0	rrt	1.13	2	4	Remove the rest of the docs and code pertaining to displayable-chars.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-10-11 03:08:42.0	rrt	1.12	11	23	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/etc/Attic/FAQ	2004-10-08 15:30:45.0	rrt	1.11	15	25	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-04-05 19:30:35.0	rrt	1.10	3	3	Remove text-mode, which no longer does anything.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-04-05 19:18:14.0	rrt	1.9	10	6	Remove mail mode mentions in documentation.Change the variable text-mode-auto-fill to auto-fill-mode.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-04-04 22:33:12.0	rrt	1.8	95	189	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-03-14 15:36:06.0	rrt	1.7	4	4	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-02-17 21:21:17.0	ssigala	1.6	6	33	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/etc/Attic/FAQ	2004-02-14 23:19:02.0	ssigala	1.5	2	2	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/etc/Attic/FAQ	2003-10-25 01:32:08.0	ssigala	1.4	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/etc/Attic/FAQ	2003-05-07 00:28:41.0	rrt	1.3	75	14	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/FAQ	2003-04-24 17:11:17.0	rrt	1.2	186	67	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/FAQ	2001-01-19 23:01:24.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/FAQ	2001-01-19 23:07:55.0	ssigala	1.1.1.2	85	175	import of version 1.3.
/cvsroot/zile/zile/etc/Attic/FAQ	2001-01-19 23:01:24.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/HELP	2004-01-23 03:14:33.0	dacap	1.5	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/etc/Attic/HELP	2003-10-25 01:32:08.0	ssigala	1.4	23	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/etc/Attic/HELP	2003-05-07 00:28:41.0	rrt	1.3	300	150	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/HELP	2003-04-24 17:11:17.0	rrt	1.2	132	50	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/HELP	2001-01-19 23:01:35.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/HELP	2001-01-19 23:07:57.0	ssigala	1.1.1.2	177	369	import of version 1.3.
/cvsroot/zile/zile/etc/Attic/HELP	2001-01-19 23:01:35.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/HELPWIN	2003-05-07 00:38:42.0	rrt	1.2	0	0	These files don&apos;t seem to be used in 1.7-b1; I&apos;m not sure where theycame from, as they don&apos;t seem to be used in 1.6.x either.
/cvsroot/zile/zile/etc/Attic/HELPWIN	2001-01-19 23:01:35.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/HELPWIN	2001-01-19 23:01:35.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/HELPWINALT	2003-05-07 00:38:42.0	rrt	1.2	0	0	These files don&apos;t seem to be used in 1.7-b1; I&apos;m not sure where theycame from, as they don&apos;t seem to be used in 1.6.x either.
/cvsroot/zile/zile/etc/Attic/HELPWINALT	2001-01-19 23:01:35.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/HELPWINALT	2001-01-19 23:01:35.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/LATEST_VERSION	2004-10-16 22:36:50.0	rrt	1.4	0	0	Remove LATEST_VERSION and associated command and replace it with aquestion in the FAQ.
/cvsroot/zile/zile/etc/Attic/LATEST_VERSION	2004-02-17 22:05:49.0	ssigala	1.3	3	7	update URL
/cvsroot/zile/zile/etc/Attic/LATEST_VERSION	2003-04-24 17:11:17.0	rrt	1.2	7	6	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/LATEST_VERSION	2001-01-19 23:01:35.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/LATEST_VERSION	2001-01-19 23:01:35.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/MINIHELP1	2004-11-14 22:34:55.0	rrt	1.4	0	0	Remove minihelp files and functions. They are a pain to maintain,they&apos;re not Emacs-like, and this editor is not designed for novices(who should use nano or something similar).
/cvsroot/zile/zile/etc/Attic/MINIHELP1	2004-11-14 22:25:50.0	rrt	1.3	2	2	Replace most function key bindings with C-h bindings, so they apply tomachines without F keys (except F10, because at the moment thealternative is C-h C-h, which would be incorrectly changed to M-h M-hunder alternative-bindings).
/cvsroot/zile/zile/etc/Attic/MINIHELP1	2003-05-07 00:28:41.0	rrt	1.2	1	1	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/MINIHELP1	2003-04-24 17:11:17.0	rrt	1.1	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/MINIHELP2	2004-11-14 22:34:55.0	rrt	1.2	0	0	Remove minihelp files and functions. They are a pain to maintain,they&apos;re not Emacs-like, and this editor is not designed for novices(who should use nano or something similar).
/cvsroot/zile/zile/etc/Attic/MINIHELP2	2003-04-24 17:11:17.0	rrt	1.1	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/MINIHELP3	2004-11-14 22:34:55.0	rrt	1.2	0	0	Remove minihelp files and functions. They are a pain to maintain,they&apos;re not Emacs-like, and this editor is not designed for novices(who should use nano or something similar).
/cvsroot/zile/zile/etc/Attic/MINIHELP3	2003-04-24 17:11:17.0	rrt	1.1	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-12-18 23:09:25.0	rrt	1.11	1	1	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-12-18 22:54:03.0	rrt	1.10	1	2	Remove pointless file etc/rationale, which just repeats information indoc/zile.texi.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-11-15 02:01:20.0	rrt	1.9	2	2	Add vasprintf.o to object files needed for mkdoc. (This is OK, as evenwhen vasprintf is available on the system, vasprintf.c is compiled toproduce an empty object file).
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-11-15 01:47:12.0	rrt	1.8	3	6	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-11-14 22:39:48.0	rrt	1.7	1	7	Remove last vestiges of minihelp.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-11-14 21:34:11.0	rrt	1.6	2	7	Remove refcard. It is not that useful, and it is a pain to keep insync with tbl_funcs.h (there are already three files that must be keptin sync, and at the moment they are not up to date; sigh).
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-11-14 20:19:48.0	rrt	1.5	1	6	Don&apos;t add a note to the text version of the manual saying &quot;Pleaseconsider reading the info version&quot;. This could confuse users ofsystems that don&apos;t have info (especially those like EPOC for whichinfo either doesn&apos;t exist or is not a standard tool).
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-11-01 22:33:16.0	rrt	1.4	2	2	Add *.ps *.dvi *.aux *.log to clean-local so that LaTeX output is removed.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-10-16 22:36:50.0	rrt	1.3	1	3	Remove LATEST_VERSION and associated command and replace it with aquestion in the FAQ.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-03-13 17:26:19.0	rrt	1.2	2	2	Set AM_CFLAGS rather than CFLAGS, which means that the user&apos;s CFLAGSsettings get put into the Makefile.
/cvsroot/zile/zile/etc/Attic/Makefile.am	2004-01-23 02:45:57.0	dacap	1.1	0	0	Added the automake support.
/cvsroot/zile/zile/etc/Attic/Makefile.in	2004-01-23 03:14:35.0	dacap	1.4	1	1	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/etc/Attic/Makefile.in	2003-05-07 00:28:41.0	rrt	1.3	6	6	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/Makefile.in	2003-04-24 17:11:17.0	rrt	1.2	17	10	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/Makefile.in	2001-01-19 23:01:36.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/Makefile.in	2001-01-19 23:07:57.0	ssigala	1.1.1.2	5	13	import of version 1.3.
/cvsroot/zile/zile/etc/Attic/Makefile.in	2001-01-19 23:01:36.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/TUTORIAL	2004-12-18 23:09:25.0	rrt	1.5	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/TUTORIAL	2004-04-05 19:30:35.0	rrt	1.4	4	25	Remove text-mode, which no longer does anything.
/cvsroot/zile/zile/etc/Attic/TUTORIAL	2003-05-07 00:28:41.0	rrt	1.3	527	185	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/TUTORIAL	2003-04-24 17:11:17.0	rrt	1.2	1	1	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/TUTORIAL	2001-01-19 23:01:41.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/TUTORIAL	2001-01-19 23:01:41.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-12-18 23:09:25.0	rrt	1.10	1	1	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-11-15 13:36:13.0	rrt	1.9	2	2	Add stub zile_exit function to tests and mkdoc so they can use zmallocand friends. This is ugly, but the simplest thing I can think of.Add tests to src/.cvsignore.Add the object files the tests need to src/Makefile.am.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-11-15 01:47:12.0	rrt	1.8	9	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-03-30 00:47:01.0	rrt	1.7	4	4	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-03-13 17:31:20.0	rrt	1.6	8	10	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-03-11 14:50:13.0	rrt	1.5	5	3	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2004-03-10 14:01:12.0	rrt	1.4	3	3	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2003-05-07 00:28:41.0	rrt	1.3	42	35	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2003-04-24 17:11:17.0	rrt	1.2	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2001-01-19 23:01:43.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2001-01-19 23:08:00.0	ssigala	1.1.1.2	60	19	import of version 1.3.
/cvsroot/zile/zile/etc/Attic/mkdoc.c	2001-01-19 23:01:43.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/rationale	2004-12-18 22:54:03.0	rrt	1.4	0	0	Remove pointless file etc/rationale, which just repeats information indoc/zile.texi.
/cvsroot/zile/zile/etc/Attic/rationale	2004-12-18 22:50:08.0	rrt	1.3	0	2	Remove key abbreviations SFT and CTL (for Shift and Control) which arenot actually used in the documentation.
/cvsroot/zile/zile/etc/Attic/rationale	2004-02-17 21:21:17.0	ssigala	1.2	0	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/etc/Attic/rationale	2001-01-19 23:01:43.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/rationale	2001-01-19 23:01:43.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/refcard.ps	2004-01-23 03:14:35.0	dacap	1.2	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/etc/Attic/refcard.ps	2003-04-24 17:11:17.0	rrt	1.1	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/refcard.tex	2004-11-14 21:34:11.0	rrt	1.2	0	0	Remove refcard. It is not that useful, and it is a pain to keep insync with tbl_funcs.h (there are already three files that must be keptin sync, and at the moment they are not up to date; sigh).
/cvsroot/zile/zile/etc/Attic/refcard.tex	2003-04-24 17:11:17.0	rrt	1.1	0	0	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-12-18 23:09:25.0	rrt	1.15	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-11-14 22:57:54.0	rrt	1.14	0	4	Remove novice-mode, and always add string to *scratch* buffer, asEmacs does.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-11-14 22:52:27.0	rrt	1.13	1	2	Really extirpate mini help.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-10-11 03:21:00.0	rrt	1.12	0	7	Remove the rest of the docs and code pertaining to displayable-chars.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-10-08 15:30:45.0	rrt	1.11	0	11	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-10-05 20:51:12.0	rrt	1.10	0	5	Remove support for putting the time in the status bar. This featureinvolved a lot of (sometimes tricky) code for very little return interms of functionality.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-05-09 20:07:41.0	rrt	1.9	0	4	Remove documentation for show-eob-marker, which I&apos;ve removed.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-04-05 19:18:14.0	rrt	1.8	2	7	Remove mail mode mentions in documentation.Change the variable text-mode-auto-fill to auto-fill-mode.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-04-04 22:33:12.0	rrt	1.7	1	30	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-04-04 21:48:53.0	rrt	1.6	1	18	Remove &quot;revision&quot; mode of backup, which is just bloat. Again, if youwant this level of functionality, use a bigger editor.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2004-02-08 05:39:26.0	dacap	1.5	16	5	Rewritten point/marker API mainly.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2003-10-25 01:32:08.0	ssigala	1.4	1	0	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2003-05-07 00:28:41.0	rrt	1.3	29	7	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2003-04-24 17:11:17.0	rrt	1.2	10	8	Commit the 1.6.2 sources so far.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2001-01-19 23:01:44.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2001-01-19 23:08:00.0	ssigala	1.1.1.2	7	10	import of version 1.3.
/cvsroot/zile/zile/etc/Attic/zilerc.sample	2001-01-19 23:01:44.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/etc/Attic/zlint	2004-12-18 23:09:25.0	rrt	1.5	0	0	Fold the contents of etc/ into doc/, where it sensibly belongs (it&apos;sall documentation!).
/cvsroot/zile/zile/etc/Attic/zlint	2004-11-15 01:43:07.0	rrt	1.4	0	14	Remove references to modes.
/cvsroot/zile/zile/etc/Attic/zlint	2003-10-25 01:32:08.0	ssigala	1.3	6	0	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/etc/Attic/zlint	2003-09-28 21:14:27.0	rrt	1.2	5	5	Whitespace cleanup.
/cvsroot/zile/zile/etc/Attic/zlint	2003-05-07 00:28:41.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/.cvsignore	2004-11-15 13:33:52.0	rrt	1.4	0	0	Remove last file in lib/
/cvsroot/zile/zile/lib/Attic/.cvsignore	2004-10-14 02:49:37.0	rrt	1.3	1	0	Make the tests be built by make check.Make two non-API functions, one in astr.c and one in alist.c, static.Fix some minor bugs in htable.c revealed by the tests, and remove theunused API function htable_remove. If this is needed in future itshould be implemented better (e.g. by having htable_store remove abucket if the value is set to NULL).Add the test programs to .cvsignore.
/cvsroot/zile/zile/lib/Attic/.cvsignore	2004-01-28 15:08:34.0	rrt	1.2	2	0	Added .deps and Makefile.in
/cvsroot/zile/zile/lib/Attic/.cvsignore	2003-05-16 17:17:54.0	ssigala	1.1	0	0	added files to ignore configure generated files.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-11-15 01:47:12.0	rrt	1.10	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-10-14 02:49:37.0	rrt	1.9	13	1	Make the tests be built by make check.Make two non-API functions, one in astr.c and one in alist.c, static.Fix some minor bugs in htable.c revealed by the tests, and remove theunused API function htable_remove. If this is needed in future itshould be implemented better (e.g. by having htable_store remove abucket if the value is set to NULL).Add the test programs to .cvsignore.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-03-13 21:32:58.0	rrt	1.8	2	4	Remove all traces of manpages.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-03-13 18:27:50.0	rrt	1.7	3	3	Remove unused and underused alist functions, move documentation intoalist.h and get rid of alist.3.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-03-13 17:50:34.0	rrt	1.6	3	3	Remove astr.3 which no longer exists.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-03-10 14:01:12.0	rrt	1.5	2	1	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-03-09 13:40:22.0	rrt	1.4	3	1	Add vector.c and vector.h.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-02-17 21:21:17.0	ssigala	1.3	1	3	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-02-14 23:19:02.0	ssigala	1.2	11	2	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/lib/Attic/Makefile.am	2004-01-23 02:46:12.0	dacap	1.1	0	0	Added the automake support.
/cvsroot/zile/zile/lib/Attic/Makefile.in	2004-01-23 03:14:42.0	dacap	1.5	1	1	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/lib/Attic/Makefile.in	2003-05-19 23:50:23.0	rrt	1.4	3	2	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/lib/Attic/Makefile.in	2003-05-07 00:28:41.0	rrt	1.3	4	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/Makefile.in	2003-04-24 17:11:58.0	rrt	1.2	7	3	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/Makefile.in	2001-01-19 23:01:44.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/lib/Attic/Makefile.in	2001-01-19 23:08:00.0	ssigala	1.1.1.2	1	6	import of version 1.3.
/cvsroot/zile/zile/lib/Attic/Makefile.in	2001-01-19 23:01:44.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/lib/Attic/agetcwd.c	2004-11-15 01:47:12.0	rrt	1.6	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/agetcwd.c	2004-03-30 00:47:01.0	rrt	1.5	2	2	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/lib/Attic/agetcwd.c	2004-02-17 21:21:17.0	ssigala	1.4	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/agetcwd.c	2003-10-25 01:32:08.0	ssigala	1.3	10	7	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/lib/Attic/agetcwd.c	2003-10-01 00:51:53.0	rrt	1.2	7	2	Cope with error conditions returned by getcwd
/cvsroot/zile/zile/lib/Attic/agetcwd.c	2003-05-19 23:51:54.0	rrt	1.1	0	0	These files were added as part of the removal of pathbuffer_t.char *agetcwd(void)returns the cwd in a malloced string.
/cvsroot/zile/zile/lib/Attic/agetcwd.h	2004-11-15 01:47:12.0	rrt	1.4	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/agetcwd.h	2004-02-17 21:21:17.0	ssigala	1.3	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/agetcwd.h	2003-10-25 01:32:08.0	ssigala	1.2	4	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/lib/Attic/agetcwd.h	2003-05-19 23:51:54.0	rrt	1.1	0	0	These files were added as part of the removal of pathbuffer_t.char *agetcwd(void)returns the cwd in a malloced string.
/cvsroot/zile/zile/lib/Attic/alist.3	2004-03-13 18:27:50.0	rrt	1.5	1	1	Remove unused and underused alist functions, move documentation intoalist.h and get rid of alist.3.
/cvsroot/zile/zile/lib/Attic/alist.3	2004-03-09 23:37:19.0	rrt	1.4	3	3	Whitespace correction.
/cvsroot/zile/zile/lib/Attic/alist.3	2003-10-25 01:32:08.0	ssigala	1.3	3	3	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/lib/Attic/alist.3	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/alist.3	2003-04-24 17:11:58.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/alist.c	2004-11-15 01:47:12.0	rrt	1.8	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/alist.c	2004-10-14 02:49:37.0	rrt	1.7	3	3	Make the tests be built by make check.Make two non-API functions, one in astr.c and one in alist.c, static.Fix some minor bugs in htable.c revealed by the tests, and remove theunused API function htable_remove. If this is needed in future itshould be implemented better (e.g. by having htable_store remove abucket if the value is set to NULL).Add the test programs to .cvsignore.
/cvsroot/zile/zile/lib/Attic/alist.c	2004-03-13 21:07:00.0	rrt	1.6	9	17	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/lib/Attic/alist.c	2004-03-13 18:27:50.0	rrt	1.5	7	106	Remove unused and underused alist functions, move documentation intoalist.h and get rid of alist.3.
/cvsroot/zile/zile/lib/Attic/alist.c	2004-03-09 23:36:55.0	rrt	1.4	3	3	Formatting correction.
/cvsroot/zile/zile/lib/Attic/alist.c	2004-02-17 21:21:18.0	ssigala	1.3	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/alist.c	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/alist.c	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/alist.h	2004-11-15 01:47:12.0	rrt	1.7	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/alist.h	2004-03-13 21:07:00.0	rrt	1.6	4	2	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/lib/Attic/alist.h	2004-03-13 18:27:50.0	rrt	1.5	87	30	Remove unused and underused alist functions, move documentation intoalist.h and get rid of alist.3.
/cvsroot/zile/zile/lib/Attic/alist.h	2004-02-17 21:21:18.0	ssigala	1.4	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/alist.h	2004-01-29 03:59:22.0	dacap	1.3	2	2	Fixed the alist_last macro.
/cvsroot/zile/zile/lib/Attic/alist.h	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/alist.h	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-13 17:44:29.0	rrt	1.13	0	0	Move the rest of astr.3 into astr.h. After some thought I removed theexamples from the documentation for three reasons:1. This is not trying to be a general purpose library (though it&apos;s   still doing a pretty good job IMO!)2. It&apos;s very easy for example code to suffer bit-rot or even just have   bugs in because it&apos;s never compiled.3. There are plenty of examples in zile itself. If a function isn&apos;t   used it should be deleted anyway.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-13 17:31:20.0	rrt	1.12	4	68	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-13 14:26:15.0	rrt	1.11	0	67	Get rid of castr and replace it with const astr, which isself-documenting, and used rarely enough that having a specific aliasis not worthwhile.Get rid of ENLARGE_FACTOR which wasn&apos;t used.Add static astr_pos(), which turns negative positions into positivefor those routines that take a pos parameter. Instead of truncatingthe given pos to the actual size of the string, it asserts that it isin range; I&apos;ll see if this causes problems and take appropriateaction. It does seem preferable to allowing bad positions, though.Add astr_char, to return the address of a given character.Remove astr_last_char (replaced with *astr_char(as ,-1)).Moved more documentation to astr.h from astr.3.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-11 14:50:14.0	rrt	1.10	0	134	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-10 16:15:43.0	rrt	1.9	4	20	Remove more unused functions.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-10 14:27:12.0	rrt	1.8	1	26	Remove more rarely used and unused functions from astr.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-10 14:01:12.0	rrt	1.7	8	61	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/lib/Attic/astr.3	2004-03-09 17:30:35.0	rrt	1.6	3	3	Whitespace correction.
/cvsroot/zile/zile/lib/Attic/astr.3	2003-10-25 01:32:08.0	ssigala	1.5	17	1	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/lib/Attic/astr.3	2003-05-25 23:23:24.0	rrt	1.4	1	14	Remove the ugly astr_delete_struct_only function and dangerousastr_str function/macro.
/cvsroot/zile/zile/lib/Attic/astr.3	2003-05-19 23:50:23.0	rrt	1.3	44	4	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/lib/Attic/astr.3	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/astr.3	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-11-15 01:47:12.0	rrt	1.26	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-10-14 02:49:37.0	rrt	1.25	2	3	Make the tests be built by make check.Make two non-API functions, one in astr.c and one in alist.c, static.Fix some minor bugs in htable.c revealed by the tests, and remove theunused API function htable_remove. If this is needed in future itshould be implemented better (e.g. by having htable_store remove abucket if the value is set to NULL).Add the test programs to .cvsignore.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-10-06 18:28:14.0	rrt	1.24	126	34	Re-add some functions from earlier versions of the library that we nowneed again, but simplify the implementations.Bring the tests back up to date and ensure they&apos;re all workingproperly.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-07-28 03:18:51.0	dacap	1.23	3	2	Fixed a little memory leak in the TEST. No big deal.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-05-02 08:17:18.0	rrt	1.22	8	8	Fix tabification.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-04-23 22:34:55.0	rrt	1.21	23	23	Rename the size and maxsize fields of the astr structure to len andmaxlen (makes more sense).Fix a comment typo in astr.h.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-04-05 18:01:51.0	rrt	1.20	5	47	Remove unused replace functions.Simplify astr_substr.Fix astr_cat_x so that it always null-terminates the string.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-30 00:47:01.0	rrt	1.19	19	14	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-13 21:07:00.0	rrt	1.18	3	6	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-13 17:31:20.0	rrt	1.17	7	27	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-13 14:26:15.0	rrt	1.16	26	31	Get rid of castr and replace it with const astr, which isself-documenting, and used rarely enough that having a specific aliasis not worthwhile.Get rid of ENLARGE_FACTOR which wasn&apos;t used.Add static astr_pos(), which turns negative positions into positivefor those routines that take a pos parameter. Instead of truncatingthe given pos to the actual size of the string, it asserts that it isin range; I&apos;ll see if this causes problems and take appropriateaction. It does seem preferable to allowing bad positions, though.Add astr_char, to return the address of a given character.Remove astr_last_char (replaced with *astr_char(as ,-1)).Moved more documentation to astr.h from astr.3.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-11 14:50:14.0	rrt	1.15	3	114	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-10 16:15:45.0	rrt	1.14	1	36	Remove more unused functions.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-10 14:27:12.0	rrt	1.13	3	32	Remove more rarely used and unused functions from astr.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-10 14:01:12.0	rrt	1.12	6	98	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-03-09 17:11:30.0	rrt	1.11	2	1	#include stdio.h for vasprintf.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-02-18 00:20:33.0	rrt	1.10	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/lib/Attic/astr.c	2004-02-17 21:21:18.0	ssigala	1.9	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-10-25 01:32:08.0	ssigala	1.8	21	1	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-06-24 16:00:20.0	rrt	1.7	3	1	Add missing return value to astr_fmt and astr_vfmt
/cvsroot/zile/zile/lib/Attic/astr.c	2003-06-24 11:42:13.0	rrt	1.6	7	3	Don&apos;t use non-standard initialisers.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-05-25 23:38:49.0	rrt	1.5	1	21	Reinstate change I lost earlier that assumes we have vasprintf.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-05-25 23:23:24.0	rrt	1.4	1	16	Remove the ugly astr_delete_struct_only function and dangerousastr_str function/macro.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-05-19 23:50:23.0	rrt	1.3	63	29	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-05-07 00:28:41.0	rrt	1.2	3	1	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/astr.c	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-11-15 01:47:12.0	rrt	1.20	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-10-06 18:28:14.0	rrt	1.19	24	3	Re-add some functions from earlier versions of the library that we nowneed again, but simplify the implementations.Bring the tests back up to date and ensure they&apos;re all workingproperly.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-04-23 22:34:55.0	rrt	1.18	9	9	Rename the size and maxsize fields of the astr structure to len andmaxlen (makes more sense).Fix a comment typo in astr.h.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-04-05 18:01:51.0	rrt	1.17	1	8	Remove unused replace functions.Simplify astr_substr.Fix astr_cat_x so that it always null-terminates the string.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-30 00:47:01.0	rrt	1.16	9	8	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-13 18:26:40.0	rrt	1.15	5	3	Tidy up slightly (no code changes).
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-13 17:44:46.0	rrt	1.14	29	34	Move the rest of astr.3 into astr.h. After some thought I removed theexamples from the documentation for three reasons:1. This is not trying to be a general purpose library (though it&apos;s   still doing a pretty good job IMO!)2. It&apos;s very easy for example code to suffer bit-rot or even just have   bugs in because it&apos;s never compiled.3. There are plenty of examples in zile itself. If a function isn&apos;t   used it should be deleted anyway.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-13 17:31:20.0	rrt	1.13	44	6	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-13 14:26:15.0	rrt	1.12	39	24	Get rid of castr and replace it with const astr, which isself-documenting, and used rarely enough that having a specific aliasis not worthwhile.Get rid of ENLARGE_FACTOR which wasn&apos;t used.Add static astr_pos(), which turns negative positions into positivefor those routines that take a pos parameter. Instead of truncatingthe given pos to the actual size of the string, it asserts that it isin range; I&apos;ll see if this causes problems and take appropriateaction. It does seem preferable to allowing bad positions, though.Add astr_char, to return the address of a given character.Remove astr_last_char (replaced with *astr_char(as ,-1)).Moved more documentation to astr.h from astr.3.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-11 14:50:14.0	rrt	1.11	34	15	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-10 16:15:46.0	rrt	1.10	1	6	Remove more unused functions.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-10 14:27:12.0	rrt	1.9	1	6	Remove more rarely used and unused functions from astr.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-03-10 14:01:12.0	rrt	1.8	1	15	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-02-18 00:20:33.0	rrt	1.7	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/lib/Attic/astr.h	2004-02-17 21:21:18.0	ssigala	1.6	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/astr.h	2003-10-25 01:32:08.0	ssigala	1.5	7	1	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/lib/Attic/astr.h	2003-05-25 23:23:24.0	rrt	1.4	1	3	Remove the ugly astr_delete_struct_only function and dangerousastr_str function/macro.
/cvsroot/zile/zile/lib/Attic/astr.h	2003-05-19 23:50:23.0	rrt	1.3	10	2	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/lib/Attic/astr.h	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/astr.h	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/err.c	2004-02-17 21:21:18.0	ssigala	1.2	1	1	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/err.c	2001-01-19 23:08:00.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/lib/Attic/err.c	2001-01-19 23:08:00.0	ssigala	1.1.1.1	0	0	import of version 1.3.
/cvsroot/zile/zile/lib/Attic/err.h	2004-02-17 21:21:18.0	ssigala	1.2	1	1	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/err.h	2001-01-19 23:08:00.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/lib/Attic/err.h	2001-01-19 23:08:00.0	ssigala	1.1.1.1	0	0	import of version 1.3.
/cvsroot/zile/zile/lib/Attic/htable.3	2004-03-13 21:07:00.0	rrt	1.3	1	1	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/lib/Attic/htable.3	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/htable.3	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/htable.c	2004-11-15 01:47:12.0	rrt	1.7	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/htable.c	2004-10-14 02:49:37.0	rrt	1.6	31	60	Make the tests be built by make check.Make two non-API functions, one in astr.c and one in alist.c, static.Fix some minor bugs in htable.c revealed by the tests, and remove theunused API function htable_remove. If this is needed in future itshould be implemented better (e.g. by having htable_store remove abucket if the value is set to NULL).Add the test programs to .cvsignore.
/cvsroot/zile/zile/lib/Attic/htable.c	2004-03-13 21:07:00.0	rrt	1.5	65	104	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/lib/Attic/htable.c	2004-03-09 17:13:39.0	rrt	1.4	3	3	Whitespace correction.
/cvsroot/zile/zile/lib/Attic/htable.c	2004-02-17 21:21:18.0	ssigala	1.3	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/htable.c	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/htable.c	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/htable.h	2004-11-15 01:47:12.0	rrt	1.6	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/htable.h	2004-10-14 02:49:37.0	rrt	1.5	3	9	Make the tests be built by make check.Make two non-API functions, one in astr.c and one in alist.c, static.Fix some minor bugs in htable.c revealed by the tests, and remove theunused API function htable_remove. If this is needed in future itshould be implemented better (e.g. by having htable_store remove abucket if the value is set to NULL).Add the test programs to .cvsignore.
/cvsroot/zile/zile/lib/Attic/htable.h	2004-03-13 21:07:00.0	rrt	1.4	63	18	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/lib/Attic/htable.h	2004-02-17 21:21:18.0	ssigala	1.3	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/lib/Attic/htable.h	2003-05-07 00:28:41.0	rrt	1.2	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/htable.h	2003-04-24 17:11:59.0	rrt	1.1	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/memcmp.c	2004-11-15 01:47:12.0	rrt	1.3	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/memcmp.c	2003-05-25 22:46:40.0	rrt	1.2	8	8	Format source in linux style.
/cvsroot/zile/zile/lib/Attic/memcmp.c	2003-04-24 17:23:21.0	rrt	1.1	0	0	Add memcmp.c for e.g. SunOS.
/cvsroot/zile/zile/lib/Attic/regex.c	2004-11-15 01:47:12.0	rrt	1.3	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/regex.c	2004-03-03 02:48:03.0	rrt	1.2	330	330	Whitespace cleanup.
/cvsroot/zile/zile/lib/Attic/regex.c	2004-02-14 23:19:03.0	ssigala	1.1	0	0	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/lib/Attic/regex.h	2004-11-15 01:47:12.0	rrt	1.2	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/regex.h	2004-02-14 23:19:03.0	ssigala	1.1	0	0	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/lib/Attic/strrstr.c	2004-11-15 01:47:12.0	rrt	1.4	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/strrstr.c	2004-05-10 18:00:26.0	rrt	1.3	4	2	Add code to configure.ac so that if we&apos;re building with GCC we getplenty of compiler warnings turned on. Always.As a result of this warnings bonanza, fix all the warnings found inthe rest of the code. Given a recent warnings cleanup, this was mostlylimited to extern functions that were not declared before beingdefined. In all cases here this was fixed by making the function static.
/cvsroot/zile/zile/lib/Attic/strrstr.c	2004-03-10 15:09:02.0	rrt	1.2	2	2	Add prototype to config.h for strrstr, and correct the declaration instrrstr.
/cvsroot/zile/zile/lib/Attic/strrstr.c	2004-03-10 14:01:12.0	rrt	1.1	0	0	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2004-11-15 01:47:12.0	rrt	1.8	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2004-10-23 17:36:37.0	rrt	1.7	1	1	Fix the type of a variable that needs to be a char or -1 (it should beint, not char).
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2004-03-10 13:59:32.0	rrt	1.6	2	2	Only compile the functions in these files if the function is not inthe system library (i.e. test the HAVE_FOO symbol defined inconfig.h). vasprintf already did this, but before #including config.hwhich was useless.
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2004-03-09 17:14:42.0	rrt	1.5	1	0	#include config.h to get vasprintf prototype on systems that don&apos;t have it.
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2004-03-03 02:48:23.0	rrt	1.4	18	1	Add asprintf.
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2004-02-18 00:25:38.0	rrt	1.3	632	645	Use GPL license instead of BSD (this is permitted as the code isdual-licensed), and dos2unix the file.
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2003-05-25 23:41:39.0	rrt	1.2	1	1	Fix typo: HAS_VASPRINTF --&gt; HAVE_VASPRINTF
/cvsroot/zile/zile/lib/Attic/vasprintf.c	2003-05-25 23:20:12.0	rrt	1.1	0	0	Make vasprintf mandatory, and provide an implementation for thoseplatforms that lack it (courtesy of David Taillandier&apos;s xnprintf library).
/cvsroot/zile/zile/lib/Attic/vector.c	2004-11-15 01:47:12.0	rrt	1.4	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/vector.c	2004-10-23 17:36:03.0	rrt	1.3	2	3	Use char instead of uint8_t, to avoid requiring stdint.h. Assuming8-bit char is fairly safe these days...
/cvsroot/zile/zile/lib/Attic/vector.c	2004-03-09 17:15:11.0	rrt	1.2	2	1	#include stdlib.h to get free.
/cvsroot/zile/zile/lib/Attic/vector.c	2004-03-08 16:26:43.0	rrt	1.1	0	0	Add library.
/cvsroot/zile/zile/lib/Attic/vector.h	2004-11-15 01:47:12.0	rrt	1.3	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/vector.h	2004-03-09 13:52:17.0	rrt	1.2	2	1	Add vec_array to get at the array from a vector.
/cvsroot/zile/zile/lib/Attic/vector.h	2004-03-08 16:26:52.0	rrt	1.1	0	0	Add library.
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2004-11-15 01:47:12.0	rrt	1.5	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2004-03-10 13:59:32.0	rrt	1.4	5	1	Only compile the functions in these files if the function is not inthe system library (i.e. test the HAVE_FOO symbol defined inconfig.h). vasprintf already did this, but before #including config.hwhich was useless.
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2003-05-07 00:28:41.0	rrt	1.3	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2003-04-24 17:11:59.0	rrt	1.2	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2001-01-19 23:01:44.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2001-01-19 23:08:00.0	ssigala	1.1.1.2	4	6	import of version 1.3.
/cvsroot/zile/zile/lib/Attic/xmalloc.c	2001-01-19 23:01:44.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2004-11-15 01:47:12.0	rrt	1.7	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2004-03-10 13:59:32.0	rrt	1.6	5	1	Only compile the functions in these files if the function is not inthe system library (i.e. test the HAVE_FOO symbol defined inconfig.h). vasprintf already did this, but before #including config.hwhich was useless.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2004-03-08 15:32:50.0	rrt	1.5	1	2	Don&apos;t need assert.h any more since no more assertions.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2004-03-08 15:32:18.0	rrt	1.4	2	5	Get rid of assertions: ptr == NULL or size == 0 are allowed byrealloc, so should be allowed by xrealloc.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2003-05-07 00:28:41.0	rrt	1.3	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2003-04-24 17:11:59.0	rrt	1.2	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2001-01-19 23:01:45.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2001-01-19 23:08:00.0	ssigala	1.1.1.2	4	6	import of version 1.3.
/cvsroot/zile/zile/lib/Attic/xrealloc.c	2001-01-19 23:01:45.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/lib/Attic/xstrdup.c	2004-11-15 01:47:12.0	rrt	1.5	1	1	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/lib/Attic/xstrdup.c	2004-03-10 13:59:32.0	rrt	1.4	7	3	Only compile the functions in these files if the function is not inthe system library (i.e. test the HAVE_FOO symbol defined inconfig.h). vasprintf already did this, but before #including config.hwhich was useless.
/cvsroot/zile/zile/lib/Attic/xstrdup.c	2003-05-07 00:28:41.0	rrt	1.3	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/lib/Attic/xstrdup.c	2003-04-24 17:11:59.0	rrt	1.2	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/lib/Attic/xstrdup.c	2001-01-19 23:01:45.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/lib/Attic/xstrdup.c	2001-01-19 23:01:45.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/.cvsignore	2005-01-23 01:23:52.0	rrt	1.8	1	1	Remove htable.
/cvsroot/zile/zile/src/.cvsignore	2005-01-19 02:24:27.0	rrt	1.7	2	1	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/.cvsignore	2005-01-12 01:43:40.0	rrt	1.6	0	1	Move man page to doc.
/cvsroot/zile/zile/src/.cvsignore	2004-11-15 13:36:13.0	rrt	1.5	1	0	Add stub zile_exit function to tests and mkdoc so they can use zmallocand friends. This is ugly, but the simplest thing I can think of.Add tests to src/.cvsignore.Add the object files the tests need to src/Makefile.am.
/cvsroot/zile/zile/src/.cvsignore	2004-10-14 02:50:27.0	rrt	1.4	0	1	Remove fontlock_*.c, which no longer exist.
/cvsroot/zile/zile/src/.cvsignore	2004-01-28 13:08:32.0	rrt	1.3	2	0	Add Makefile.in
/cvsroot/zile/zile/src/.cvsignore	2003-08-11 18:12:18.0	rrt	1.2	1	0	Add fontlock_*.c.
/cvsroot/zile/zile/src/.cvsignore	2003-05-16 17:17:54.0	ssigala	1.1	0	0	added files to ignore configure generated files.
/cvsroot/zile/zile/src/Makefile.am	2005-01-26 16:21:14.0	rrt	1.37	6	13	Remove strrstr.c and vasprintf.c from zile_base_SOURCES, as they aredetected by AC_REPLACE_FUNCS. Add the files to EXTRA_DIST so they arein the tarball.Add @LIBOBJS@ to zile_LDADD, so that AC_REPLACE_FUNCS works properly.
/cvsroot/zile/zile/src/Makefile.am	2005-01-25 17:02:23.0	rrt	1.36	2	2	Add tests to EXTRA_DIST and bump version to 2.1.0.The 2.1 development branch is go!
/cvsroot/zile/zile/src/Makefile.am	2005-01-22 14:13:14.0	rrt	1.35	1	2	Remove rc.c, and fold read_rc_file into main.Tidy some comments in funcs.c.
/cvsroot/zile/zile/src/Makefile.am	2005-01-22 12:30:14.0	rrt	1.34	3	8	Remove htable, as it&apos;s no longer used (was only used by variableimplementation).
/cvsroot/zile/zile/src/Makefile.am	2005-01-22 00:40:43.0	rrt	1.33	1	4	Remove outdated mentions of alist.
/cvsroot/zile/zile/src/Makefile.am	2005-01-22 00:37:04.0	rrt	1.32	3	6	Make Lisp tests get counted properly by make check.
/cvsroot/zile/zile/src/Makefile.am	2005-01-19 02:24:27.0	rrt	1.31	7	4	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/Makefile.am	2005-01-19 01:40:49.0	rrt	1.30	2	2	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/Makefile.am	2005-01-17 23:43:13.0	rrt	1.29	1	3	Use getopt_long_only instead of getopt_long for better Emacscompatibility (i.e. long options can start with a single dash).Rejig the getopt code again (remove lots more non-ANSI stuff) and useAC_REPLACE_FUNCS to import getopt_long_only.c. Assume that if we havethis function then we have getopt.h.
/cvsroot/zile/zile/src/Makefile.am	2005-01-17 02:08:30.0	rrt	1.28	3	1	Add GNU getopt for getopt_long where necessary.
/cvsroot/zile/zile/src/Makefile.am	2005-01-12 02:47:45.0	rrt	1.27	10	1	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/Makefile.am	2005-01-12 01:43:05.0	rrt	1.26	2	11	Move the man page into the doc directory.
/cvsroot/zile/zile/src/Makefile.am	2005-01-10 01:24:59.0	rrt	1.25	1	3	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/Makefile.am	2005-01-09 19:19:15.0	rrt	1.24	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/Makefile.am	2005-01-09 19:11:12.0	rrt	1.23	3	3	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/Makefile.am	2005-01-03 13:29:39.0	rrt	1.22	2	2	branches:  1.22.2;Fix astr_fgets test for VPATH builds.
/cvsroot/zile/zile/src/Makefile.am	2005-01-03 13:09:20.0	rrt	1.21	1	3	Remove obsolete INCLUDES line.
/cvsroot/zile/zile/src/Makefile.am	2004-11-16 01:35:44.0	rrt	1.20	6	1	Add EPOC support (in term_epocemx.c).Add --enable-epocemx to configure.acRemove gperf test from configure.ac.Note: term_epocemx.c currently duplicates quite a lot ofterm_termcap.c, of which it is a heavily modified version. I willfactor out the comon bits shortly.Also, building under epocemx requires a configure line something like:./configure --build=&lt;current-platform&gt; --host=arm-epoc-pe --enable-epocemx
/cvsroot/zile/zile/src/Makefile.am	2004-11-15 13:36:13.0	rrt	1.19	4	1	Add stub zile_exit function to tests and mkdoc so they can use zmallocand friends. This is ugly, but the simplest thing I can think of.Add tests to src/.cvsignore.Add the object files the tests need to src/Makefile.am.
/cvsroot/zile/zile/src/Makefile.am	2004-11-15 01:47:12.0	rrt	1.18	33	3	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Makefile.am	2004-10-11 03:08:42.0	rrt	1.17	3	11	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/src/Makefile.am	2004-09-04 04:37:38.0	dacap	1.16	3	1	*** empty log message ***
/cvsroot/zile/zile/src/Makefile.am	2004-09-03 04:09:08.0	dacap	1.15	7	1	Added the Allegro interface.
/cvsroot/zile/zile/src/Makefile.am	2004-07-01 00:52:41.0	rrt	1.14	12	4	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/Makefile.am	2004-05-20 23:41:05.0	rrt	1.13	2	4	Expunge the last references to term_ncurses directory and libterm_ncurses.a
/cvsroot/zile/zile/src/Makefile.am	2004-05-10 18:49:50.0	rrt	1.12	3	2	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/Makefile.am	2004-05-10 18:05:49.0	rrt	1.11	2	1	Move ncurses_redisplay.c up to term_ncurses.c; it no longer needsncurses.h. Only two more files to go!
/cvsroot/zile/zile/src/Makefile.am	2004-05-09 20:31:06.0	rrt	1.10	2	1	Move term_ncurses/ncurses_minibuf.c to term_minibuf.c.
/cvsroot/zile/zile/src/Makefile.am	2004-04-04 22:33:12.0	rrt	1.9	1	2	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/Makefile.am	2004-03-20 18:50:20.0	rrt	1.8	1	2	Removed lua.c
/cvsroot/zile/zile/src/Makefile.am	2004-03-14 15:36:06.0	rrt	1.7	4	62	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Makefile.am	2004-02-14 23:19:03.0	ssigala	1.6	2	11	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/src/Makefile.am	2004-02-08 05:39:26.0	dacap	1.5	17	4	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Makefile.am	2004-02-05 03:38:27.0	dacap	1.4	3	1	Added regex files.
/cvsroot/zile/zile/src/Makefile.am	2004-02-04 03:49:31.0	dacap	1.3	2	3	Removed the $(lua) variable from zile_LDADD.
/cvsroot/zile/zile/src/Makefile.am	2004-01-29 11:37:00.0	rrt	1.2	4	3	Remove version.h and add lua.c.
/cvsroot/zile/zile/src/Makefile.am	2004-01-23 02:46:25.0	dacap	1.1	0	0	Added the automake support.
/cvsroot/zile/zile/src/Makefile.am	2005-01-26 16:17:21.0	rrt	1.22.2.1	6	13	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/src/Attic/Makefile.in	2004-01-23 03:14:46.0	dacap	1.8	1	1	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/src/Attic/Makefile.in	2003-05-19 23:50:24.0	rrt	1.7	1	3	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/Attic/Makefile.in	2003-05-07 00:28:41.0	rrt	1.6	32	10	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/Makefile.in	2003-05-06 15:13:15.0	rrt	1.5	3	1	Corrected accidental removal of pathbuffer files in last checkin.
/cvsroot/zile/zile/src/Attic/Makefile.in	2003-05-06 13:53:48.0	rrt	1.4	2	4	Add pathbuffer.{c,o} from Nicolas Duboc&apos;s fixes, and fix programdependencies to $(ZILELIBS), not $(LIBS), so we don&apos;t try to build-lncurses or -lcurses (weirdly this worked on Linux; perhaps GNU Makehas some magic to cope with idiocy of this sort).
/cvsroot/zile/zile/src/Attic/Makefile.in	2003-04-24 17:36:49.0	rrt	1.3	3	1	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/Attic/Makefile.in	2003-04-24 17:11:59.0	rrt	1.2	13	15	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/Attic/Makefile.in	2001-01-19 23:01:45.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/Makefile.in	2001-01-19 23:08:01.0	ssigala	1.1.1.2	6	18	import of version 1.3.
/cvsroot/zile/zile/src/Attic/Makefile.in	2001-01-19 23:01:45.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/agetcwd.c	2005-01-10 01:24:59.0	rrt	1.4	1	1	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/Attic/agetcwd.c	2005-01-10 00:56:03.0	rrt	1.3	14	14	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/Attic/agetcwd.c	2005-01-09 19:23:12.0	rrt	1.2	1	5	Move definition of PATH_MAX into zile.h. Now we&apos;re sure that PATH_MAXwill always be defined, there&apos;s no need to check in main.c.
/cvsroot/zile/zile/src/Attic/agetcwd.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Attic/agetcwd.h	2005-01-10 01:24:59.0	rrt	1.2	1	1	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/Attic/agetcwd.h	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Attic/alist.c	2005-01-09 19:11:13.0	rrt	1.3	1	1	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/Attic/alist.c	2004-11-15 13:36:13.0	rrt	1.2	9	1	Add stub zile_exit function to tests and mkdoc so they can use zmallocand friends. This is ugly, but the simplest thing I can think of.Add tests to src/.cvsignore.Add the object files the tests need to src/Makefile.am.
/cvsroot/zile/zile/src/Attic/alist.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Attic/alist.h	2005-01-09 19:11:13.0	rrt	1.2	1	1	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/Attic/alist.h	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/astr.c	2005-02-09 01:23:15.0	rrt	1.13	7	2	Fix a space leak in astr_replace_x.
/cvsroot/zile/zile/src/astr.c	2005-02-05 14:49:04.0	rrt	1.12	2	2	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/astr.c	2005-01-29 14:16:33.0	rrt	1.11	2	2	Fix a signed vs unsigned comparison warning.
/cvsroot/zile/zile/src/astr.c	2005-01-27 02:27:19.0	rrt	1.10	19	17	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/astr.c	2005-01-26 22:57:42.0	rrt	1.9	16	15	Fix prototypes to avoid -Wconversion warnings; int -&gt; size_t and char-&gt; int.
/cvsroot/zile/zile/src/astr.c	2005-01-19 01:37:19.0	rrt	1.8	9	1	Add astr_cat_delete.
/cvsroot/zile/zile/src/astr.c	2005-01-10 00:56:03.0	rrt	1.7	214	214	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/astr.c	2005-01-03 13:29:39.0	rrt	1.6	2	2	branches:  1.6.2;Fix astr_fgets test for VPATH builds.
/cvsroot/zile/zile/src/astr.c	2005-01-03 13:10:39.0	rrt	1.5	7	6	Make astr_fgets use astr.c rather than stdin so that test runs fullyautomatically.
/cvsroot/zile/zile/src/astr.c	2005-01-03 01:46:32.0	rrt	1.4	2	1	Fix astr_cpy_x to NUL-terminate the result.
/cvsroot/zile/zile/src/astr.c	2004-12-31 01:30:25.0	rrt	1.3	3	3	Copy strings using memcpy not strcpy or strncpy, so it works withembedded NULs. This fixes #1091669.
/cvsroot/zile/zile/src/astr.c	2004-11-15 13:36:13.0	rrt	1.2	9	1	Add stub zile_exit function to tests and mkdoc so they can use zmallocand friends. This is ugly, but the simplest thing I can think of.Add tests to src/.cvsignore.Add the object files the tests need to src/Makefile.am.
/cvsroot/zile/zile/src/astr.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/astr.c	2005-02-11 23:00:42.0	rrt	1.6.2.1	4	2	Fix a couple of memory leaks (fixes copied from HEAD).
/cvsroot/zile/zile/src/astr.h	2005-01-27 02:27:19.0	rrt	1.7	13	12	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/astr.h	2005-01-26 22:57:43.0	rrt	1.6	11	11	Fix prototypes to avoid -Wconversion warnings; int -&gt; size_t and char-&gt; int.
/cvsroot/zile/zile/src/astr.h	2005-01-26 01:22:57.0	rrt	1.5	2	2	Make astr_len return a size_t, not an int (much better!).
/cvsroot/zile/zile/src/astr.h	2005-01-19 01:37:20.0	rrt	1.4	6	1	Add astr_cat_delete.
/cvsroot/zile/zile/src/astr.h	2005-01-10 02:29:08.0	rrt	1.3	5	5	Cast arguments to macros to astr, to allow void * args, e.g. listitems.
/cvsroot/zile/zile/src/astr.h	2005-01-10 00:56:03.0	rrt	1.2	4	4	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/astr.h	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/basic.c	2005-02-07 02:36:43.0	rrt	1.26	25	13	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/basic.c	2005-01-28 03:38:31.0	rrt	1.25	7	6	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/basic.c	2005-01-28 03:07:04.0	rrt	1.24	5	5	Fix fill_break_line.Fix some signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/basic.c	2005-01-27 02:33:17.0	rrt	1.23	3	3	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/basic.c	2005-01-27 02:27:19.0	rrt	1.22	3	3	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/basic.c	2005-01-27 00:04:38.0	rrt	1.21	3	3	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/basic.c	2005-01-25 20:22:59.0	rrt	1.20	5	13	Fix #1109179 (Cursor at EOL doesn&apos;t behave as Emacs).
/cvsroot/zile/zile/src/basic.c	2005-01-23 19:39:03.0	rrt	1.19	17	23	Remove test for limits.h, it&apos;s a standard ISO/ANSI header file.Some code and comment reformatting, including a couple of docstringimprovements.
/cvsroot/zile/zile/src/basic.c	2005-01-12 00:10:04.0	rrt	1.18	7	22	Simplify scroll_down and scroll_up.
/cvsroot/zile/zile/src/basic.c	2005-01-10 15:09:45.0	rrt	1.17	9	9	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/basic.c	2005-01-10 02:31:52.0	rrt	1.16	8	8	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/basic.c	2005-01-10 00:56:03.0	rrt	1.15	291	291	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/basic.c	2005-01-09 19:19:15.0	rrt	1.14	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/basic.c	2004-10-13 23:22:36.0	rrt	1.13	3	7	branches:  1.13.2;Fix non-Emacs like behaviour (as noted by dacap and tested againstEmacs by myself).
/cvsroot/zile/zile/src/basic.c	2004-10-06 18:32:19.0	rrt	1.12	12	13	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/basic.c	2004-02-18 00:20:33.0	rrt	1.11	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/basic.c	2004-02-17 21:21:18.0	ssigala	1.10	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/basic.c	2004-02-08 05:39:26.0	dacap	1.9	81	99	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/basic.c	2004-02-06 05:18:17.0	dacap	1.8	6	3	Fixed `beginning-of-line&apos; to be used with `prev-line&apos; and `next-line&apos;.
/cvsroot/zile/zile/src/basic.c	2004-02-04 03:52:12.0	dacap	1.7	14	6	Fixed previous-line and next-line to a more Emacs like behavior.
/cvsroot/zile/zile/src/basic.c	2004-02-03 02:22:01.0	dacap	1.6	40	15	Modified previous-line and next-line to Emacs behavior.
/cvsroot/zile/zile/src/basic.c	2004-01-27 17:54:35.0	rrt	1.5	2	2	Whitespace correction.
/cvsroot/zile/zile/src/basic.c	2003-10-25 01:32:08.0	ssigala	1.4	3	4	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/basic.c	2003-05-07 00:28:41.0	rrt	1.3	30	4	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/basic.c	2003-04-24 17:11:59.0	rrt	1.2	10	8	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/basic.c	2001-01-19 23:01:53.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/basic.c	2001-01-19 23:08:01.0	ssigala	1.1.1.2	15	14	import of version 1.3.
/cvsroot/zile/zile/src/basic.c	2001-01-19 23:01:53.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/basic.c	2005-01-26 16:17:21.0	rrt	1.13.2.2	1	3	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/src/basic.c	2005-01-25 20:23:41.0	rrt	1.13.2.1	5	13	Fix #1109179 (Cursor at EOL doesn&apos;t behave as Emacs); fix merged fromHEAD.
/cvsroot/zile/zile/src/bind.c	2005-02-27 23:50:20.0	rrt	1.64	12	22	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/bind.c	2005-02-17 17:03:58.0	rrt	1.63	2	2	Fix bad bracketing in sizeof. (Bug fix copied from Zee.)
/cvsroot/zile/zile/src/bind.c	2005-02-08 00:18:24.0	rrt	1.62	25	12	Add new DEFUN macro for general arguments to Zile commands.Fix a bug in setting of uniused.Make global-set-key work from Lisp.
/cvsroot/zile/zile/src/bind.c	2005-02-07 02:36:43.0	rrt	1.61	15	11	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/bind.c	2005-02-06 21:21:05.0	rrt	1.60	15	15	Add an argument indicating the presence of the universal arg to theprototype for Zile commands. Since many commands assume uniarg == 0means no uniarg, don&apos;t violate this assumption yet.Move execute_command next to execute_extended_command.
/cvsroot/zile/zile/src/bind.c	2005-02-06 02:49:13.0	rrt	1.59	67	42	Add where-is (closes feature request #1088394).Remove list-functions (not in Emacs, and no longer needed).Add case for space key to chordtostr.Change some int&apos;s to size_t&apos;s in key conversion routines.Fix a bug in write_bindings left over from conversion from alist tolist.
/cvsroot/zile/zile/src/bind.c	2005-02-05 02:49:13.0	rrt	1.58	4	4	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/bind.c	2005-02-04 03:10:07.0	rrt	1.57	21	33	Reimplement macro keystrokes so they work for interactive commandstoo.Simplify term_ungetkey: we no longer need to decompose keys back intocharacters, because unbuffered stdin means that keystrokes alwaysarrive whole.
/cvsroot/zile/zile/src/bind.c	2005-01-31 00:24:33.0	rrt	1.56	44	33	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/bind.c	2005-01-30 18:46:14.0	rrt	1.55	17	22	Replace Macro struct with something simpler: just build a list ofkeys.Remove the static alternative_bindings in bind.c, which was set butnever read.Tweak minibuffer message for global-set-key.Remove unused FLAG_EXECUTING_MACRO flag from zile.h.
/cvsroot/zile/zile/src/bind.c	2005-01-30 03:25:16.0	dacap	1.54	8	1	Added last_command() routine
/cvsroot/zile/zile/src/bind.c	2005-01-29 14:14:07.0	rrt	1.53	16	16	Fix signed vs unsigned compilation warnings.
/cvsroot/zile/zile/src/bind.c	2005-01-29 14:05:32.0	rrt	1.52	5	5	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/bind.c	2005-01-29 13:44:56.0	rrt	1.51	8	8	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/bind.c	2005-01-29 01:25:41.0	rrt	1.50	3	3	Make get_function and get_function_name extern, for use elsewhere.
/cvsroot/zile/zile/src/bind.c	2005-01-27 02:33:17.0	rrt	1.49	20	20	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/bind.c	2005-01-27 02:27:20.0	rrt	1.48	18	16	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/bind.c	2005-01-27 00:44:59.0	rrt	1.47	6	6	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/bind.c	2005-01-26 16:19:33.0	rrt	1.46	1	2	Remove now irrelevant todo.
/cvsroot/zile/zile/src/bind.c	2005-01-16 14:07:43.0	rrt	1.45	2	2	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/bind.c	2005-01-14 23:31:34.0	rrt	1.44	2	2	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/bind.c	2005-01-14 18:22:55.0	rrt	1.43	5	12	Remove do_completion&apos;s second argument, which wasn&apos;t used foranything.
/cvsroot/zile/zile/src/bind.c	2005-01-13 01:16:15.0	rrt	1.42	11	23	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/bind.c	2005-01-10 00:56:03.0	rrt	1.41	384	384	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/bind.c	2005-01-09 19:11:13.0	rrt	1.40	23	23	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/bind.c	2004-12-20 14:17:25.0	rrt	1.39	2	2	Add a flag to completion_try, popup_when_complete that signals if wewant the *Completions* window even when the string supplied is alreadycomplete (i.e. when it is both a completion and a prefix of some othercompletion(s)). We want to pop up the completions list in this caseonly when completions were expressly requested by pressing TAB.In fact completion_try should really be factored into two functions,one of which deals with the screen and the other of which looks forcompletions.
/cvsroot/zile/zile/src/bind.c	2004-12-20 13:48:53.0	rrt	1.38	3	3	Get rid of action functions for completions; at the moment we onlyhave one (the default action), and frankly YAGNI.
/cvsroot/zile/zile/src/bind.c	2004-11-15 00:57:52.0	rrt	1.37	6	9	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/bind.c	2004-11-14 22:32:46.0	rrt	1.36	5	5	Make alternative-bindings only affect the *first* M-h in a keybinding.
/cvsroot/zile/zile/src/bind.c	2004-11-14 21:58:08.0	rrt	1.35	1	4	Remove some unused vars.
/cvsroot/zile/zile/src/bind.c	2004-11-14 21:57:33.0	rrt	1.34	1	7	Can&apos;t free alternative bindings any longer as one of them is nowstatic. It is silly code anyway; we really need properly rebindablekeys.
/cvsroot/zile/zile/src/bind.c	2004-11-14 21:52:05.0	rrt	1.33	5	1	For alternative-bindings, rebind mark-paragraph to \M-h\M-h.
/cvsroot/zile/zile/src/bind.c	2004-10-25 01:52:46.0	rrt	1.32	2	2	Remove an overenthusiastic XXX (todo).
/cvsroot/zile/zile/src/bind.c	2004-10-16 22:17:03.0	rrt	1.31	3	3	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/bind.c	2004-10-13 18:04:06.0	rrt	1.30	4	1	Find all the times where the minibuffer is written to and then akeypress required, and insert term_refresh() to bring the screen up todate.
/cvsroot/zile/zile/src/bind.c	2004-10-05 23:47:15.0	rrt	1.29	2	2	Use waitkey_discard instead of term_xgetkey directly.
/cvsroot/zile/zile/src/bind.c	2004-05-21 00:34:50.0	rrt	1.28	6	6	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/bind.c	2004-04-23 22:34:56.0	rrt	1.27	3	3	Rename the size and maxsize fields of the astr structure to len andmaxlen (makes more sense).Fix a comment typo in astr.h.
/cvsroot/zile/zile/src/bind.c	2004-04-16 03:24:18.0	dacap	1.26	3	2	Fixed write_bindings_list, a &quot;(void)ap&quot; must be after variable declarations.
/cvsroot/zile/zile/src/bind.c	2004-04-05 15:27:44.0	rrt	1.25	48	36	Tidy up implementation of global-set-key.Make a few messages more Emacs-like.Remove describe-key-briefly: describe-key is fine.Note: there&apos;s now a function keyvectostr to turn a list of key chordsinto a string.
/cvsroot/zile/zile/src/bind.c	2004-04-05 02:50:47.0	rrt	1.24	63	30	Add keybinding (global-set-key).
/cvsroot/zile/zile/src/bind.c	2004-03-30 00:47:01.0	rrt	1.23	9	9	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/bind.c	2004-03-11 14:50:14.0	rrt	1.22	6	5	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/bind.c	2004-03-10 00:28:26.0	rrt	1.21	5	2	Fix a couple of memory leaks introduced by recent changes.
/cvsroot/zile/zile/src/bind.c	2004-03-09 23:38:23.0	rrt	1.20	20	53	Fixed write_bindings_tree to use a list instead of a static array:the function is now re-entrant and won&apos;t suffer from a static bufferoverflow.
/cvsroot/zile/zile/src/bind.c	2004-03-09 20:06:35.0	rrt	1.19	8	6	Remove more static buffers.
/cvsroot/zile/zile/src/bind.c	2004-03-09 19:52:30.0	rrt	1.18	9	8	Remove more static buffers and rewrite string-to-key conversion as aresult.
/cvsroot/zile/zile/src/bind.c	2004-03-09 17:30:00.0	rrt	1.17	63	50	Convert static buffers to astrs.Fix keytostr situation: keytostr was no longer called, so renamekeytostr_nobs to keytostr, and rewrite to use astrs.
/cvsroot/zile/zile/src/bind.c	2004-03-08 16:43:21.0	rrt	1.16	3	5	Remove pointless fixed-length buffer from do_completion.
/cvsroot/zile/zile/src/bind.c	2004-03-08 16:39:13.0	rrt	1.15	4	16	Remove old commented-out search_key and rename search_key0 to search_key.
/cvsroot/zile/zile/src/bind.c	2004-03-08 16:37:18.0	rrt	1.14	1	13	Remove old commented-out binary search code for search_leaf.
/cvsroot/zile/zile/src/bind.c	2004-03-08 16:34:11.0	rrt	1.13	4	4	Use a vector for holding key code sequences instead of an array.
/cvsroot/zile/zile/src/bind.c	2004-02-23 03:05:10.0	dacap	1.12	32	53	Simplified the `fentry&apos; structure, using an array for the three keys(before was used key1, key2, and key3).
/cvsroot/zile/zile/src/bind.c	2004-02-18 00:20:33.0	rrt	1.11	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/bind.c	2004-02-17 21:21:18.0	ssigala	1.10	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/bind.c	2004-02-14 10:41:55.0	dacap	1.9	3	3	Removed color support from minibuf.
/cvsroot/zile/zile/src/bind.c	2004-02-08 05:39:26.0	dacap	1.8	38	29	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/bind.c	2004-01-21 13:26:13.0	dacap	1.7	2	2	Fixed an error in the message that show undefined keys.
/cvsroot/zile/zile/src/bind.c	2004-01-21 02:16:05.0	dacap	1.6	3	4	Just a small aesthetic change in make_completion().
/cvsroot/zile/zile/src/bind.c	2003-10-25 01:32:08.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/bind.c	2003-05-25 23:34:55.0	rrt	1.4	4	2	Make historyp.try take an astr for symmetry with historyp.reread.
/cvsroot/zile/zile/src/bind.c	2003-05-07 00:28:41.0	rrt	1.3	7	4	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/bind.c	2003-04-24 17:11:59.0	rrt	1.2	56	60	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/bind.c	2001-01-19 23:01:53.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/bind.c	2001-01-19 23:08:02.0	ssigala	1.1.1.2	19	43	import of version 1.3.
/cvsroot/zile/zile/src/bind.c	2001-01-19 23:01:53.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/buffer.c	2005-01-27 02:33:17.0	rrt	1.31	5	5	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/buffer.c	2005-01-27 02:27:20.0	rrt	1.30	3	4	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/buffer.c	2005-01-27 00:04:38.0	rrt	1.29	11	26	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/buffer.c	2005-01-25 13:28:14.0	rrt	1.28	23	15	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/buffer.c	2005-01-17 19:09:21.0	rrt	1.27	4	1	Fix auto-fill-mode so it applies to all buffers, not just the scratchbuffer. Fix already applied to 2.0.Use ^ instead of &amp; and | to toggle flags.Fix formatting of a docstring.Move cancel in funcs.c to directly before keyboard_quit (morelogical).
/cvsroot/zile/zile/src/buffer.c	2005-01-16 14:07:43.0	rrt	1.26	3	3	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/buffer.c	2005-01-14 23:31:34.0	rrt	1.25	2	2	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/buffer.c	2005-01-13 01:16:15.0	rrt	1.24	3	3	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/buffer.c	2005-01-12 01:28:13.0	rrt	1.23	1	11	Remove zap_buffer_content (it&apos;s only a couple of lines, only calledonce, and is really an ill-advised factorisation).
/cvsroot/zile/zile/src/buffer.c	2005-01-12 01:16:42.0	rrt	1.22	8	41	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/buffer.c	2005-01-10 16:01:06.0	rrt	1.21	16	26	Get rid of new_line and free_line (these don&apos;t really work sensiblywith lists, as it Depends What You Want To Do.
/cvsroot/zile/zile/src/buffer.c	2005-01-10 15:09:45.0	rrt	1.20	18	29	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/buffer.c	2005-01-10 02:31:52.0	rrt	1.19	15	15	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/buffer.c	2005-01-10 00:56:03.0	rrt	1.18	280	280	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/buffer.c	2004-12-20 19:51:29.0	rrt	1.17	2	2	branches:  1.17.2;Fix a bug where a buffer could end up without a line ending setting.Acknowledge Richard Smith&apos;s help with cross-compiling.
/cvsroot/zile/zile/src/buffer.c	2004-12-17 12:53:53.0	rrt	1.16	6	3	Add auto line-end detection. Copes with CR, LF, CRLF and LFCR.
/cvsroot/zile/zile/src/buffer.c	2004-11-15 00:57:54.0	rrt	1.15	4	4	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/buffer.c	2004-10-16 22:17:03.0	rrt	1.14	3	3	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/buffer.c	2004-10-15 01:26:42.0	rrt	1.13	2	2	Free the buffer limit properly; it&apos;s now a fully-fledged Line.
/cvsroot/zile/zile/src/buffer.c	2004-10-06 18:32:19.0	rrt	1.12	7	7	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/buffer.c	2004-03-10 12:00:51.0	rrt	1.11	2	2	Rename desactivate_mark to deactivate_mark (better English).
/cvsroot/zile/zile/src/buffer.c	2004-02-18 00:20:33.0	rrt	1.10	6	4	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/buffer.c	2004-02-17 21:21:18.0	ssigala	1.9	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/buffer.c	2004-02-14 10:46:43.0	dacap	1.8	4	4	Removed color support from minibuf.
/cvsroot/zile/zile/src/buffer.c	2004-02-08 05:39:26.0	dacap	1.7	104	165	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/buffer.c	2004-02-04 03:53:55.0	dacap	1.6	24	1	Modified switch_to_buffer to move the selected buffer to the head ofthe list of buffers (this is necessary because we removed the prev_bpglobal variable).
/cvsroot/zile/zile/src/buffer.c	2003-10-25 01:32:08.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/buffer.c	2003-05-19 23:50:24.0	rrt	1.4	5	4	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/buffer.c	2003-05-07 00:28:42.0	rrt	1.3	22	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/buffer.c	2003-04-24 17:11:59.0	rrt	1.2	18	18	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/buffer.c	2001-01-19 23:01:58.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/buffer.c	2001-01-19 23:08:02.0	ssigala	1.1.1.2	4	15	import of version 1.3.
/cvsroot/zile/zile/src/buffer.c	2001-01-19 23:01:58.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/buffer.c	2005-01-17 19:02:13.0	rrt	1.17.2.1	4	1	Fix auto-fill-mode so it applies to all new buffers, not just thefirst.
/cvsroot/zile/zile/src/completion.c	2005-01-29 14:10:25.0	rrt	1.24	9	9	Fix some signed vs unsigned parameter warnings.
/cvsroot/zile/zile/src/completion.c	2005-01-27 02:33:17.0	rrt	1.23	6	6	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/completion.c	2005-01-27 02:27:20.0	rrt	1.22	7	6	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/completion.c	2005-01-14 18:15:02.0	rrt	1.21	3	2	Remove return argument from agetcwd and get_current_dir and make themallocate the returned value instead.
/cvsroot/zile/zile/src/completion.c	2005-01-14 02:03:02.0	rrt	1.20	17	28	Rewrite popup_completion in terms of write_temp_buffer.
/cvsroot/zile/zile/src/completion.c	2005-01-13 01:16:16.0	rrt	1.19	2	2	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/completion.c	2005-01-12 01:16:44.0	rrt	1.18	7	9	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/completion.c	2005-01-11 01:09:42.0	rrt	1.17	3	4	Tidy a little.
/cvsroot/zile/zile/src/completion.c	2005-01-10 01:24:59.0	rrt	1.16	1	2	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/completion.c	2005-01-10 00:56:03.0	rrt	1.15	220	220	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/completion.c	2005-01-09 19:11:13.0	rrt	1.14	53	56	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/completion.c	2005-01-03 01:44:20.0	rrt	1.13	2	2	Simplify some unncecessarily complicated astr calls.
/cvsroot/zile/zile/src/completion.c	2004-12-20 14:17:25.0	rrt	1.12	4	3	Add a flag to completion_try, popup_when_complete that signals if wewant the *Completions* window even when the string supplied is alreadycomplete (i.e. when it is both a completion and a prefix of some othercompletion(s)). We want to pop up the completions list in this caseonly when completions were expressly requested by pressing TAB.In fact completion_try should really be factored into two functions,one of which deals with the screen and the other of which looks forcompletions.
/cvsroot/zile/zile/src/completion.c	2004-12-20 13:48:53.0	rrt	1.11	79	89	Get rid of action functions for completions; at the moment we onlyhave one (the default action), and frankly YAGNI.
/cvsroot/zile/zile/src/completion.c	2004-10-12 02:19:47.0	rrt	1.10	23	59	Revert my changes to filename expansion. They seem to have beenwrong-headed, as, I think, was the TODO that inspired them (hence Ihaven&apos;t reverted that).The code in expand_path still needs refactoring.
/cvsroot/zile/zile/src/completion.c	2004-10-06 19:30:33.0	rrt	1.9	60	24	As per TODO:  Move code to deal with ~/ and ~user from expand_path to  default_completion_reread (and factor out into a separate function).
/cvsroot/zile/zile/src/completion.c	2004-05-21 00:34:50.0	rrt	1.8	4	4	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/completion.c	2004-05-09 20:01:57.0	rrt	1.7	2	3	Remove EOB marker. It&apos;s a frivolous feature.
/cvsroot/zile/zile/src/completion.c	2004-05-02 08:21:22.0	rrt	1.6	8	8	Fix restarting path from root when &quot;//&quot; found during completion.
/cvsroot/zile/zile/src/completion.c	2004-04-23 22:45:36.0	rrt	1.5	227	207	Move feature where // in find-file causes the file name to betruncated to just / into default_completion_reread from expand_path.This cures bug #940896 where filenames with double slashes would bemangled: the only time this should happen is interactively.
/cvsroot/zile/zile/src/completion.c	2004-03-30 00:47:01.0	rrt	1.4	7	7	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/completion.c	2004-03-09 17:16:11.0	rrt	1.3	3	1	Fix a couple of unused parameter warnings.
/cvsroot/zile/zile/src/completion.c	2004-02-17 21:21:18.0	ssigala	1.2	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/completion.c	2004-02-08 05:39:26.0	dacap	1.1	0	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Attic/config.h.in	2004-01-23 03:14:49.0	dacap	1.4	0	0	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/src/Attic/config.h.in	2003-05-07 01:05:04.0	rrt	1.3	4	9	Since we always require (n)curses, remove USE_NCURSES symbol; alsosince we can use plain curses, rename HAVE_LIBNCURSES to HAVE_LIBCURSES.
/cvsroot/zile/zile/src/Attic/config.h.in	2003-04-24 17:11:59.0	rrt	1.2	28	4	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/Attic/config.h.in	2001-01-19 23:01:58.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/config.h.in	2001-01-19 23:08:04.0	ssigala	1.1.1.2	3	0	import of version 1.3.
/cvsroot/zile/zile/src/Attic/config.h.in	2001-01-19 23:01:58.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/editfns.c	2005-01-29 14:08:05.0	rrt	1.12	3	3	Fix a signed vs unsigned comparison warning.
/cvsroot/zile/zile/src/editfns.c	2005-01-27 02:27:20.0	rrt	1.11	3	3	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/editfns.c	2005-01-10 15:09:45.0	rrt	1.10	14	23	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/editfns.c	2005-01-10 02:31:52.0	rrt	1.9	10	10	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/editfns.c	2005-01-10 00:56:03.0	rrt	1.8	49	49	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/editfns.c	2005-01-09 19:19:15.0	rrt	1.7	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/editfns.c	2005-01-09 19:11:13.0	rrt	1.6	8	14	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/editfns.c	2004-10-30 00:49:39.0	rrt	1.5	2	2	Fix a typo in is_blank_line left over from the Line struct change.Apparently is_space doesn&apos;t get its argument&apos;s type checked properlyon my system, grr...
/cvsroot/zile/zile/src/editfns.c	2004-10-06 18:32:19.0	rrt	1.4	12	16	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/editfns.c	2004-03-13 18:27:50.0	rrt	1.3	2	2	Remove unused and underused alist functions, move documentation intoalist.h and get rid of alist.3.
/cvsroot/zile/zile/src/editfns.c	2004-02-17 21:21:18.0	ssigala	1.2	22	26	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/editfns.c	2004-02-08 05:39:26.0	dacap	1.1	0	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Attic/editfns.h	2005-01-09 19:19:15.0	rrt	1.3	1	1	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/Attic/editfns.h	2004-02-17 21:21:18.0	ssigala	1.2	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/Attic/editfns.h	2004-02-08 05:39:26.0	dacap	1.1	0	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/eval.c	2005-02-27 23:50:21.0	rrt	1.23	6	854	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/eval.c	2005-02-08 20:27:52.0	rrt	1.22	1	15	Fix display of minibuffer in Allegro.Remove unused leDelete.Move eval_init and eval_finalise to lisp.c (and rename lisp_init andlisp_finalise) so they can be more general than just for eval.c.
/cvsroot/zile/zile/src/eval.c	2005-02-07 02:36:43.0	rrt	1.21	7	12	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/eval.c	2005-02-06 21:21:06.0	rrt	1.20	10	10	Add an argument indicating the presence of the universal arg to theprototype for Zile commands. Since many commands assume uniarg == 0means no uniarg, don&apos;t violate this assumption yet.Move execute_command next to execute_extended_command.
/cvsroot/zile/zile/src/eval.c	2005-02-05 14:49:04.0	rrt	1.19	81	81	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/eval.c	2005-01-29 01:23:14.0	rrt	1.18	18	9	Make evalLookupNode static (it&apos;s not mentioned in eval.h anyway) andfactor lookupFunction from evaluateBranch, for use elsewhere.
/cvsroot/zile/zile/src/eval.c	2005-01-28 03:38:31.0	rrt	1.17	7	7	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/eval.c	2005-01-27 02:27:20.0	rrt	1.16	2	2	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/eval.c	2005-01-25 21:06:07.0	rrt	1.15	17	11	Add a helper function for binding Zile functions to avoid compilingthe same code over and over again.
/cvsroot/zile/zile/src/eval.c	2005-01-25 17:47:27.0	rrt	1.14	2	2	Correct eqsign_helper to use == not &gt;=. Duh.
/cvsroot/zile/zile/src/eval.c	2005-01-25 13:28:28.0	rrt	1.13	42	5	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/eval.c	2005-01-25 01:54:40.0	rrt	1.12	1	3	Remove never-used enumeration elements T_NONE and C_NONE
/cvsroot/zile/zile/src/eval.c	2005-01-24 23:50:47.0	rrt	1.11	27	4	Implement eval-expression.Stop lisp_read evaluating the expression it reads. Move thisfunctionality to lisp_dump.Fix getc_string for end of string (return EOF).Don&apos;t pause before showing first buffer if the splash screen isskipped (fix merged from 2.0 branch).
/cvsroot/zile/zile/src/eval.c	2005-01-24 14:56:14.0	rrt	1.10	46	6	Make Zile&apos;s commands (F_* functions, listed in tbl_funcs.h) availablein Lisp. Need really to have only one sort of Lisp function, butneither Zile&apos;s nor lithp&apos;s form is quite ideal.Add another &quot;indestructible constant&quot;, leT (true).
/cvsroot/zile/zile/src/eval.c	2005-01-23 19:39:03.0	rrt	1.9	12	15	Remove test for limits.h, it&apos;s a standard ISO/ANSI header file.Some code and comment reformatting, including a couple of docstringimprovements.
/cvsroot/zile/zile/src/eval.c	2005-01-23 15:14:56.0	rrt	1.8	455	587	Remove garbage_collect, which was just a stub, and the correspondingeval_cb_nothing.Tidy up eval.c, formatting it like the rest of the Zile code, andtidying up a lot of the code.Make leWipe not free leNIL, and add leReallyWipe, which does freeleNIL. Could use this for other constants, but really need a gc.Remove tests of functions that no longer exist from test3.el.
/cvsroot/zile/zile/src/eval.c	2005-01-23 01:25:01.0	rrt	1.7	18	11	Reformat some code.Remove a potential buffer overflow in evalCastIntToLe.
/cvsroot/zile/zile/src/eval.c	2005-01-22 19:26:10.0	rrt	1.6	12	122	Remove 1+, 1-, enum, select and terpri: functions that are eitherrarely used or do not exist in Emacs Lisp.
/cvsroot/zile/zile/src/eval.c	2005-01-19 02:23:37.0	rrt	1.5	19	25	Reformat evaluateBranch.
/cvsroot/zile/zile/src/eval.c	2005-01-19 01:40:49.0	rrt	1.4	92	85	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/eval.c	2005-01-15 00:45:27.0	rrt	1.3	54	56	Tidy up some code, especially removing pointless &quot;consts&quot; from intfunction arguments, and concentrating on the printing functions.
/cvsroot/zile/zile/src/eval.c	2005-01-13 08:45:52.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/eval.c	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/eval.h	2005-02-27 23:50:23.0	rrt	1.11	1	59	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/eval.h	2005-02-07 02:36:43.0	rrt	1.10	6	1	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/eval.h	2005-01-29 01:23:14.0	rrt	1.9	2	1	Make evalLookupNode static (it&apos;s not mentioned in eval.h anyway) andfactor lookupFunction from evaluateBranch, for use elsewhere.
/cvsroot/zile/zile/src/eval.h	2005-01-25 01:54:42.0	rrt	1.8	1	2	Remove never-used enumeration elements T_NONE and C_NONE
/cvsroot/zile/zile/src/eval.h	2005-01-24 14:56:14.0	rrt	1.7	2	2	Make Zile&apos;s commands (F_* functions, listed in tbl_funcs.h) availablein Lisp. Need really to have only one sort of Lisp function, butneither Zile&apos;s nor lithp&apos;s form is quite ideal.Add another &quot;indestructible constant&quot;, leT (true).
/cvsroot/zile/zile/src/eval.h	2005-01-23 15:14:56.0	rrt	1.6	1	3	Remove garbage_collect, which was just a stub, and the correspondingeval_cb_nothing.Tidy up eval.c, formatting it like the rest of the Zile code, andtidying up a lot of the code.Make leWipe not free leNIL, and add leReallyWipe, which does freeleNIL. Could use this for other constants, but really need a gc.Remove tests of functions that no longer exist from test3.el.
/cvsroot/zile/zile/src/eval.h	2005-01-22 19:31:39.0	rrt	1.5	3	3	Remove a couple of excess spaces.
/cvsroot/zile/zile/src/eval.h	2005-01-22 19:26:10.0	rrt	1.4	5	7	Remove 1+, 1-, enum, select and terpri: functions that are eitherrarely used or do not exist in Emacs Lisp.
/cvsroot/zile/zile/src/eval.h	2005-01-19 01:40:49.0	rrt	1.3	5	1	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/eval.h	2005-01-13 08:45:52.0	rrt	1.2	102	86	Add copyright notices.
/cvsroot/zile/zile/src/eval.h	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/extern.h	2005-02-27 23:50:23.0	rrt	1.102	1	1	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/extern.h	2005-02-08 20:27:55.0	rrt	1.101	2	0	Fix display of minibuffer in Allegro.Remove unused leDelete.Move eval_init and eval_finalise to lisp.c (and rename lisp_init andlisp_finalise) so they can be more general than just for eval.c.
/cvsroot/zile/zile/src/extern.h	2005-02-07 02:36:43.0	rrt	1.100	1	1	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/extern.h	2005-02-06 21:21:06.0	rrt	1.99	1	2	Add an argument indicating the presence of the universal arg to theprototype for Zile commands. Since many commands assume uniarg == 0means no uniarg, don&apos;t violate this assumption yet.Move execute_command next to execute_extended_command.
/cvsroot/zile/zile/src/extern.h	2005-02-06 02:49:13.0	rrt	1.98	1	1	Add where-is (closes feature request #1088394).Remove list-functions (not in Emacs, and no longer needed).Add case for space key to chordtostr.Change some int&apos;s to size_t&apos;s in key conversion routines.Fix a bug in write_bindings left over from conversion from alist tolist.
/cvsroot/zile/zile/src/extern.h	2005-02-05 14:49:04.0	rrt	1.97	3	1	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/extern.h	2005-02-05 02:49:13.0	rrt	1.96	2	1	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/extern.h	2005-02-04 03:10:07.0	rrt	1.95	2	1	Reimplement macro keystrokes so they work for interactive commandstoo.Simplify term_ungetkey: we no longer need to decompose keys back intocharacters, because unbuffered stdin means that keystrokes alwaysarrive whole.
/cvsroot/zile/zile/src/extern.h	2005-02-03 03:17:00.0	rrt	1.94	1	0	Fix compiler warnings in term_allegro.c, and make sure cursor iscorrectly positioned in all terminals; add term_redraw_cursor to thisend.
/cvsroot/zile/zile/src/extern.h	2005-01-31 00:24:33.0	rrt	1.93	16	15	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/extern.h	2005-01-30 18:46:15.0	rrt	1.92	1	3	Replace Macro struct with something simpler: just build a list ofkeys.Remove the static alternative_bindings in bind.c, which was set butnever read.Tweak minibuffer message for global-set-key.Remove unused FLAG_EXECUTING_MACRO flag from zile.h.
/cvsroot/zile/zile/src/extern.h	2005-01-30 03:27:56.0	dacap	1.91	1	0	Added last_command() routine.
/cvsroot/zile/zile/src/extern.h	2005-01-29 14:05:32.0	rrt	1.90	1	1	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/extern.h	2005-01-29 13:44:56.0	rrt	1.89	1	1	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/extern.h	2005-01-29 01:36:57.0	rrt	1.88	3	3	Fix signed vs unsigned comparison warnings.Remove pointless parentheses from octal constants in zile.h.
/cvsroot/zile/zile/src/extern.h	2005-01-29 01:25:42.0	rrt	1.87	4	2	Make get_function and get_function_name extern, for use elsewhere.
/cvsroot/zile/zile/src/extern.h	2005-01-28 03:38:31.0	rrt	1.86	1	1	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/extern.h	2005-01-28 03:07:04.0	rrt	1.85	3	3	Fix fill_break_line.Fix some signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/extern.h	2005-01-27 02:33:17.0	rrt	1.84	18	18	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/extern.h	2005-01-27 02:27:21.0	rrt	1.83	11	11	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/extern.h	2005-01-27 01:21:24.0	rrt	1.82	2	2	Fix -Wconversion warnings in search.c.
/cvsroot/zile/zile/src/extern.h	2005-01-27 00:58:51.0	rrt	1.81	1	1	Change term_xgetkey&apos;s second arg to unsigned to avoid -Wconversionwarnings.
/cvsroot/zile/zile/src/extern.h	2005-01-27 00:52:43.0	rrt	1.80	1	1	Fix -Wconversion warnings in undo.c.
/cvsroot/zile/zile/src/extern.h	2005-01-27 00:45:00.0	rrt	1.79	1	1	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/extern.h	2005-01-27 00:04:45.0	rrt	1.78	4	0	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/extern.h	2005-01-26 01:25:18.0	rrt	1.77	1	1	Use size_t instead of unsigned for string lengths (duh).Use case-fold-search and case-replace to check whether stringreplacement should follow case.
/cvsroot/zile/zile/src/extern.h	2005-01-26 01:03:16.0	rrt	1.76	1	1	Make recasing on replace work as in Emacs (only case-replace andcase-fold-search are not yet implemented).Add length of replacement string as a parameter to line_replace_text.
/cvsroot/zile/zile/src/extern.h	2005-01-25 21:45:13.0	rrt	1.75	0	1	Make unchain_marker static, since it&apos;s used nowhere else and is ofdubious utility outside marker.c.
/cvsroot/zile/zile/src/extern.h	2005-01-25 19:01:23.0	rrt	1.74	1	1	Fix key processing (#109179) by unbuffering stdin, and make the keybuffer a dynamic string rather than a fixed-size buffer.Rename term_unget to term_ungetkey for consistency.
/cvsroot/zile/zile/src/extern.h	2005-01-25 13:28:28.0	rrt	1.73	4	1	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/extern.h	2005-01-24 23:50:48.0	rrt	1.72	4	3	Implement eval-expression.Stop lisp_read evaluating the expression it reads. Move thisfunctionality to lisp_dump.Fix getc_string for end of string (return EOF).Don&apos;t pause before showing first buffer if the splash screen isskipped (fix merged from 2.0 branch).
/cvsroot/zile/zile/src/extern.h	2005-01-23 15:11:39.0	rrt	1.71	5	9	Remove ZTRACE and ztrace, which were not really used any more.Move prototypes for zmalloc &amp;c. to a new section in extern.h(zmalloc.c) from glue.c, where the functions used to live.
/cvsroot/zile/zile/src/extern.h	2005-01-22 19:28:59.0	rrt	1.70	2	5	Make arguments of lisp_read_file and lisp_read_string const char *.Remove rc.c prototypes from extern.h.
/cvsroot/zile/zile/src/extern.h	2005-01-22 13:32:01.0	rrt	1.69	0	1	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/src/extern.h	2005-01-22 12:27:17.0	rrt	1.68	0	1	Store the variables in a Lisp list.Remove list-variables: doesn&apos;t exist in Emacs.Remove unset_variable: no longer needed.
/cvsroot/zile/zile/src/extern.h	2005-01-22 00:25:34.0	rrt	1.67	0	2	Simplify marker adjusting code in line.c to just adjust_markers.Remove Marker.type (don&apos;t need it any more).
/cvsroot/zile/zile/src/extern.h	2005-01-20 22:24:13.0	rrt	1.66	2	2	Fix overrun of terminal buffers in term_addch, and change some ints tounsigned to make such overruns less likely.
/cvsroot/zile/zile/src/extern.h	2005-01-19 01:40:50.0	rrt	1.65	4	2	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/extern.h	2005-01-18 13:25:44.0	rrt	1.64	1	1	Move term_addnstr to term_redisplay, as it&apos;s generic.Add default (empty!) implementations of term_suspend and term_resumeto the other terminal types.
/cvsroot/zile/zile/src/extern.h	2005-01-18 13:06:14.0	rrt	1.63	15	9	Move term_printw to term_redisplay, because it&apos;s generic.Add term_suspend and term_resume (incomplete) to term_termcap.c.
/cvsroot/zile/zile/src/extern.h	2005-01-17 02:09:30.0	rrt	1.62	4	0	Explain the missing functions better.#include &lt;stdarg.h&gt; for the (v)asprintf prototypes.
/cvsroot/zile/zile/src/extern.h	2005-01-16 14:07:43.0	rrt	1.61	1	1	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/extern.h	2005-01-15 01:32:38.0	rrt	1.60	1	1	Remove option allowing a named init file; it&apos;s replaced by --load,which allows any Lisp file to be loaded, and -q, which stops ~/.zilebeing loaded.
/cvsroot/zile/zile/src/extern.h	2005-01-14 18:22:55.0	rrt	1.59	1	1	Remove do_completion&apos;s second argument, which wasn&apos;t used foranything.
/cvsroot/zile/zile/src/extern.h	2005-01-14 18:15:04.0	rrt	1.58	2	2	Remove return argument from agetcwd and get_current_dir and make themallocate the returned value instead.
/cvsroot/zile/zile/src/extern.h	2005-01-14 17:56:56.0	rrt	1.57	1	0	Remove sanity_checks from main.c and replace it with an intelligentget_home_dir in file.c.A first, very dumb, implementation of -e in main.c (it should reallybe called -l, and will be).
/cvsroot/zile/zile/src/extern.h	2005-01-13 01:16:16.0	rrt	1.56	1	2	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/extern.h	2005-01-12 13:53:43.0	rrt	1.55	2	1	Factor term_tidy out of main, to tidy up the terminal before leavingZile, and use it in suspend_zile (which already existed, duh) to clearup the screen before suspending. Also fix suspend_zile to redraw thescreen on restarting. A version of this fix will also be applied tothe 2.0 branch.
/cvsroot/zile/zile/src/extern.h	2005-01-12 02:47:45.0	rrt	1.54	3	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/extern.h	2005-01-12 01:28:13.0	rrt	1.53	0	1	Remove zap_buffer_content (it&apos;s only a couple of lines, only calledonce, and is really an ill-advised factorisation).
/cvsroot/zile/zile/src/extern.h	2005-01-12 01:16:45.0	rrt	1.52	2	2	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/extern.h	2005-01-10 16:01:06.0	rrt	1.51	0	2	Get rid of new_line and free_line (these don&apos;t really work sensiblywith lists, as it Depends What You Want To Do.
/cvsroot/zile/zile/src/extern.h	2005-01-10 15:09:45.0	rrt	1.50	1	1	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/extern.h	2005-01-10 01:24:59.0	rrt	1.49	1	0	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/extern.h	2005-01-09 19:19:15.0	rrt	1.48	15	0	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/extern.h	2004-12-20 19:23:22.0	rrt	1.47	1	0	branches:  1.47.2;Add an empty config.h so that the config.h (for the host platform)doesn&apos;t interfere with building mkdoc (for the build platform).Fix some little problems revealed by not having any HAVE_* macrosdefined.
/cvsroot/zile/zile/src/extern.h	2004-12-20 14:17:25.0	rrt	1.46	1	1	Add a flag to completion_try, popup_when_complete that signals if wewant the *Completions* window even when the string supplied is alreadycomplete (i.e. when it is both a completion and a prefix of some othercompletion(s)). We want to pop up the completions list in this caseonly when completions were expressly requested by pressing TAB.In fact completion_try should really be factored into two functions,one of which deals with the screen and the other of which looks forcompletions.
/cvsroot/zile/zile/src/extern.h	2004-12-20 13:48:53.0	rrt	1.45	3	0	Get rid of action functions for completions; at the moment we onlyhave one (the default action), and frankly YAGNI.
/cvsroot/zile/zile/src/extern.h	2004-11-15 00:57:54.0	rrt	1.44	1	2	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/extern.h	2004-11-14 17:29:07.0	rrt	1.43	1	1	Rename term_unget_char to term_unget (it really does unget akeystroke, not a char).
/cvsroot/zile/zile/src/extern.h	2004-10-25 01:55:57.0	rrt	1.42	1	1	Fix term_unget_char so that it works with keystrokes includingmodifiers.
/cvsroot/zile/zile/src/extern.h	2004-10-16 22:19:13.0	rrt	1.41	3	3	Rename term_ungetkey to the more accurate term_unget_char.Redo ungetkey support in term_termcap.c to cope with fast input.In extern.h reflect change to meaning of waitkey functions.
/cvsroot/zile/zile/src/extern.h	2004-10-15 01:30:44.0	rrt	1.40	1	0	Rename static auto_fill_break_line to non-static fill_break_line, sothat it can be used by fill-paragraph.
/cvsroot/zile/zile/src/extern.h	2004-10-13 17:52:19.0	rrt	1.39	0	1	term_read_screen_size doesn&apos;t need to be in the API.
/cvsroot/zile/zile/src/extern.h	2004-10-13 17:50:17.0	rrt	1.38	4	2	Make window resizing work for termcap.
/cvsroot/zile/zile/src/extern.h	2004-10-11 03:17:40.0	rrt	1.37	0	1	Get rid of ad-hoc printable character support, and use isgraph.Printable support should be done using locales.As a result, we no longer have any cached variables, so get rid ofcached variable support too.
/cvsroot/zile/zile/src/extern.h	2004-10-11 02:57:48.0	rrt	1.36	0	1	Remove unused term_open function.
/cvsroot/zile/zile/src/extern.h	2004-10-08 15:30:45.0	rrt	1.35	5	4	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/extern.h	2004-10-06 18:32:19.0	rrt	1.34	2	3	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/extern.h	2004-09-20 16:22:07.0	rrt	1.33	1	1	Make term_attrset vararg, so it will cope with both allegro/cursesstyle of attributes (all set at once) and termcap style (cumulative).Reverse video is now working in the termcap terminal!
/cvsroot/zile/zile/src/extern.h	2004-07-11 02:51:43.0	rrt	1.32	2	2	Remove term_minibuf_clear which no longer exists, and addminibuf_clear, which was missing.
/cvsroot/zile/zile/src/extern.h	2004-07-11 02:29:37.0	rrt	1.31	0	2	Get rid of term_minibuf_clear, and replace it withterm_minibuf_write(&quot;&quot;), which is functionally identical.Get rid of term_getyx, as it can&apos;t be implemented in termcap (I wasusing the ncurses getyx call, which returned nonsense results).Fix a bug in term_addnstr in term_termcap.c.Comment:It seems that not calling term_getyx to save the position of thecursor when writing to the minibuffer has caused no ill effects, but Icould be wrong; something to watch out for...The display now seems basically to work under termcap, as the changeschecked in here fix the minibuffer.
/cvsroot/zile/zile/src/extern.h	2004-05-29 18:38:43.0	rrt	1.30	3	2	A few small bits of twiddling to make the term interface tidier, andfix bug 962722 (selection highlighting broken).
/cvsroot/zile/zile/src/extern.h	2004-05-21 00:34:50.0	rrt	1.29	23	4	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/extern.h	2004-04-23 22:42:39.0	rrt	1.28	1	1	Make compact_path allocate its result, rather than taking it as aparameter.
/cvsroot/zile/zile/src/extern.h	2004-04-05 15:27:44.0	rrt	1.27	4	2	Tidy up implementation of global-set-key.Make a few messages more Emacs-like.Remove describe-key-briefly: describe-key is fine.Note: there&apos;s now a function keyvectostr to turn a list of key chordsinto a string.
/cvsroot/zile/zile/src/extern.h	2004-04-05 02:50:47.0	rrt	1.26	0	1	Add keybinding (global-set-key).
/cvsroot/zile/zile/src/extern.h	2004-04-04 22:33:12.0	rrt	1.25	0	4	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/extern.h	2004-03-30 00:47:01.0	rrt	1.24	1	0	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/extern.h	2004-03-14 15:36:05.0	rrt	1.23	0	18	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/extern.h	2004-03-10 12:00:51.0	rrt	1.22	1	1	Rename desactivate_mark to deactivate_mark (better English).
/cvsroot/zile/zile/src/extern.h	2004-03-10 00:10:45.0	rrt	1.21	1	1	Remove char buffers from funcs.c; change shorten_string to return anastr to help this.Tweak the spacing of the headers for list-buffers to make them line upwith the output.
/cvsroot/zile/zile/src/extern.h	2004-03-09 20:06:35.0	rrt	1.20	1	1	Remove more static buffers.
/cvsroot/zile/zile/src/extern.h	2004-03-09 19:52:30.0	rrt	1.19	3	3	Remove more static buffers and rewrite string-to-key conversion as aresult.
/cvsroot/zile/zile/src/extern.h	2004-03-09 17:30:00.0	rrt	1.18	2	3	Convert static buffers to astrs.Fix keytostr situation: keytostr was no longer called, so renamekeytostr_nobs to keytostr, and rewrite to use astrs.
/cvsroot/zile/zile/src/extern.h	2004-03-08 16:34:11.0	rrt	1.17	1	1	Use a vector for holding key code sequences instead of an array.
/cvsroot/zile/zile/src/extern.h	2004-02-17 21:21:18.0	ssigala	1.16	1	1	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/extern.h	2004-02-16 02:02:37.0	dacap	1.15	1	1	Fixed `line_replace_text&apos; with `replace_case&apos; argument to copy orreplace characters case.
/cvsroot/zile/zile/src/extern.h	2004-02-08 05:39:26.0	dacap	1.14	181	140	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/extern.h	2004-02-04 03:55:24.0	dacap	1.13	1	1	Removed prev_bp.
/cvsroot/zile/zile/src/extern.h	2004-01-29 11:40:22.0	rrt	1.12	6	2	Add Lua support, enabled with --enable-lua. At the moment, the onlyway it can be used is via M-x lua, which allows a lua statement to beexecuted in a single, persistent Lua state. If the statement returns astring or number, it is pasted at point.
/cvsroot/zile/zile/src/extern.h	2004-01-29 05:33:19.0	dacap	1.11	0	3	Removed getkey_safe and&#x9;refresh_clock_timeout.
/cvsroot/zile/zile/src/extern.h	2004-01-29 04:52:01.0	dacap	1.10	2	2	Changed &quot;s&quot; argument in insert_nstring to const.
/cvsroot/zile/zile/src/extern.h	2004-01-21 02:51:43.0	dacap	1.9	1	0	Added `goto_point&apos;.
/cvsroot/zile/zile/src/extern.h	2004-01-21 02:28:04.0	dacap	1.8	3	0	Added getkey_safe() and refresh_clock_timeout() routines.
/cvsroot/zile/zile/src/extern.h	2003-10-25 01:32:08.0	ssigala	1.7	15	1	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/extern.h	2003-05-19 23:50:25.0	rrt	1.6	12	12	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/extern.h	2003-05-07 00:28:42.0	rrt	1.5	18	1	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/extern.h	2003-04-24 17:47:40.0	rrt	1.4	3	0	Fix [ 723165 ] zile 1.6.1 mishandles undo command in overwrite mode;patch by Nicolas Duboc (nduboc@sf.net)
/cvsroot/zile/zile/src/extern.h	2003-04-24 17:36:50.0	rrt	1.3	4	3	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/extern.h	2003-04-24 17:11:59.0	rrt	1.2	180	230	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/extern.h	2001-01-19 23:02:00.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/extern.h	2001-01-19 23:08:04.0	ssigala	1.1.1.2	2	11	import of version 1.3.
/cvsroot/zile/zile/src/extern.h	2001-01-19 23:02:00.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/extern.h	2005-02-27 18:43:49.0	rrt	1.47.2.2	2	0	Fix special keys (in particular cursor keys) around suspend andcontinue. Fix copied from Zee.
/cvsroot/zile/zile/src/extern.h	2005-02-03 03:20:50.0	rrt	1.47.2.1	1	0	Backport David Capello&apos;s term_allegro fixes from CVS HEAD.
/cvsroot/zile/zile/src/file.c	2005-02-07 02:36:43.0	rrt	1.71	23	12	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/file.c	2005-02-05 14:49:04.0	rrt	1.70	2	2	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/file.c	2005-02-05 02:49:13.0	rrt	1.69	2	2	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/file.c	2005-02-03 02:00:00.0	rrt	1.68	4	3	More fixes for the fixes to copy_file, again from Hans.
/cvsroot/zile/zile/src/file.c	2005-02-02 03:17:40.0	rrt	1.67	33	11	Security fix to copy_file from Han Boethes.
/cvsroot/zile/zile/src/file.c	2005-01-29 14:06:27.0	rrt	1.66	2	2	Make an incorrectly typed size_t an int.
/cvsroot/zile/zile/src/file.c	2005-01-27 02:33:17.0	rrt	1.65	5	5	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/file.c	2005-01-27 02:27:22.0	rrt	1.64	15	12	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/file.c	2005-01-23 19:39:03.0	rrt	1.63	1	3	Remove test for limits.h, it&apos;s a standard ISO/ANSI header file.Some code and comment reformatting, including a couple of docstringimprovements.
/cvsroot/zile/zile/src/file.c	2005-01-23 15:11:38.0	rrt	1.62	3	3	Remove ZTRACE and ztrace, which were not really used any more.Move prototypes for zmalloc &amp;c. to a new section in extern.h(zmalloc.c) from glue.c, where the functions used to live.
/cvsroot/zile/zile/src/file.c	2005-01-17 19:09:22.0	rrt	1.61	1	2	Fix auto-fill-mode so it applies to all buffers, not just the scratchbuffer. Fix already applied to 2.0.Use ^ instead of &amp; and | to toggle flags.Fix formatting of a docstring.Move cancel in funcs.c to directly before keyboard_quit (morelogical).
/cvsroot/zile/zile/src/file.c	2005-01-16 14:07:43.0	rrt	1.60	4	4	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/file.c	2005-01-14 18:15:06.0	rrt	1.59	14	16	Remove return argument from agetcwd and get_current_dir and make themallocate the returned value instead.
/cvsroot/zile/zile/src/file.c	2005-01-14 17:56:56.0	rrt	1.58	19	11	Remove sanity_checks from main.c and replace it with an intelligentget_home_dir in file.c.A first, very dumb, implementation of -e in main.c (it should reallybe called -l, and will be).
/cvsroot/zile/zile/src/file.c	2005-01-14 01:43:31.0	rrt	1.57	4	10	Reformat some comments and remove a tautological assert.
/cvsroot/zile/zile/src/file.c	2005-01-13 01:16:16.0	rrt	1.56	2	2	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/file.c	2005-01-12 01:16:45.0	rrt	1.55	32	25	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/file.c	2005-01-10 15:09:45.0	rrt	1.54	10	27	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/file.c	2005-01-10 02:31:52.0	rrt	1.53	12	12	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/file.c	2005-01-10 01:24:59.0	rrt	1.52	19	2	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/file.c	2005-01-10 00:56:03.0	rrt	1.51	839	839	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/file.c	2005-01-09 19:11:13.0	rrt	1.50	2	4	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/file.c	2004-12-27 02:10:06.0	rrt	1.49	13	3	branches:  1.49.2;Rewrite the undo code to behave more like Emacs: record all bufferstates that are unchanged, and reset them when the buffer is saved.
/cvsroot/zile/zile/src/file.c	2004-12-24 14:52:04.0	rrt	1.48	4	2	Fix a read of uninitialised memory found by valgrind.
/cvsroot/zile/zile/src/file.c	2004-12-20 19:51:29.0	rrt	1.47	9	7	Fix a bug where a buffer could end up without a line ending setting.Acknowledge Richard Smith&apos;s help with cross-compiling.
/cvsroot/zile/zile/src/file.c	2004-12-17 12:53:53.0	rrt	1.46	26	11	Add auto line-end detection. Copes with CR, LF, CRLF and LFCR.
/cvsroot/zile/zile/src/file.c	2004-11-15 23:01:31.0	rrt	1.45	7	1	Add support for systems without fchown or fchmod. Do not use chown orchmod on such systems; that would result in race condition. Instead,just omit the unsupported calls.
/cvsroot/zile/zile/src/file.c	2004-11-15 00:57:54.0	rrt	1.44	4	4	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/file.c	2004-10-25 01:10:31.0	rrt	1.43	1	31	Remove two unused functions.
/cvsroot/zile/zile/src/file.c	2004-10-16 22:24:09.0	rrt	1.42	1	53	Remove switch-to-correlated-buffer. This is not used often enough tobe in zile.
/cvsroot/zile/zile/src/file.c	2004-10-16 22:17:03.0	rrt	1.41	4	4	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/file.c	2004-10-13 18:04:06.0	rrt	1.40	3	1	Find all the times where the minibuffer is written to and then akeypress required, and insert term_refresh() to bring the screen up todate.
/cvsroot/zile/zile/src/file.c	2004-10-12 14:29:50.0	rrt	1.39	8	17	Fix saving file (before, since my change of the Line structure, it wassaving corrupt data), and factor the code better.
/cvsroot/zile/zile/src/file.c	2004-10-12 02:19:47.0	rrt	1.38	33	1	Revert my changes to filename expansion. They seem to have beenwrong-headed, as, I think, was the TODO that inspired them (hence Ihaven&apos;t reverted that).The code in expand_path still needs refactoring.
/cvsroot/zile/zile/src/file.c	2004-10-06 19:30:33.0	rrt	1.37	2	34	As per TODO:  Move code to deal with ~/ and ~user from expand_path to  default_completion_reread (and factor out into a separate function).
/cvsroot/zile/zile/src/file.c	2004-10-06 18:32:19.0	rrt	1.36	8	33	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/file.c	2004-09-26 12:55:12.0	rrt	1.35	16	20	Rewrite create_backup_filename to use an astr for its result, andthereby remove a malloc bug (found by David).
/cvsroot/zile/zile/src/file.c	2004-07-11 02:29:37.0	rrt	1.34	2	3	Get rid of term_minibuf_clear, and replace it withterm_minibuf_write(&quot;&quot;), which is functionally identical.Get rid of term_getyx, as it can&apos;t be implemented in termcap (I wasusing the ncurses getyx call, which returned nonsense results).Fix a bug in term_addnstr in term_termcap.c.Comment:It seems that not calling term_getyx to save the position of thecursor when writing to the minibuffer has caused no ill effects, but Icould be wrong; something to watch out for...The display now seems basically to work under termcap, as the changeschecked in here fix the minibuffer.
/cvsroot/zile/zile/src/file.c	2004-05-21 00:34:50.0	rrt	1.33	2	2	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/file.c	2004-05-10 18:00:32.0	rrt	1.32	2	2	Add code to configure.ac so that if we&apos;re building with GCC we getplenty of compiler warnings turned on. Always.As a result of this warnings bonanza, fix all the warnings found inthe rest of the code. Given a recent warnings cleanup, this was mostlylimited to extern functions that were not declared before beingdefined. In all cases here this was fixed by making the function static.
/cvsroot/zile/zile/src/file.c	2004-05-02 08:19:34.0	rrt	1.31	2	2	Deal with zero-length pwd in expand_path.
/cvsroot/zile/zile/src/file.c	2004-04-23 23:18:54.0	rrt	1.30	3	1	Add a save_undop member to Terminal struct and use it to record thenext undo point each time the file is saved so that the &quot;modified&quot;flag is only cleared when the buffer matches its last saved state.
/cvsroot/zile/zile/src/file.c	2004-04-23 22:42:39.0	rrt	1.29	834	836	Make compact_path allocate its result, rather than taking it as aparameter.
/cvsroot/zile/zile/src/file.c	2004-04-04 22:33:12.0	rrt	1.28	3	9	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/file.c	2004-04-04 21:48:53.0	rrt	1.27	6	81	Remove &quot;revision&quot; mode of backup, which is just bloat. Again, if youwant this level of functionality, use a bigger editor.
/cvsroot/zile/zile/src/file.c	2004-03-30 00:47:01.0	rrt	1.26	29	29	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/file.c	2004-03-14 15:36:05.0	rrt	1.25	2	74	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/file.c	2004-03-13 20:59:51.0	rrt	1.24	1	12	For the remaining #if 0 code (except for one bit of dacap&apos;s which isunfinished) either remove it or change #if 0 to #if DEBUG.
/cvsroot/zile/zile/src/file.c	2004-03-13 17:28:49.0	rrt	1.23	1	2	Remove an unused variable.
/cvsroot/zile/zile/src/file.c	2004-03-13 14:26:16.0	rrt	1.22	6	6	Get rid of castr and replace it with const astr, which isself-documenting, and used rarely enough that having a specific aliasis not worthwhile.Get rid of ENLARGE_FACTOR which wasn&apos;t used.Add static astr_pos(), which turns negative positions into positivefor those routines that take a pos parameter. Instead of truncatingthe given pos to the actual size of the string, it asserts that it isin range; I&apos;ll see if this causes problems and take appropriateaction. It does seem preferable to allowing bad positions, though.Add astr_char, to return the address of a given character.Remove astr_last_char (replaced with *astr_char(as ,-1)).Moved more documentation to astr.h from astr.3.
/cvsroot/zile/zile/src/file.c	2004-03-11 14:50:14.0	rrt	1.21	15	23	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/file.c	2004-03-10 14:01:12.0	rrt	1.20	3	3	Remove some rarely or never used astr functions, and debug and speed upastr_rfind_cstr, basing it on strrstr, an implementation of which isnow added to libzile.
/cvsroot/zile/zile/src/file.c	2004-03-09 17:17:59.0	rrt	1.19	3	1	Fix a compiler warning when no non-text modes are configured.
/cvsroot/zile/zile/src/file.c	2004-02-18 00:20:33.0	rrt	1.18	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/file.c	2004-02-17 21:21:18.0	ssigala	1.17	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/file.c	2004-02-14 11:07:00.0	dacap	1.16	22	22	Removed color support from minibuf.
/cvsroot/zile/zile/src/file.c	2004-02-08 05:39:26.0	dacap	1.15	54	72	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/file.c	2004-02-04 03:56:21.0	dacap	1.14	3	7	Removed prev_bp.
/cvsroot/zile/zile/src/file.c	2003-12-08 22:48:15.0	rrt	1.13	6	9	The main while loop in expand_path had a typo at the start: it had &quot;sp!= &apos;\0&apos;&quot; instead of &quot;*sp != &apos;\0&apos;&quot; so it was a potentially infiniteloop.I also simplified the code for dealing with // in a path.
/cvsroot/zile/zile/src/file.c	2003-11-29 00:09:37.0	rrt	1.12	11	9	Run text-mode hooks when entering text mode. To do this, add a call tothe text-mode hooks in find_file_hooks in an else clause (this iszile, we don&apos;t have a fundamental mode, text is the lowest we go!),and compile find_file_hooks() and the call to it from find_file()unconditionally.In passing, #ifdef the declaration of c_file[] and shell_file[]conditional on the relevant modes.
/cvsroot/zile/zile/src/file.c	2003-10-25 01:32:08.0	ssigala	1.11	36	40	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/file.c	2003-09-08 01:13:54.0	rrt	1.10	1	5	Remove erroneous addition of NULs to strings (astrs are alwaysNUL-terminated, and adding a NUL just makes the length wrong). Thisfixes filename completion, which had stopped working.
/cvsroot/zile/zile/src/file.c	2003-06-24 16:00:52.0	rrt	1.9	3	3	Fix a slew of compiler warnings caught by -Wall (thanks to NicolasDuboc for putting me on the case!)
/cvsroot/zile/zile/src/file.c	2003-06-24 14:22:39.0	rrt	1.8	2	1	Include ctype.h for isspace (thanks to Nicolas Duboc).
/cvsroot/zile/zile/src/file.c	2003-05-26 00:01:26.0	rrt	1.7	12	7	Get rid of the fixed-size buffer for reading userids. expand_path nowseems not to work, but it didn&apos;t even before this change.
/cvsroot/zile/zile/src/file.c	2003-05-23 11:37:25.0	ssigala	1.6	2	2	shut up some implicit (const char *) -&gt; (char *) casts warnings
/cvsroot/zile/zile/src/file.c	2003-05-19 23:50:25.0	rrt	1.5	116	163	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/file.c	2003-05-07 00:28:42.0	rrt	1.4	128	26	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/file.c	2003-04-24 17:36:50.0	rrt	1.3	181	64	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/file.c	2003-04-24 17:11:59.0	rrt	1.2	204	74	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/file.c	2001-01-19 23:02:08.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/file.c	2001-01-19 23:08:05.0	ssigala	1.1.1.2	13	25	import of version 1.3.
/cvsroot/zile/zile/src/file.c	2001-01-19 23:02:08.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/file.c	2005-02-03 02:02:02.0	rrt	1.49.2.9	4	3	More fixes for the fixes to copy_file, again from Han.
/cvsroot/zile/zile/src/file.c	2005-02-02 02:50:04.0	rrt	1.49.2.8	7	11	Remove bogus frees and fix bogus logic in copy_file.
/cvsroot/zile/zile/src/file.c	2005-02-02 00:49:39.0	rrt	1.49.2.7	30	4	Security fix to copy_file from Han Boetes.
/cvsroot/zile/zile/src/file.c	2005-02-02 00:42:49.0	rrt	1.49.2.6	2	2	Fix return code.
/cvsroot/zile/zile/src/file.c	2005-02-02 00:28:19.0	rrt	1.49.2.5	2	2	Tweak error message.
/cvsroot/zile/zile/src/file.c	2005-02-02 00:23:49.0	rrt	1.49.2.4	7	7	Fix a couple of bugs in copy_file found by Han Boetes.
/cvsroot/zile/zile/src/file.c	2005-01-26 16:17:22.0	rrt	1.49.2.3	1	3	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/src/file.c	2005-01-17 19:02:14.0	rrt	1.49.2.2	1	2	Fix auto-fill-mode so it applies to all new buffers, not just thefirst.
/cvsroot/zile/zile/src/file.c	2005-01-11 19:05:03.0	rrt	1.49.2.1	8	6	Fix for filename expansion: // means &quot;restart from /&quot;. Thanks toNicolas Duboc for noticing this bug. Fix also applied to head.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-04-04 22:33:12.0	rrt	1.12	1	1	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-03-14 15:36:05.0	rrt	1.11	1	252	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-02-18 10:47:41.0	rrt	1.10	6	3	Fix character constant parsing.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-02-18 00:19:42.0	rrt	1.9	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-02-17 21:21:18.0	ssigala	1.8	39	42	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-02-08 05:39:26.0	dacap	1.7	11	11	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Attic/fontlock.c	2004-01-23 02:34:43.0	dacap	1.6	3	2	Fixed the usage of &quot;make_heredoc_string&quot; checking ENABLE_SHELL_MODEdefinition.
/cvsroot/zile/zile/src/Attic/fontlock.c	2003-10-25 01:32:08.0	ssigala	1.5	146	160	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/Attic/fontlock.c	2003-05-19 23:50:25.0	rrt	1.4	12	12	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/Attic/fontlock.c	2003-05-07 00:28:42.0	rrt	1.3	188	71	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/fontlock.c	2003-04-24 17:11:59.0	rrt	1.2	83	9	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/Attic/fontlock.c	2001-01-19 23:02:09.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/fontlock.c	2001-01-19 23:08:05.0	ssigala	1.1.1.2	2	3	import of version 1.3.
/cvsroot/zile/zile/src/Attic/fontlock.c	2001-01-19 23:02:09.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/fontlock_c.c	2003-06-24 14:28:09.0	rrt	1.3	0	0	Remove these files, as they&apos;re generated. In any case, the versions inCVS are made by gperf 2.5, and don&apos;t compile cleanly (thanks toNicolas Duboc for pointing this out).
/cvsroot/zile/zile/src/Attic/fontlock_c.c	2003-05-07 00:28:42.0	rrt	1.2	123	97	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/fontlock_c.c	2001-01-19 23:02:10.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/fontlock_c.c	2001-01-19 23:02:10.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/fontlock_c.gperf	2004-03-14 15:36:05.0	rrt	1.2	0	0	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/fontlock_c.gperf	2001-01-19 23:02:10.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/fontlock_c.gperf	2001-01-19 23:02:10.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/fontlock_cpp.c	2003-06-24 14:28:09.0	rrt	1.3	0	0	Remove these files, as they&apos;re generated. In any case, the versions inCVS are made by gperf 2.5, and don&apos;t compile cleanly (thanks toNicolas Duboc for pointing this out).
/cvsroot/zile/zile/src/Attic/fontlock_cpp.c	2003-05-07 00:28:42.0	rrt	1.2	187	136	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/fontlock_cpp.c	2001-01-19 23:02:11.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/fontlock_cpp.c	2001-01-19 23:02:11.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/fontlock_cpp.gperf	2004-03-14 15:36:05.0	rrt	1.2	0	0	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/fontlock_cpp.gperf	2001-01-19 23:02:11.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/fontlock_cpp.gperf	2001-01-19 23:02:11.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/fontlock_csharp.c	2003-06-24 14:28:09.0	rrt	1.2	0	0	Remove these files, as they&apos;re generated. In any case, the versions inCVS are made by gperf 2.5, and don&apos;t compile cleanly (thanks toNicolas Duboc for pointing this out).
/cvsroot/zile/zile/src/Attic/fontlock_csharp.c	2003-05-07 00:28:42.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/fontlock_csharp.gperf	2004-03-14 15:36:05.0	rrt	1.2	0	0	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/fontlock_csharp.gperf	2003-05-07 00:28:42.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/fontlock_java.c	2003-06-24 14:28:09.0	rrt	1.2	0	0	Remove these files, as they&apos;re generated. In any case, the versions inCVS are made by gperf 2.5, and don&apos;t compile cleanly (thanks toNicolas Duboc for pointing this out).
/cvsroot/zile/zile/src/Attic/fontlock_java.c	2003-05-07 00:28:42.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/fontlock_java.gperf	2004-03-14 15:36:05.0	rrt	1.2	0	0	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/fontlock_java.gperf	2003-05-07 00:28:42.0	rrt	1.1	0	0	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/funcs.c	2005-02-27 23:50:33.0	rrt	1.87	8	8	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/funcs.c	2005-02-07 02:36:44.0	rrt	1.86	95	52	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/funcs.c	2005-02-06 21:21:07.0	rrt	1.85	10	12	Add an argument indicating the presence of the universal arg to theprototype for Zile commands. Since many commands assume uniarg == 0means no uniarg, don&apos;t violate this assumption yet.Move execute_command next to execute_extended_command.
/cvsroot/zile/zile/src/funcs.c	2005-02-05 02:49:14.0	rrt	1.84	4	4	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/funcs.c	2005-02-02 03:16:22.0	rrt	1.83	5	5	Whitespace fixes.
/cvsroot/zile/zile/src/funcs.c	2005-01-30 15:37:48.0	rrt	1.82	3	3	A little reformatting.
/cvsroot/zile/zile/src/funcs.c	2005-01-30 03:41:13.0	dacap	1.81	13	4	nModified paragraph routines to be more like Emacs.
/cvsroot/zile/zile/src/funcs.c	2005-01-29 14:05:32.0	rrt	1.80	14	14	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/funcs.c	2005-01-28 03:38:32.0	rrt	1.79	3	3	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/funcs.c	2005-01-28 02:02:10.0	rrt	1.78	4	4	Fix set-fill-column so it really does set the variable.
/cvsroot/zile/zile/src/funcs.c	2005-01-28 01:49:30.0	rrt	1.77	2	2	In set-fill-column, allow any uniarg value; test whether to use thator current point column based on whether there is a uniarg, not on itsvalue.
/cvsroot/zile/zile/src/funcs.c	2005-01-28 01:47:50.0	rrt	1.76	2	6	Allow any column in set-fill-column.
/cvsroot/zile/zile/src/funcs.c	2005-01-27 02:33:17.0	rrt	1.75	8	8	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/funcs.c	2005-01-27 02:27:22.0	rrt	1.74	24	18	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/funcs.c	2005-01-27 00:04:46.0	rrt	1.73	12	9	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/funcs.c	2005-01-26 01:03:18.0	rrt	1.72	7	9	Make recasing on replace work as in Emacs (only case-replace andcase-fold-search are not yet implemented).Add length of replacement string as a parameter to line_replace_text.
/cvsroot/zile/zile/src/funcs.c	2005-01-25 19:01:25.0	rrt	1.71	4	4	Fix key processing (#109179) by unbuffering stdin, and make the keybuffer a dynamic string rather than a fixed-size buffer.Rename term_unget to term_ungetkey for consistency.
/cvsroot/zile/zile/src/funcs.c	2005-01-25 13:28:28.0	rrt	1.70	9	9	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/funcs.c	2005-01-22 14:13:14.0	rrt	1.69	3	4	Remove rc.c, and fold read_rc_file into main.Tidy some comments in funcs.c.
/cvsroot/zile/zile/src/funcs.c	2005-01-22 00:25:34.0	rrt	1.68	1	3	Simplify marker adjusting code in line.c to just adjust_markers.Remove Marker.type (don&apos;t need it any more).
/cvsroot/zile/zile/src/funcs.c	2005-01-19 19:43:39.0	rrt	1.67	1	3	Don&apos;t treat ^M specially in quoted-insert. Emacs doesn&apos;t.
/cvsroot/zile/zile/src/funcs.c	2005-01-18 20:10:21.0	rrt	1.66	1	3	Fix SIGTSTP/SIGCONT handling so zile can work as child editor for muttor pine, using code from nano 1.2.4 (which seems to have come fromother places). Thanks everyone who wrote it!Fix also applied to 2.0 branch.
/cvsroot/zile/zile/src/funcs.c	2005-01-17 19:09:23.0	rrt	1.65	16	28	Fix auto-fill-mode so it applies to all buffers, not just the scratchbuffer. Fix already applied to 2.0.Use ^ instead of &amp; and | to toggle flags.Fix formatting of a docstring.Move cancel in funcs.c to directly before keyboard_quit (morelogical).
/cvsroot/zile/zile/src/funcs.c	2005-01-14 18:22:55.0	rrt	1.64	3	3	Remove do_completion&apos;s second argument, which wasn&apos;t used foranything.
/cvsroot/zile/zile/src/funcs.c	2005-01-14 01:43:04.0	rrt	1.63	2	2	Fix removing contents of buffer in write_temp_buffer, copying fix frompopup_completion. Need to do more refactoring in this area.
/cvsroot/zile/zile/src/funcs.c	2005-01-13 01:16:16.0	rrt	1.62	6	9	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/funcs.c	2005-01-13 00:26:18.0	rrt	1.61	21	41	Fix a couple of bugs in transient_mark_mode (fixes also applied to2.0).Tidy up transient_mark_mode and universal_argument.
/cvsroot/zile/zile/src/funcs.c	2005-01-12 13:53:43.0	rrt	1.60	3	1	Factor term_tidy out of main, to tidy up the terminal before leavingZile, and use it in suspend_zile (which already existed, duh) to clearup the screen before suspending. Also fix suspend_zile to redraw thescreen on restarting. A version of this fix will also be applied tothe 2.0 branch.
/cvsroot/zile/zile/src/funcs.c	2005-01-12 01:28:13.0	rrt	1.59	5	2	Remove zap_buffer_content (it&apos;s only a couple of lines, only calledonce, and is really an ill-advised factorisation).
/cvsroot/zile/zile/src/funcs.c	2005-01-12 00:02:07.0	rrt	1.58	1	37	Remove sentence command stubs and references to the commands in thetutorial. Implementing them is still in the wish list, but when ithappens it will almost certainly not be in C, but Lisp.
/cvsroot/zile/zile/src/funcs.c	2005-01-10 15:09:46.0	rrt	1.57	4	4	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/funcs.c	2005-01-10 02:31:52.0	rrt	1.56	21	21	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/funcs.c	2005-01-10 00:56:04.0	rrt	1.55	1302	1302	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/funcs.c	2005-01-09 19:19:15.0	rrt	1.54	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/funcs.c	2005-01-09 19:11:13.0	rrt	1.53	1	3	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/funcs.c	2004-12-26 21:27:09.0	rrt	1.52	6	2	branches:  1.52.2;Replace point at initial position at end of fill_paragraph. Use amarker. Duh. (I didn&apos;t know about markers before.)
/cvsroot/zile/zile/src/funcs.c	2004-12-24 14:53:12.0	rrt	1.51	22	43	Rewrite fill-paragraph. The new implementation is simpler and seemsmore robust than the old, but currently leaves point at the end of theparagraph.
/cvsroot/zile/zile/src/funcs.c	2004-11-14 17:29:07.0	rrt	1.50	4	4	Rename term_unget_char to term_unget (it really does unget akeystroke, not a char).
/cvsroot/zile/zile/src/funcs.c	2004-11-14 01:00:07.0	rrt	1.49	5	1	Enclose fill_paragraph in an undo sequence so it gets undone as asingle action.
/cvsroot/zile/zile/src/funcs.c	2004-11-14 00:57:13.0	rrt	1.48	2	1	Clear the flags set by next_line in fill_paragraph so that the cursordoesn&apos;t resync and hence behave in an unexpected manner afterfill_paragraph.
/cvsroot/zile/zile/src/funcs.c	2004-10-16 23:04:39.0	rrt	1.47	71	22	Implement fill-paragraph.Tidy up the TODO, reordering a bit and rewriting all entries in theform as actions to be done.
/cvsroot/zile/zile/src/funcs.c	2004-10-13 18:04:06.0	rrt	1.46	3	1	Find all the times where the minibuffer is written to and then akeypress required, and insert term_refresh() to bring the screen up todate.
/cvsroot/zile/zile/src/funcs.c	2004-10-13 00:06:40.0	rrt	1.45	5	3	Implement mark-paragraph.
/cvsroot/zile/zile/src/funcs.c	2004-10-13 00:03:19.0	rrt	1.44	21	10	Implement forward-paragraph and backward-paragraph.Move the sentence functions from HIGH PRIORITY to MEDIUM PRIORITY.This means I don&apos;t intend to get them done for zile 2.0.
/cvsroot/zile/zile/src/funcs.c	2004-10-08 15:30:45.0	rrt	1.43	30	25	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/funcs.c	2004-10-06 18:32:19.0	rrt	1.42	29	32	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/funcs.c	2004-05-21 00:34:50.0	rrt	1.41	7	7	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/funcs.c	2004-05-09 21:34:12.0	rrt	1.40	7	17	Simplify quoted_insert and quoted_insert_octal. We don&apos;t really needto wait for the keys before displaying prompts in the minibuffer, andsome of the stuff wasn&apos;t actually working (e.g. if you typed 1 andpressed C-g, the insert was cancelled, but ^G was inserted).
/cvsroot/zile/zile/src/funcs.c	2004-05-09 20:01:57.0	rrt	1.39	2	3	Remove EOB marker. It&apos;s a frivolous feature.
/cvsroot/zile/zile/src/funcs.c	2004-04-23 22:41:40.0	rrt	1.38	5	5	Rename astr_size to astr_len.
/cvsroot/zile/zile/src/funcs.c	2004-04-05 19:30:35.0	rrt	1.37	1	12	Remove text-mode, which no longer does anything.
/cvsroot/zile/zile/src/funcs.c	2004-04-05 19:18:14.0	rrt	1.36	2	2	Remove mail mode mentions in documentation.Change the variable text-mode-auto-fill to auto-fill-mode.
/cvsroot/zile/zile/src/funcs.c	2004-04-05 02:50:25.0	rrt	1.35	1	2	Remove major mode. There aren&apos;t any left.
/cvsroot/zile/zile/src/funcs.c	2004-04-04 23:01:50.0	rrt	1.34	3	11	Get rid of BFLAG_FONTLOCK.In funcs.c, rename make_buffer_mode to make_buffer_modeline forclarity. Don&apos;t bother putting &quot;Text&quot; in the modeline, as we don&apos;t havemajor modes any more.
/cvsroot/zile/zile/src/funcs.c	2004-04-04 22:33:12.0	rrt	1.33	1	6	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/funcs.c	2004-03-30 00:47:01.0	rrt	1.32	15	15	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/funcs.c	2004-03-14 15:36:05.0	rrt	1.31	1	125	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/funcs.c	2004-03-13 17:31:20.0	rrt	1.30	8	9	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/src/funcs.c	2004-03-11 14:50:14.0	rrt	1.29	5	5	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/funcs.c	2004-03-10 12:00:51.0	rrt	1.28	6	6	Rename desactivate_mark to deactivate_mark (better English).
/cvsroot/zile/zile/src/funcs.c	2004-03-10 11:46:21.0	rrt	1.27	7	7	Fix a couple of compile errors in non-text-mode code caused by recentchanges.
/cvsroot/zile/zile/src/funcs.c	2004-03-10 00:10:45.0	rrt	1.26	23	22	Remove char buffers from funcs.c; change shorten_string to return anastr to help this.Tweak the spacing of the headers for list-buffers to make them line upwith the output.
/cvsroot/zile/zile/src/funcs.c	2004-03-09 17:29:00.0	rrt	1.25	12	13	Convert static buffer with potential overflow to an astr inuniversal_argument.
/cvsroot/zile/zile/src/funcs.c	2004-02-23 03:11:30.0	dacap	1.24	4	4	Added some page separators.
/cvsroot/zile/zile/src/funcs.c	2004-02-18 17:21:54.0	ssigala	1.23	9	1	minor tweaks
/cvsroot/zile/zile/src/funcs.c	2004-02-18 00:20:33.0	rrt	1.22	7	7	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/funcs.c	2004-02-17 21:21:18.0	ssigala	1.21	22	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/funcs.c	2004-02-16 02:03:44.0	dacap	1.20	35	16	Fixed `edit_tab_line&apos; and `edit_tab_region&apos;.
/cvsroot/zile/zile/src/funcs.c	2004-02-14 11:08:15.0	dacap	1.19	2	2	Fixed a typo.
/cvsroot/zile/zile/src/funcs.c	2004-02-08 05:39:26.0	dacap	1.18	399	324	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/funcs.c	2004-02-06 05:20:09.0	dacap	1.17	20	5	Fixed `forward-line&apos;.
/cvsroot/zile/zile/src/funcs.c	2004-02-06 02:48:39.0	dacap	1.16	39	31	Fixed mark-word and mark-sexp.
/cvsroot/zile/zile/src/funcs.c	2004-02-05 10:25:48.0	rrt	1.15	3	3	Fix a comment typo.
/cvsroot/zile/zile/src/funcs.c	2004-02-04 13:02:55.0	rrt	1.14	53	49	Implement uniarg functionality for the transpose-* functions.
/cvsroot/zile/zile/src/funcs.c	2004-02-04 03:59:01.0	dacap	1.13	11	18	Simplified the list-buffers function (write_buffers_list really).Also exchange-point-and-mark now activates the mark.
/cvsroot/zile/zile/src/funcs.c	2004-01-31 03:21:59.0	dacap	1.12	8	6	Fixed forward/backward_sexp to recognize &quot;_&quot; character like a sexp characters.
/cvsroot/zile/zile/src/funcs.c	2004-01-27 17:55:16.0	rrt	1.11	5	5	Whitespace correction.
/cvsroot/zile/zile/src/funcs.c	2004-01-21 02:54:59.0	dacap	1.10	440	5	Fixed forward-word.  Added forward-line, transpose-chars,transpose-words, transpose-lines, forward-sexp, backward-sexp,transpose-sexp, mark-word, and mark-sexp.
/cvsroot/zile/zile/src/funcs.c	2004-01-21 02:46:28.0	dacap	1.9	67	35	Modified `universal_argument&apos; to Emacs behavior.
/cvsroot/zile/zile/src/funcs.c	2004-01-21 02:42:22.0	dacap	1.8	10	15	Fixed the overwrite mode behavior with C-q (quoted-insert).
/cvsroot/zile/zile/src/funcs.c	2003-11-29 00:07:02.0	rrt	1.7	5	5	Fix whitespace problems (I&apos;m not that tedious, but I now usewhitespace.el in Emacs, which is).
/cvsroot/zile/zile/src/funcs.c	2003-10-25 01:32:08.0	ssigala	1.6	9	28	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/funcs.c	2003-06-24 16:00:52.0	rrt	1.5	11	1	Fix a slew of compiler warnings caught by -Wall (thanks to NicolasDuboc for putting me on the case!)
/cvsroot/zile/zile/src/funcs.c	2003-05-19 23:50:25.0	rrt	1.4	3	3	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/funcs.c	2003-05-07 00:28:42.0	rrt	1.3	386	71	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/funcs.c	2003-04-24 17:11:59.0	rrt	1.2	401	99	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/funcs.c	2001-01-19 23:02:17.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/funcs.c	2001-01-19 23:08:08.0	ssigala	1.1.1.2	9	97	import of version 1.3.
/cvsroot/zile/zile/src/funcs.c	2001-01-19 23:02:17.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/funcs.c	2005-02-27 19:45:04.0	rrt	1.52.2.5	5	5	Fix whitespace.
/cvsroot/zile/zile/src/funcs.c	2005-01-18 01:33:04.0	rrt	1.52.2.4	3	9	Adapted code from nano 1.2.4 to fix suspend/resume when Zile is usede.g. under pine or mutt.
/cvsroot/zile/zile/src/funcs.c	2005-01-17 19:02:16.0	rrt	1.52.2.3	5	9	Fix auto-fill-mode so it applies to all new buffers, not just thefirst.
/cvsroot/zile/zile/src/funcs.c	2005-01-13 00:22:46.0	rrt	1.52.2.2	3	3	Fix a couple of bugs in transient_mark_mode.
/cvsroot/zile/zile/src/funcs.c	2005-01-12 14:01:45.0	rrt	1.52.2.1	8	1	In suspend_zile, handle the terminal better before and aftersuspension (fix also made to CVS head).
/cvsroot/zile/zile/src/Attic/getopt.c	2005-01-17 23:43:24.0	rrt	1.2	0	0	Use getopt_long_only instead of getopt_long for better Emacscompatibility (i.e. long options can start with a single dash).Rejig the getopt code again (remove lots more non-ANSI stuff) and useAC_REPLACE_FUNCS to import getopt_long_only.c. Assume that if we havethis function then we have getopt.h.
/cvsroot/zile/zile/src/Attic/getopt.c	2005-01-17 02:08:30.0	rrt	1.1	0	0	Add GNU getopt for getopt_long where necessary.
/cvsroot/zile/zile/src/getopt.h	2005-01-17 23:43:24.0	rrt	1.2	1	34	Use getopt_long_only instead of getopt_long for better Emacscompatibility (i.e. long options can start with a single dash).Rejig the getopt code again (remove lots more non-ANSI stuff) and useAC_REPLACE_FUNCS to import getopt_long_only.c. Assume that if we havethis function then we have getopt.h.
/cvsroot/zile/zile/src/getopt.h	2005-01-17 02:08:30.0	rrt	1.1	0	0	Add GNU getopt for getopt_long where necessary.
/cvsroot/zile/zile/src/Attic/getopt1.c	2005-01-17 23:43:24.0	rrt	1.2	0	0	Use getopt_long_only instead of getopt_long for better Emacscompatibility (i.e. long options can start with a single dash).Rejig the getopt code again (remove lots more non-ANSI stuff) and useAC_REPLACE_FUNCS to import getopt_long_only.c. Assume that if we havethis function then we have getopt.h.
/cvsroot/zile/zile/src/Attic/getopt1.c	2005-01-17 02:08:30.0	rrt	1.1	0	0	Add GNU getopt for getopt_long where necessary.
/cvsroot/zile/zile/src/getopt_long_only.c	2005-01-27 02:33:17.0	rrt	1.4	3	3	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/getopt_long_only.c	2005-01-27 00:45:00.0	rrt	1.3	3	3	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/getopt_long_only.c	2005-01-17 23:57:51.0	rrt	1.2	10	144	Cut some more code we don&apos;t need.
/cvsroot/zile/zile/src/getopt_long_only.c	2005-01-17 23:43:24.0	rrt	1.1	0	0	Use getopt_long_only instead of getopt_long for better Emacscompatibility (i.e. long options can start with a single dash).Rejig the getopt code again (remove lots more non-ANSI stuff) and useAC_REPLACE_FUNCS to import getopt_long_only.c. Assume that if we havethis function then we have getopt.h.
/cvsroot/zile/zile/src/glue.c	2005-02-05 02:49:14.0	rrt	1.29	23	2	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/glue.c	2005-01-29 13:55:00.0	rrt	1.28	3	3	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/glue.c	2005-01-27 02:33:17.0	rrt	1.27	5	5	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/glue.c	2005-01-27 02:27:23.0	rrt	1.26	4	4	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/glue.c	2005-01-27 00:54:08.0	rrt	1.25	2	2	Fix -Wconversion warnings in glue.c.
/cvsroot/zile/zile/src/glue.c	2005-01-27 00:52:43.0	rrt	1.24	2	2	Fix -Wconversion warnings in undo.c.
/cvsroot/zile/zile/src/glue.c	2005-01-25 19:01:27.0	rrt	1.23	2	2	Fix key processing (#109179) by unbuffering stdin, and make the keybuffer a dynamic string rather than a fixed-size buffer.Rename term_unget to term_ungetkey for consistency.
/cvsroot/zile/zile/src/glue.c	2005-01-23 15:11:39.0	rrt	1.22	1	19	Remove ZTRACE and ztrace, which were not really used any more.Move prototypes for zmalloc &amp;c. to a new section in extern.h(zmalloc.c) from glue.c, where the functions used to live.
/cvsroot/zile/zile/src/glue.c	2005-01-16 14:07:44.0	rrt	1.21	3	6	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/glue.c	2005-01-10 15:09:46.0	rrt	1.20	4	4	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/glue.c	2005-01-10 02:31:53.0	rrt	1.19	3	3	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/glue.c	2005-01-10 00:56:04.0	rrt	1.18	138	138	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/glue.c	2004-11-15 01:47:12.0	rrt	1.17	1	43	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/glue.c	2004-11-15 00:57:54.0	rrt	1.16	4	13	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/glue.c	2004-11-14 17:29:07.0	rrt	1.15	2	2	Rename term_unget_char to term_unget (it really does unget akeystroke, not a char).
/cvsroot/zile/zile/src/glue.c	2004-10-16 22:17:03.0	rrt	1.14	8	8	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/glue.c	2004-10-06 18:32:19.0	rrt	1.13	7	9	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/glue.c	2004-05-21 00:34:50.0	rrt	1.12	6	6	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/glue.c	2004-03-30 00:47:01.0	rrt	1.11	26	6	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/glue.c	2004-03-10 00:10:45.0	rrt	1.10	7	6	Remove char buffers from funcs.c; change shorten_string to return anastr to help this.Tweak the spacing of the headers for list-buffers to make them line upwith the output.
/cvsroot/zile/zile/src/glue.c	2004-02-17 21:21:18.0	ssigala	1.9	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/glue.c	2004-02-16 02:04:39.0	dacap	1.8	7	5	Fixed `tabify_string&apos;.
/cvsroot/zile/zile/src/glue.c	2004-02-08 05:39:26.0	dacap	1.7	14	62	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/glue.c	2004-01-28 11:47:33.0	rrt	1.6	2	2	Whitespace correction.
/cvsroot/zile/zile/src/glue.c	2004-01-21 02:50:05.0	dacap	1.5	24	1	Added `goto_point&apos; routine from undo.c.
/cvsroot/zile/zile/src/glue.c	2003-10-25 01:32:08.0	ssigala	1.4	20	3	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/glue.c	2003-05-07 00:28:42.0	rrt	1.3	2	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/glue.c	2003-04-24 17:11:59.0	rrt	1.2	48	4	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/glue.c	2001-01-19 23:02:18.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/glue.c	2001-01-19 23:08:08.0	ssigala	1.1.1.2	4	60	import of version 1.3.
/cvsroot/zile/zile/src/glue.c	2001-01-19 23:02:18.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/hash.c	2003-05-06 14:46:09.0	rrt	1.2	1	1	These files shouldn&apos;t be here any more, they&apos;re replaced by htable in lib/.
/cvsroot/zile/zile/src/Attic/hash.c	2001-01-19 23:02:19.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/hash.c	2001-01-19 23:08:08.0	ssigala	1.1.1.2	2	2	import of version 1.3.
/cvsroot/zile/zile/src/Attic/hash.c	2001-01-19 23:02:19.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/hash.h	2003-05-06 14:46:10.0	rrt	1.2	1	1	These files shouldn&apos;t be here any more, they&apos;re replaced by htable in lib/.
/cvsroot/zile/zile/src/Attic/hash.h	2001-01-19 23:02:21.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/hash.h	2001-01-19 23:08:08.0	ssigala	1.1.1.2	2	2	import of version 1.3.
/cvsroot/zile/zile/src/Attic/hash.h	2001-01-19 23:02:21.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/help.c	2005-02-14 22:57:47.0	rrt	1.31	2	2	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/src/help.c	2005-02-07 02:36:44.0	rrt	1.30	17	9	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/help.c	2005-01-31 00:24:34.0	rrt	1.29	2	1	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/help.c	2005-01-27 00:04:47.0	rrt	1.28	4	3	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/help.c	2005-01-23 19:39:03.0	rrt	1.27	1	3	Remove test for limits.h, it&apos;s a standard ISO/ANSI header file.Some code and comment reformatting, including a couple of docstringimprovements.
/cvsroot/zile/zile/src/help.c	2005-01-14 17:56:57.0	rrt	1.26	2	3	Remove sanity_checks from main.c and replace it with an intelligentget_home_dir in file.c.A first, very dumb, implementation of -e in main.c (it should reallybe called -l, and will be).
/cvsroot/zile/zile/src/help.c	2005-01-12 11:55:33.0	rrt	1.25	3	3	Rename help-faq to view-zile-FAQ and help-tutorial tohelp-with-tutorial for consistency with Emacs.
/cvsroot/zile/zile/src/help.c	2005-01-10 00:56:04.0	rrt	1.24	164	164	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/help.c	2004-12-20 12:15:38.0	rrt	1.23	3	2	branches:  1.23.2;Make minibuf_write update the screen (this won&apos;t slow things down muchand avoids having to remember to call it).This fixes an unreported bug where describe-key would not display&quot;Which key:&quot; correctly.
/cvsroot/zile/zile/src/help.c	2004-11-14 22:34:56.0	rrt	1.22	1	111	Remove minihelp files and functions. They are a pain to maintain,they&apos;re not Emacs-like, and this editor is not designed for novices(who should use nano or something similar).
/cvsroot/zile/zile/src/help.c	2004-11-14 22:05:04.0	rrt	1.21	2	2	Fix a bug in fix_alternative_keys.
/cvsroot/zile/zile/src/help.c	2004-10-16 22:36:50.0	rrt	1.20	1	9	Remove LATEST_VERSION and associated command and replace it with aquestion in the FAQ.
/cvsroot/zile/zile/src/help.c	2004-10-06 18:32:19.0	rrt	1.19	6	6	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/help.c	2004-05-09 20:01:57.0	rrt	1.18	2	3	Remove EOB marker. It&apos;s a frivolous feature.
/cvsroot/zile/zile/src/help.c	2004-04-23 22:41:40.0	rrt	1.17	2	2	Rename astr_size to astr_len.
/cvsroot/zile/zile/src/help.c	2004-04-05 15:27:44.0	rrt	1.16	3	21	Tidy up implementation of global-set-key.Make a few messages more Emacs-like.Remove describe-key-briefly: describe-key is fine.Note: there&apos;s now a function keyvectostr to turn a list of key chordsinto a string.
/cvsroot/zile/zile/src/help.c	2004-03-30 00:47:01.0	rrt	1.15	6	6	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/help.c	2004-03-13 17:31:20.0	rrt	1.14	23	20	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/src/help.c	2004-03-11 14:50:14.0	rrt	1.13	2	2	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/help.c	2004-03-10 14:27:14.0	rrt	1.12	2	2	Remove more rarely used and unused functions from astr.
/cvsroot/zile/zile/src/help.c	2004-02-18 00:20:33.0	rrt	1.11	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/help.c	2004-02-17 21:21:18.0	ssigala	1.10	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/help.c	2004-02-14 11:14:01.0	dacap	1.9	7	7	Removed color support from minibuf.
/cvsroot/zile/zile/src/help.c	2004-02-08 05:39:26.0	dacap	1.8	9	14	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/help.c	2004-01-29 08:23:10.0	rrt	1.7	3	4	Use VERSION from automake, not version.h.
/cvsroot/zile/zile/src/help.c	2003-10-25 01:32:08.0	ssigala	1.6	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/help.c	2003-05-19 23:50:25.0	rrt	1.5	17	18	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/help.c	2003-05-07 00:28:42.0	rrt	1.4	26	8	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/help.c	2003-04-24 17:36:50.0	rrt	1.3	21	13	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/help.c	2003-04-24 17:11:59.0	rrt	1.2	149	78	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/help.c	2001-01-19 23:02:23.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/help.c	2001-01-19 23:08:09.0	ssigala	1.1.1.2	10	10	import of version 1.3.
/cvsroot/zile/zile/src/help.c	2001-01-19 23:02:23.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/help.c	2005-01-26 16:17:22.0	rrt	1.23.2.1	1	3	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/src/history.c	2005-01-10 00:56:04.0	rrt	1.7	48	48	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/history.c	2005-01-09 19:11:13.0	rrt	1.6	26	29	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/history.c	2005-01-08 23:41:34.0	rrt	1.5	3	3	Fix some bad spacing.
/cvsroot/zile/zile/src/history.c	2004-03-09 17:19:11.0	rrt	1.4	2	1	#include string.h for mem* functions.
/cvsroot/zile/zile/src/history.c	2004-02-18 17:21:54.0	ssigala	1.3	2	2	minor tweaks
/cvsroot/zile/zile/src/history.c	2004-02-17 21:21:18.0	ssigala	1.2	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/history.c	2004-02-08 05:39:26.0	dacap	1.1	0	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Attic/htable.c	2005-01-22 12:30:14.0	rrt	1.6	1	1	Remove htable, as it&apos;s no longer used (was only used by variableimplementation).
/cvsroot/zile/zile/src/Attic/htable.c	2005-01-10 02:31:53.0	rrt	1.5	3	3	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/Attic/htable.c	2005-01-10 00:56:04.0	rrt	1.4	105	105	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/Attic/htable.c	2005-01-09 19:11:13.0	rrt	1.3	6	6	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/Attic/htable.c	2004-11-15 13:36:13.0	rrt	1.2	9	1	Add stub zile_exit function to tests and mkdoc so they can use zmallocand friends. This is ugly, but the simplest thing I can think of.Add tests to src/.cvsignore.Add the object files the tests need to src/Makefile.am.
/cvsroot/zile/zile/src/Attic/htable.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Attic/htable.h	2005-01-22 12:30:14.0	rrt	1.4	1	1	Remove htable, as it&apos;s no longer used (was only used by variableimplementation).
/cvsroot/zile/zile/src/Attic/htable.h	2005-01-10 00:56:04.0	rrt	1.3	3	3	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/Attic/htable.h	2005-01-09 19:11:13.0	rrt	1.2	3	3	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/Attic/htable.h	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/keys.c	2005-02-06 02:49:13.0	rrt	1.19	19	18	Add where-is (closes feature request #1088394).Remove list-functions (not in Emacs, and no longer needed).Add case for space key to chordtostr.Change some int&apos;s to size_t&apos;s in key conversion routines.Fix a bug in write_bindings left over from conversion from alist tolist.
/cvsroot/zile/zile/src/keys.c	2005-01-29 13:51:53.0	rrt	1.18	5	4	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/keys.c	2005-01-27 02:33:17.0	rrt	1.17	11	11	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/keys.c	2005-01-27 02:27:23.0	rrt	1.16	12	13	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/keys.c	2005-01-10 00:56:04.0	rrt	1.15	225	225	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/keys.c	2005-01-09 01:19:37.0	rrt	1.14	2	1	Add #include of ctype.h for isgraph.
/cvsroot/zile/zile/src/keys.c	2005-01-09 01:18:20.0	rrt	1.13	5	2	Fix chordtostr to deal better with non-printing characters.
/cvsroot/zile/zile/src/keys.c	2004-04-05 15:27:44.0	rrt	1.12	22	3	Tidy up implementation of global-set-key.Make a few messages more Emacs-like.Remove describe-key-briefly: describe-key is fine.Note: there&apos;s now a function keyvectostr to turn a list of key chordsinto a string.
/cvsroot/zile/zile/src/keys.c	2004-03-30 00:47:01.0	rrt	1.11	31	31	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/keys.c	2004-03-11 14:50:14.0	rrt	1.10	2	2	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/keys.c	2004-03-09 19:52:30.0	rrt	1.9	109	140	Remove more static buffers and rewrite string-to-key conversion as aresult.
/cvsroot/zile/zile/src/keys.c	2004-03-09 17:30:00.0	rrt	1.8	38	152	Convert static buffers to astrs.Fix keytostr situation: keytostr was no longer called, so renamekeytostr_nobs to keytostr, and rewrite to use astrs.
/cvsroot/zile/zile/src/keys.c	2004-03-08 16:34:11.0	rrt	1.7	18	11	Use a vector for holding key code sequences instead of an array.
/cvsroot/zile/zile/src/keys.c	2004-02-17 21:21:18.0	ssigala	1.6	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/keys.c	2004-01-21 02:18:12.0	dacap	1.5	2	2	Fixed a bug in strtokey0() to handle the `M-\&apos; key combination.
/cvsroot/zile/zile/src/keys.c	2003-10-25 01:32:08.0	ssigala	1.4	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/keys.c	2003-05-07 00:28:42.0	rrt	1.3	2	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/keys.c	2003-04-24 17:11:59.0	rrt	1.2	7	4	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/keys.c	2001-01-19 23:02:26.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/keys.c	2001-01-19 23:08:09.0	ssigala	1.1.1.2	3	119	import of version 1.3.
/cvsroot/zile/zile/src/keys.c	2001-01-19 23:02:26.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/killring.c	2005-02-07 02:36:44.0	rrt	1.22	15	8	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/killring.c	2005-02-06 21:09:32.0	rrt	1.21	4	4	Add kill-whole-line (closes #1108706).
/cvsroot/zile/zile/src/killring.c	2005-01-27 02:33:17.0	rrt	1.20	4	4	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/killring.c	2005-01-27 02:27:23.0	rrt	1.19	6	6	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/killring.c	2005-01-25 13:28:29.0	rrt	1.18	3	3	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/killring.c	2005-01-23 19:43:52.0	rrt	1.17	2	3	Simplify free_kill_ring: free(NULL) is perfectly OK.
/cvsroot/zile/zile/src/killring.c	2005-01-14 23:31:34.0	rrt	1.16	2	2	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/killring.c	2005-01-10 15:09:46.0	rrt	1.15	2	2	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/killring.c	2005-01-10 02:31:53.0	rrt	1.14	3	3	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/killring.c	2005-01-10 00:56:05.0	rrt	1.13	210	210	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/killring.c	2005-01-09 19:19:15.0	rrt	1.12	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/killring.c	2004-10-06 18:32:19.0	rrt	1.11	2	2	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/killring.c	2004-03-10 12:00:51.0	rrt	1.10	5	5	Rename desactivate_mark to deactivate_mark (better English).
/cvsroot/zile/zile/src/killring.c	2004-03-09 17:20:03.0	rrt	1.9	1	8	Remove unused static function kill_ring_push_in_beginning
/cvsroot/zile/zile/src/killring.c	2004-02-18 00:20:33.0	rrt	1.8	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/killring.c	2004-02-17 21:21:18.0	ssigala	1.7	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/killring.c	2004-02-08 05:39:26.0	dacap	1.6	57	107	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/killring.c	2003-10-25 01:32:08.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/killring.c	2003-06-24 16:00:52.0	rrt	1.4	2	1	Fix a slew of compiler warnings caught by -Wall (thanks to NicolasDuboc for putting me on the case!)
/cvsroot/zile/zile/src/killring.c	2003-05-07 00:28:42.0	rrt	1.3	144	10	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/killring.c	2003-04-24 17:11:59.0	rrt	1.2	10	8	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/killring.c	2001-01-19 23:02:27.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/killring.c	2001-01-19 23:02:27.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/line.c	2005-02-09 01:23:55.0	rrt	1.63	5	3	Fix a space leak in intercalate_newline.
/cvsroot/zile/zile/src/line.c	2005-02-07 02:36:44.0	rrt	1.62	21	12	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/line.c	2005-02-06 21:21:08.0	rrt	1.61	2	1	Add an argument indicating the presence of the universal arg to theprototype for Zile commands. Since many commands assume uniarg == 0means no uniarg, don&apos;t violate this assumption yet.Move execute_command next to execute_extended_command.
/cvsroot/zile/zile/src/line.c	2005-02-05 14:49:05.0	rrt	1.60	5	5	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/line.c	2005-02-05 02:49:14.0	rrt	1.59	2	2	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/line.c	2005-01-28 03:07:05.0	rrt	1.58	42	19	Fix fill_break_line.Fix some signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/line.c	2005-01-27 02:33:17.0	rrt	1.57	5	5	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/line.c	2005-01-27 02:27:23.0	rrt	1.56	23	17	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/line.c	2005-01-27 01:24:50.0	rrt	1.55	8	8	Fix -Wconversion warnings.
/cvsroot/zile/zile/src/line.c	2005-01-27 01:21:25.0	rrt	1.54	2	2	Fix -Wconversion warnings in search.c.
/cvsroot/zile/zile/src/line.c	2005-01-27 00:04:47.0	rrt	1.53	11	11	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/line.c	2005-01-26 19:34:17.0	rrt	1.52	2	3	Remove case-fold-search, which no longer has a point.
/cvsroot/zile/zile/src/line.c	2005-01-26 01:25:19.0	rrt	1.51	7	6	Use size_t instead of unsigned for string lengths (duh).Use case-fold-search and case-replace to check whether stringreplacement should follow case.
/cvsroot/zile/zile/src/line.c	2005-01-26 01:03:30.0	rrt	1.50	44	27	Make recasing on replace work as in Emacs (only case-replace andcase-fold-search are not yet implemented).Add length of replacement string as a parameter to line_replace_text.
/cvsroot/zile/zile/src/line.c	2005-01-22 00:33:25.0	rrt	1.49	6	8	Simplify adjust_markers a little further, and rename the parameters toclarify the code.
/cvsroot/zile/zile/src/line.c	2005-01-22 00:25:35.0	rrt	1.48	25	77	Simplify marker adjusting code in line.c to just adjust_markers.Remove Marker.type (don&apos;t need it any more).
/cvsroot/zile/zile/src/line.c	2005-01-20 17:55:02.0	rrt	1.47	17	29	Simplify intercalate_newline and insert_newline, implementing thelatter in terms of the former rather than using common_insert_newlineand a flag. Hence, simplify adjust_markers_for_addline.Tidy up some other code a little.
/cvsroot/zile/zile/src/line.c	2005-01-19 01:40:50.0	rrt	1.46	2	2	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/line.c	2005-01-14 23:31:34.0	rrt	1.45	3	4	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/line.c	2005-01-12 01:16:49.0	rrt	1.44	2	2	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/line.c	2005-01-10 16:01:06.0	rrt	1.43	1	23	Get rid of new_line and free_line (these don&apos;t really work sensiblywith lists, as it Depends What You Want To Do.
/cvsroot/zile/zile/src/line.c	2005-01-10 15:09:46.0	rrt	1.42	15	28	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/line.c	2005-01-10 02:31:53.0	rrt	1.41	22	24	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/line.c	2005-01-10 00:56:05.0	rrt	1.40	500	500	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/line.c	2005-01-09 19:19:15.0	rrt	1.39	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/line.c	2005-01-03 01:45:27.0	rrt	1.38	7	7	branches:  1.38.2;Fix indent_relative. Again. Oops.
/cvsroot/zile/zile/src/line.c	2004-12-31 17:52:42.0	rrt	1.37	7	6	Fix indent_relative to deal with tabs properly so we don&apos;t overshoot.
/cvsroot/zile/zile/src/line.c	2004-12-17 12:31:10.0	rrt	1.36	19	1	Add open-line. Closes Requests-972472.
/cvsroot/zile/zile/src/line.c	2004-10-15 01:30:44.0	rrt	1.35	4	4	Rename static auto_fill_break_line to non-static fill_break_line, sothat it can be used by fill-paragraph.
/cvsroot/zile/zile/src/line.c	2004-10-06 19:28:06.0	rrt	1.34	4	5	Remove unnecessary variable lp2len, which was used uninitialised.
/cvsroot/zile/zile/src/line.c	2004-10-06 18:32:19.0	rrt	1.33	53	167	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/line.c	2004-10-05 21:32:39.0	rrt	1.32	3	4	Fix a comment typo.Tidy up some code with a trivial transformation.
/cvsroot/zile/zile/src/line.c	2004-09-25 04:06:47.0	dacap	1.31	1	3	Removed the anchors stuff.
/cvsroot/zile/zile/src/line.c	2004-05-21 00:34:50.0	rrt	1.30	2	2	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/line.c	2004-05-10 18:00:35.0	rrt	1.29	5	5	Add code to configure.ac so that if we&apos;re building with GCC we getplenty of compiler warnings turned on. Always.As a result of this warnings bonanza, fix all the warnings found inthe rest of the code. Given a recent warnings cleanup, this was mostlylimited to extern functions that were not declared before beingdefined. In all cases here this was fixed by making the function static.
/cvsroot/zile/zile/src/line.c	2004-04-04 22:33:12.0	rrt	1.28	3	28	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/line.c	2004-03-14 15:36:05.0	rrt	1.27	2	89	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/line.c	2004-03-10 12:00:51.0	rrt	1.26	6	6	Rename desactivate_mark to deactivate_mark (better English).
/cvsroot/zile/zile/src/line.c	2004-03-10 11:27:04.0	rrt	1.25	41	41	Make RET do auto-fill as well as SPC.Remove special-case code from self_insert_command for KBD_RET andKBD_TAB, which aren&apos;t handled here anyway. If they do end up bound toself-insert-command, then they should act in a vanilla way anyway.
/cvsroot/zile/zile/src/line.c	2004-02-20 17:05:52.0	rrt	1.24	2	3	Fix replace_text_case in the case that the replacement string isshorter than the original.
/cvsroot/zile/zile/src/line.c	2004-02-18 00:20:33.0	rrt	1.23	6	4	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/line.c	2004-02-17 21:21:18.0	ssigala	1.22	21	28	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/line.c	2004-02-16 02:06:10.0	dacap	1.21	41	19	Fixed `indent_relative&apos;, `line_replace_text&apos; and `adjust_markers_for_offset&apos;.
/cvsroot/zile/zile/src/line.c	2004-02-14 11:15:28.0	dacap	1.20	6	9	Modified/added comments.
/cvsroot/zile/zile/src/line.c	2004-02-08 05:39:26.0	dacap	1.19	383	325	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/line.c	2004-02-06 02:53:47.0	dacap	1.18	16	16	Changes in the coding style.
/cvsroot/zile/zile/src/line.c	2004-02-04 03:45:05.0	dacap	1.17	3	3	Fixed `insert_char&apos; to don&apos;t move the mark when insert a character inthe same mark position.Fixed `insert_nstring&apos; when is used in overwrite-mode.
/cvsroot/zile/zile/src/line.c	2004-02-04 00:41:33.0	rrt	1.16	24	5	Implement low priority TODO: case-matching search and replace.
/cvsroot/zile/zile/src/line.c	2004-01-29 16:24:11.0	rrt	1.15	27	37	Use memmove instead of memcpy when memory regions can overlap (thanksto valgrind). It&apos;s probably worth keeping memcpy calls in, as they areeffectively assumptions that the regions don&apos;t overlap, which valgrindcan test.Fix auto_fill_break_line again. The previous algorithm was really justbroken in the presence of tabs (because they made the screen positiondifferent from the position in the line buffer).
/cvsroot/zile/zile/src/line.c	2004-01-29 04:50:50.0	dacap	1.14	2	2	Change &quot;s&quot; argument in insert_nstring to const.
/cvsroot/zile/zile/src/line.c	2004-01-28 11:37:07.0	rrt	1.13	2	3	Tighten type of insert_string (parameter is const).
/cvsroot/zile/zile/src/line.c	2004-01-21 03:04:04.0	dacap	1.12	27	1	Added `delete-horizontal-space&apos; and `just-one-space&apos; functions.
/cvsroot/zile/zile/src/line.c	2004-01-21 02:39:08.0	dacap	1.11	53	8	Fixed the overwrite mode behavior.
/cvsroot/zile/zile/src/line.c	2003-10-25 01:32:08.0	ssigala	1.10	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/line.c	2003-10-01 00:11:11.0	rrt	1.9	8	6	Don&apos;t try to index past the end of a line in auto-fill-mode: limit theindex to the max of (fill column, current line length). This can gowrong when there are tabs in the line.
/cvsroot/zile/zile/src/line.c	2003-05-25 23:20:12.0	rrt	1.8	1	13	Make vasprintf mandatory, and provide an implementation for thoseplatforms that lack it (courtesy of David Taillandier&apos;s xnprintf library).
/cvsroot/zile/zile/src/line.c	2003-05-20 00:26:19.0	rrt	1.7	1	3	Remove a spurious increment that should have been removed whenapplying patches earlier.
/cvsroot/zile/zile/src/line.c	2003-05-19 23:50:25.0	rrt	1.6	3	3	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/line.c	2003-05-07 00:28:42.0	rrt	1.5	65	27	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/line.c	2003-04-24 17:47:40.0	rrt	1.4	78	28	Fix [ 723165 ] zile 1.6.1 mishandles undo command in overwrite mode;patch by Nicolas Duboc (nduboc@sf.net)
/cvsroot/zile/zile/src/line.c	2003-04-24 17:43:51.0	rrt	1.3	4	3	Fix [ 723142 ] zile 1.6.1 mishandles cursor positions on multiplewindows; patch from Nicolas Duboc (nduboc@sf.net).
/cvsroot/zile/zile/src/line.c	2003-04-24 17:11:59.0	rrt	1.2	27	9	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/line.c	2001-01-19 23:02:32.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/line.c	2001-01-19 23:08:11.0	ssigala	1.1.1.2	296	59	import of version 1.3.
/cvsroot/zile/zile/src/line.c	2001-01-19 23:02:32.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/line.c	2005-02-11 23:00:44.0	rrt	1.38.2.2	8	5	Fix a couple of memory leaks (fixes copied from HEAD).
/cvsroot/zile/zile/src/line.c	2005-01-28 03:19:09.0	rrt	1.38.2.1	34	13	Fix fill_break_line (fix merged from HEAD).
/cvsroot/zile/zile/src/lisp.c	2005-02-27 23:50:33.0	rrt	1.8	1	3	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/lisp.c	2005-02-08 20:27:57.0	rrt	1.7	17	3	Fix display of minibuffer in Allegro.Remove unused leDelete.Move eval_init and eval_finalise to lisp.c (and rename lisp_init andlisp_finalise) so they can be more general than just for eval.c.
/cvsroot/zile/zile/src/lisp.c	2005-01-25 17:48:28.0	rrt	1.6	4	3	Update dump format to make more readable test output.
/cvsroot/zile/zile/src/lisp.c	2005-01-25 01:51:12.0	rrt	1.5	10	6	Fix getc_string and ungetc_string for EOF.
/cvsroot/zile/zile/src/lisp.c	2005-01-24 23:50:50.0	rrt	1.4	32	27	Implement eval-expression.Stop lisp_read evaluating the expression it reads. Move thisfunctionality to lisp_dump.Fix getc_string for end of string (return EOF).Don&apos;t pause before showing first buffer if the splash screen isskipped (fix merged from 2.0 branch).
/cvsroot/zile/zile/src/lisp.c	2005-01-22 19:28:59.0	rrt	1.3	4	4	Make arguments of lisp_read_file and lisp_read_string const char *.Remove rc.c prototypes from extern.h.
/cvsroot/zile/zile/src/lisp.c	2005-01-22 13:32:04.0	rrt	1.2	5	12	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/src/lisp.c	2005-01-19 01:40:52.0	rrt	1.1	0	0	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/list.c	2005-01-29 14:15:39.0	rrt	1.7	2	2	Fix a couple of warnings.
/cvsroot/zile/zile/src/list.c	2005-01-27 02:33:17.0	rrt	1.6	5	5	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/list.c	2005-01-27 00:45:00.0	rrt	1.5	2	2	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/list.c	2005-01-11 01:07:27.0	rrt	1.4	4	4	Fix size passed to malloc calls (bug introduced as a result ofchanging list to be struct list_s * rather than the struct itself).
/cvsroot/zile/zile/src/list.c	2005-01-10 10:19:20.0	rrt	1.3	3	2	Clarify empty for loops.
/cvsroot/zile/zile/src/list.c	2005-01-10 01:24:03.0	rrt	1.2	22	2	Add license to top of file.
/cvsroot/zile/zile/src/list.c	2005-01-09 19:11:13.0	rrt	1.1	0	0	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/list.h	2005-01-27 02:33:17.0	rrt	1.4	6	3	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/list.h	2005-01-27 00:45:00.0	rrt	1.3	2	2	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/list.h	2005-01-10 01:24:03.0	rrt	1.2	22	1	Add license to top of file.
/cvsroot/zile/zile/src/list.h	2005-01-09 19:11:13.0	rrt	1.1	0	0	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/lists.c	2005-02-08 20:27:57.0	rrt	1.17	18	24	Fix display of minibuffer in Allegro.Remove unused leDelete.Move eval_init and eval_finalise to lisp.c (and rename lisp_init andlisp_finalise) so they can be more general than just for eval.c.
/cvsroot/zile/zile/src/lists.c	2005-01-29 14:15:39.0	rrt	1.16	2	1	Fix a couple of warnings.
/cvsroot/zile/zile/src/lists.c	2005-01-25 17:48:28.0	rrt	1.15	2	2	Update dump format to make more readable test output.
/cvsroot/zile/zile/src/lists.c	2005-01-25 13:28:29.0	rrt	1.14	5	10	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/lists.c	2005-01-25 01:27:48.0	rrt	1.13	3	3	Make some char * ptrs into const char *.
/cvsroot/zile/zile/src/lists.c	2005-01-24 23:49:26.0	rrt	1.12	3	3	Add a few spaces.
/cvsroot/zile/zile/src/lists.c	2005-01-24 14:56:14.0	rrt	1.11	2	2	Make Zile&apos;s commands (F_* functions, listed in tbl_funcs.h) availablein Lisp. Need really to have only one sort of Lisp function, butneither Zile&apos;s nor lithp&apos;s form is quite ideal.Add another &quot;indestructible constant&quot;, leT (true).
/cvsroot/zile/zile/src/lists.c	2005-01-23 15:14:56.0	rrt	1.10	8	2	Remove garbage_collect, which was just a stub, and the correspondingeval_cb_nothing.Tidy up eval.c, formatting it like the rest of the Zile code, andtidying up a lot of the code.Make leWipe not free leNIL, and add leReallyWipe, which does freeleNIL. Could use this for other constants, but really need a gc.Remove tests of functions that no longer exist from test3.el.
/cvsroot/zile/zile/src/lists.c	2005-01-22 02:04:56.0	rrt	1.9	6	6	Make output of leDump and leDumpEvalTree slightly neater (omit excessspaces).
/cvsroot/zile/zile/src/lists.c	2005-01-22 01:10:20.0	rrt	1.8	3	2	A little reformatting.
/cvsroot/zile/zile/src/lists.c	2005-01-19 02:21:04.0	rrt	1.7	3	2	Fix a dodgy leWipe call: don&apos;t try to leWipe NULL or leNIL.
/cvsroot/zile/zile/src/lists.c	2005-01-19 01:40:52.0	rrt	1.6	12	10	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/lists.c	2005-01-17 01:28:43.0	rrt	1.5	4	4	Fix a couple of bugs in dumping sexps.
/cvsroot/zile/zile/src/lists.c	2005-01-15 00:46:47.0	rrt	1.4	60	60	Make dumping functions return an astr.Tidy up the code to conform to formatting in the rest of Zile.
/cvsroot/zile/zile/src/lists.c	2005-01-14 23:31:10.0	rrt	1.3	136	162	Reformat code for consistency.
/cvsroot/zile/zile/src/lists.c	2005-01-13 08:45:51.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/lists.c	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/lists.h	2005-02-08 20:28:00.0	rrt	1.7	1	2	Fix display of minibuffer in Allegro.Remove unused leDelete.Move eval_init and eval_finalise to lisp.c (and rename lisp_init andlisp_finalise) so they can be more general than just for eval.c.
/cvsroot/zile/zile/src/lists.h	2005-01-31 00:24:34.0	rrt	1.6	2	2	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/lists.h	2005-01-25 01:27:59.0	rrt	1.5	3	3	Make some char * ptrs into const char *.
/cvsroot/zile/zile/src/lists.h	2005-01-23 15:14:56.0	rrt	1.4	2	1	Remove garbage_collect, which was just a stub, and the correspondingeval_cb_nothing.Tidy up eval.c, formatting it like the rest of the Zile code, andtidying up a lot of the code.Make leWipe not free leNIL, and add leReallyWipe, which does freeleNIL. Could use this for other constants, but really need a gc.Remove tests of functions that no longer exist from test3.el.
/cvsroot/zile/zile/src/lists.h	2005-01-15 00:46:47.0	rrt	1.3	28	27	Make dumping functions return an astr.Tidy up the code to conform to formatting in the rest of Zile.
/cvsroot/zile/zile/src/lists.h	2005-01-13 08:45:52.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/lists.h	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/Attic/lithp.c	2005-01-19 01:40:52.0	rrt	1.5	1	1	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/Attic/lithp.c	2005-01-17 01:28:21.0	rrt	1.4	7	10	Clean up code that dumps the result of running the loaded sexps.
/cvsroot/zile/zile/src/Attic/lithp.c	2005-01-15 00:46:47.0	rrt	1.3	4	4	Make dumping functions return an astr.Tidy up the code to conform to formatting in the rest of Zile.
/cvsroot/zile/zile/src/Attic/lithp.c	2005-01-13 08:45:52.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/Attic/lithp.c	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/Attic/lua.c	2004-03-14 15:36:05.0	rrt	1.4	1	1	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/lua.c	2004-03-11 14:50:14.0	rrt	1.3	5	3	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/Attic/lua.c	2004-02-17 21:21:18.0	ssigala	1.2	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/Attic/lua.c	2004-01-29 11:40:22.0	rrt	1.1	0	0	Add Lua support, enabled with --enable-lua. At the moment, the onlyway it can be used is via M-x lua, which allows a lua statement to beexecuted in a single, persistent Lua state. If the statement returns astring or number, it is pasted at point.
/cvsroot/zile/zile/src/macro.c	2005-02-07 02:36:44.0	rrt	1.14	9	5	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/macro.c	2005-02-04 03:10:08.0	rrt	1.13	35	17	Reimplement macro keystrokes so they work for interactive commandstoo.Simplify term_ungetkey: we no longer need to decompose keys back intocharacters, because unbuffered stdin means that keystrokes alwaysarrive whole.
/cvsroot/zile/zile/src/macro.c	2005-01-31 00:24:34.0	rrt	1.12	91	38	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/macro.c	2005-01-30 18:46:16.0	rrt	1.11	19	109	Replace Macro struct with something simpler: just build a list ofkeys.Remove the static alternative_bindings in bind.c, which was set butnever read.Tweak minibuffer message for global-set-key.Remove unused FLAG_EXECUTING_MACRO flag from zile.h.
/cvsroot/zile/zile/src/macro.c	2005-01-29 14:15:39.0	rrt	1.10	2	1	Fix a couple of warnings.
/cvsroot/zile/zile/src/macro.c	2005-01-10 00:56:05.0	rrt	1.9	134	134	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/macro.c	2004-05-07 00:16:53.0	rrt	1.8	10	1	Add dummy function for name-last-kbd-macro and tidy up TODO.
/cvsroot/zile/zile/src/macro.c	2004-02-18 00:20:33.0	rrt	1.7	2	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/macro.c	2004-02-17 21:21:18.0	ssigala	1.6	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/macro.c	2004-02-08 05:39:26.0	dacap	1.5	37	22	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/macro.c	2003-10-25 01:32:09.0	ssigala	1.4	46	48	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/macro.c	2003-05-07 00:28:42.0	rrt	1.3	91	27	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/macro.c	2003-04-24 17:11:59.0	rrt	1.2	9	7	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/macro.c	2001-01-19 23:02:33.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/macro.c	2001-01-19 23:08:11.0	ssigala	1.1.1.2	3	2	import of version 1.3.
/cvsroot/zile/zile/src/macro.c	2001-01-19 23:02:33.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/main.c	2005-02-27 23:50:33.0	rrt	1.85	1	2	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/main.c	2005-02-08 20:28:00.0	rrt	1.84	8	7	Fix display of minibuffer in Allegro.Remove unused leDelete.Move eval_init and eval_finalise to lisp.c (and rename lisp_init andlisp_finalise) so they can be more general than just for eval.c.
/cvsroot/zile/zile/src/main.c	2005-02-05 02:49:14.0	rrt	1.83	2	2	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/main.c	2005-02-03 03:17:00.0	rrt	1.82	3	2	Fix compiler warnings in term_allegro.c, and make sure cursor iscorrectly positioned in all terminals; add term_redraw_cursor to thisend.
/cvsroot/zile/zile/src/main.c	2005-02-02 03:15:22.0	rrt	1.81	5	5	Whitespace fixes.
/cvsroot/zile/zile/src/main.c	2005-01-30 15:35:20.0	rrt	1.80	3	3	Undo a change made by David Capello which clears the minibuffer beforeupdating the terminal, so that errors in the minibuffer disappearbefore they can be read.
/cvsroot/zile/zile/src/main.c	2005-01-30 03:48:18.0	dacap	1.79	4	4	Fixed the open_file() with arguments (now start from the beginning of the buffer)Also, fixed the redraw cycle
/cvsroot/zile/zile/src/main.c	2005-01-29 13:44:49.0	rrt	1.78	9	1	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/main.c	2005-01-27 02:33:17.0	rrt	1.77	2	2	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/main.c	2005-01-27 02:27:23.0	rrt	1.76	3	3	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/main.c	2005-01-24 23:50:51.0	rrt	1.75	14	9	Implement eval-expression.Stop lisp_read evaluating the expression it reads. Move thisfunctionality to lisp_dump.Fix getc_string for end of string (return EOF).Don&apos;t pause before showing first buffer if the splash screen isskipped (fix merged from 2.0 branch).
/cvsroot/zile/zile/src/main.c	2005-01-23 19:39:03.0	rrt	1.74	1	3	Remove test for limits.h, it&apos;s a standard ISO/ANSI header file.Some code and comment reformatting, including a couple of docstringimprovements.
/cvsroot/zile/zile/src/main.c	2005-01-22 14:13:14.0	rrt	1.73	7	3	Remove rc.c, and fold read_rc_file into main.Tidy some comments in funcs.c.
/cvsroot/zile/zile/src/main.c	2005-01-22 13:32:04.0	rrt	1.72	11	4	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/src/main.c	2005-01-19 02:20:22.0	rrt	1.71	3	3	Make --eval and --load take an argument.
/cvsroot/zile/zile/src/main.c	2005-01-19 01:40:52.0	rrt	1.70	72	69	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/main.c	2005-01-18 23:44:29.0	rrt	1.69	2	2	Reformat a comment.
/cvsroot/zile/zile/src/main.c	2005-01-18 22:55:15.0	rrt	1.68	7	5	Make minibuffer welcome message be displayed when splash screen is too(fix ported from 2.0 branch).Don&apos;t mention F1 in splash screen, because it doesn&apos;t work on allplatforms (not even termcap at the moment).
/cvsroot/zile/zile/src/main.c	2005-01-18 20:10:24.0	rrt	1.67	54	8	Fix SIGTSTP/SIGCONT handling so zile can work as child editor for muttor pine, using code from nano 1.2.4 (which seems to have come fromother places). Thanks everyone who wrote it!Fix also applied to 2.0 branch.
/cvsroot/zile/zile/src/main.c	2005-01-17 23:43:24.0	rrt	1.66	3	3	Use getopt_long_only instead of getopt_long for better Emacscompatibility (i.e. long options can start with a single dash).Rejig the getopt code again (remove lots more non-ANSI stuff) and useAC_REPLACE_FUNCS to import getopt_long_only.c. Assume that if we havethis function then we have getopt.h.
/cvsroot/zile/zile/src/main.c	2005-01-17 02:09:55.0	rrt	1.65	6	2	#include &lt;getopt.h&gt; if we have it and &quot;getopt.h&quot; otherwise.
/cvsroot/zile/zile/src/main.c	2005-01-16 14:04:15.0	rrt	1.64	24	24	Common up the various startup strings; because of this, the splashscreen no longer has special formatting characters.Don&apos;t show splash screen if -l is used.
/cvsroot/zile/zile/src/main.c	2005-01-15 01:34:27.0	rrt	1.63	68	25	Add long options, and rework options to be more similar to Emacs.Remove -u, which didn&apos;t work like Emacs&apos;s; its functionality isreplaced by -l.Rename previous -e to -l.Make --version and --help messages similar to Emacs&apos;s.
/cvsroot/zile/zile/src/main.c	2005-01-15 00:43:09.0	rrt	1.62	6	6	Execute any -e file before setting up the terminal, so its output islegible.
/cvsroot/zile/zile/src/main.c	2005-01-14 17:56:57.0	rrt	1.61	9	25	Remove sanity_checks from main.c and replace it with an intelligentget_home_dir in file.c.A first, very dumb, implementation of -e in main.c (it should reallybe called -l, and will be).
/cvsroot/zile/zile/src/main.c	2005-01-14 02:09:11.0	rrt	1.60	3	3	Replace &quot;fatal error:&quot; with &quot;zile:&quot; in fatal error messages forconsistency with other errors.
/cvsroot/zile/zile/src/main.c	2005-01-12 13:53:44.0	rrt	1.59	4	8	Factor term_tidy out of main, to tidy up the terminal before leavingZile, and use it in suspend_zile (which already existed, duh) to clearup the screen before suspending. Also fix suspend_zile to redraw thescreen on restarting. A version of this fix will also be applied tothe 2.0 branch.
/cvsroot/zile/zile/src/main.c	2005-01-12 11:55:34.0	rrt	1.58	4	4	Rename help-faq to view-zile-FAQ and help-tutorial tohelp-with-tutorial for consistency with Emacs.
/cvsroot/zile/zile/src/main.c	2005-01-12 11:39:40.0	rrt	1.57	6	5	Remove command-line parsing code for deleted flags -f and -v, and addcode for -e (evaluate Lisp expression).Update usage message to correspond.
/cvsroot/zile/zile/src/main.c	2005-01-12 02:02:17.0	rrt	1.56	10	12	Update my copyright dates to 2005.
/cvsroot/zile/zile/src/main.c	2005-01-11 23:29:19.0	rrt	1.55	4	4	Call setlocale, to deal with non-C locales. Works best with 8-bit locales.
/cvsroot/zile/zile/src/main.c	2005-01-10 15:09:47.0	rrt	1.54	1	36	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/main.c	2005-01-10 00:56:05.0	rrt	1.53	183	183	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/main.c	2005-01-09 19:23:12.0	rrt	1.52	3	13	Move definition of PATH_MAX into zile.h. Now we&apos;re sure that PATH_MAXwill always be defined, there&apos;s no need to check in main.c.
/cvsroot/zile/zile/src/main.c	2005-01-09 00:20:35.0	rrt	1.51	3	70	Remove -f and -v command-line flags. They&apos;re rarely useful and willeventually be replaced with --eval (when we have a Lisp interpreter).
/cvsroot/zile/zile/src/main.c	2004-12-27 14:25:38.0	rrt	1.50	3	1	branches:  1.50.2;Turn off undo while adding message to scratch buffer so that it is notstored in the undo history.
/cvsroot/zile/zile/src/main.c	2004-11-15 23:19:44.0	rrt	1.49	8	1	Factor code to tidy up the display into main.c; it&apos;s independent ofthe terminal.Similarly, call free_rotation_buffers from main.
/cvsroot/zile/zile/src/main.c	2004-11-15 00:57:54.0	rrt	1.48	3	7	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/main.c	2004-11-15 00:32:48.0	rrt	1.47	12	17	Two changes for greater portability (for the EPOC port):1. If _POSIX_PATH_MAX is not defined, guess a value of 254 for   PATH_MAX (err on the side of safety).2. Use ANSI C signal, not BSD sigaction. Using signal is generally not   a good idea, but here we are only using one-shot fatal signal   handlers, so it shouldn&apos;t be too bad.
/cvsroot/zile/zile/src/main.c	2004-11-14 23:07:29.0	rrt	1.46	1	3	Remove two lines from the splash screen so it will fit on a 20-linescreen (such as a Psion Revo!).
/cvsroot/zile/zile/src/main.c	2004-11-14 22:57:54.0	rrt	1.45	3	4	Remove novice-mode, and always add string to *scratch* buffer, asEmacs does.
/cvsroot/zile/zile/src/main.c	2004-11-14 22:52:27.0	rrt	1.44	1	6	Really extirpate mini help.
/cvsroot/zile/zile/src/main.c	2004-11-14 22:34:56.0	rrt	1.43	5	11	Remove minihelp files and functions. They are a pain to maintain,they&apos;re not Emacs-like, and this editor is not designed for novices(who should use nano or something similar).
/cvsroot/zile/zile/src/main.c	2004-11-01 22:24:45.0	rrt	1.42	2	3	Tidy up a #define (didn&apos;t need to be on two lines).
/cvsroot/zile/zile/src/main.c	2004-10-16 22:17:03.0	rrt	1.41	2	2	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/main.c	2004-10-11 05:02:05.0	rrt	1.40	10	16	Fix the display of the splash screen.Other minor tidy-up.
/cvsroot/zile/zile/src/main.c	2004-10-11 03:34:46.0	rrt	1.39	1	19	Remove select_terminal. We&apos;ve never had more than one interfacecompiled in.
/cvsroot/zile/zile/src/main.c	2004-10-11 03:17:40.0	rrt	1.38	1	4	Get rid of ad-hoc printable character support, and use isgraph.Printable support should be done using locales.As a result, we no longer have any cached variables, so get rid ofcached variable support too.
/cvsroot/zile/zile/src/main.c	2004-10-11 02:57:48.0	rrt	1.37	2	3	Remove unused term_open function.
/cvsroot/zile/zile/src/main.c	2004-10-11 02:47:19.0	rrt	1.36	1	2	Remove irrelevant comment from main.c.Remove #if 1 ... #else from redisplay.c.
/cvsroot/zile/zile/src/main.c	2004-10-08 15:30:45.0	rrt	1.35	7	7	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/main.c	2004-10-05 23:00:56.0	rrt	1.34	3	3	Do update after clearing minibuf so cursor is at correct position onscreen.
/cvsroot/zile/zile/src/main.c	2004-10-05 20:51:12.0	rrt	1.33	4	14	Remove support for putting the time in the status bar. This featureinvolved a lot of (sometimes tricky) code for very little return interms of functionality.
/cvsroot/zile/zile/src/main.c	2004-09-03 04:09:08.0	dacap	1.32	10	1	Added the Allegro interface.
/cvsroot/zile/zile/src/main.c	2004-07-11 01:52:55.0	rrt	1.31	2	2	Tidy up some comments.
/cvsroot/zile/zile/src/main.c	2004-07-01 00:52:41.0	rrt	1.30	3	3	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/main.c	2004-05-29 18:38:43.0	rrt	1.29	2	2	A few small bits of twiddling to make the term interface tidier, andfix bug 962722 (selection highlighting broken).
/cvsroot/zile/zile/src/main.c	2004-05-21 00:34:50.0	rrt	1.28	8	8	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/main.c	2004-05-21 00:13:53.0	rrt	1.27	10	3	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/main.c	2004-05-10 18:49:50.0	rrt	1.26	2	2	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/main.c	2004-05-10 18:39:54.0	rrt	1.25	1	2	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/main.c	2004-05-10 18:00:36.0	rrt	1.24	2	1	Add code to configure.ac so that if we&apos;re building with GCC we getplenty of compiler warnings turned on. Always.As a result of this warnings bonanza, fix all the warnings found inthe rest of the code. Given a recent warnings cleanup, this was mostlylimited to extern functions that were not declared before beingdefined. In all cases here this was fixed by making the function static.
/cvsroot/zile/zile/src/main.c	2004-04-20 04:10:45.0	dacap	1.23	2	5	Removed some vestige of Reuben&apos;s terminfo tests.
/cvsroot/zile/zile/src/main.c	2004-04-16 11:34:41.0	rrt	1.22	1	2	Remove accidentally committed private change.
/cvsroot/zile/zile/src/main.c	2004-04-06 00:31:13.0	rrt	1.21	54	7	Move signal handling code into main.c, as it&apos;s not ncurses-specific.
/cvsroot/zile/zile/src/main.c	2004-03-14 15:36:05.0	rrt	1.20	1	11	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/main.c	2004-03-13 18:27:50.0	rrt	1.19	2	2	Remove unused and underused alist functions, move documentation intoalist.h and get rid of alist.3.
/cvsroot/zile/zile/src/main.c	2004-02-23 02:54:47.0	dacap	1.18	2	2	Changed `setup_main_screen&apos; to be `static&apos;.
/cvsroot/zile/zile/src/main.c	2004-02-17 21:21:18.0	ssigala	1.17	25	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/main.c	2004-02-14 11:16:31.0	dacap	1.16	3	3	Removed color support from minibuf.
/cvsroot/zile/zile/src/main.c	2004-02-08 05:39:26.0	dacap	1.15	53	31	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/main.c	2004-02-05 11:14:43.0	rrt	1.14	2	2	Update the authors list everywhere, and generally rejig to reflectreality.Change bug-reporting address to the zile-devel mailing list.
/cvsroot/zile/zile/src/main.c	2004-02-04 03:50:29.0	dacap	1.13	3	3	Removed prev_bp.
/cvsroot/zile/zile/src/main.c	2004-01-29 11:40:22.0	rrt	1.12	10	0	Add Lua support, enabled with --enable-lua. At the moment, the onlyway it can be used is via M-x lua, which allows a lua statement to beexecuted in a single, persistent Lua state. If the statement returns astring or number, it is pasted at point.
/cvsroot/zile/zile/src/main.c	2004-01-29 08:23:10.0	rrt	1.11	2	3	Use VERSION from automake, not version.h.
/cvsroot/zile/zile/src/main.c	2004-01-28 15:38:05.0	rrt	1.10	11	83	Tests show that the overhead for updating the display once per secondin order to keep the clock up to date is negligible, so Just Do It,and remove all the code that worried about whether it should be doneor not.Added David to the list of authors.Remove compilation time and host from the version string---it looksvery &quot;computery&quot; and isn&apos;t much help when debugging (except, Isuppose, the date for debugging builds, but ls -l `which zile` will dothat fine).
/cvsroot/zile/zile/src/main.c	2004-01-21 02:24:46.0	dacap	1.9	79	2	Added refresh_clock_timeout() to calculate how much time we shouldwait to refresh the clock in the screen (thru the display-time-formatvariable). The routine getkey_safe() does the loop to get a key in alimited time (clock_timeout) and refresh the screen if is necessary.
/cvsroot/zile/zile/src/main.c	2003-10-25 01:32:09.0	ssigala	1.8	5	3	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/main.c	2003-05-19 23:50:25.0	rrt	1.7	3	3	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/main.c	2003-05-15 12:02:44.0	rrt	1.6	1	3	Get rid of use of HAVE_NCURSES (now defunct).
/cvsroot/zile/zile/src/main.c	2003-05-07 01:05:04.0	rrt	1.5	1	5	Since we always require (n)curses, remove USE_NCURSES symbol; alsosince we can use plain curses, rename HAVE_LIBNCURSES to HAVE_LIBCURSES.
/cvsroot/zile/zile/src/main.c	2003-05-07 00:28:42.0	rrt	1.4	83	23	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/main.c	2003-04-24 17:36:51.0	rrt	1.3	3	1	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/main.c	2003-04-24 17:11:59.0	rrt	1.2	36	23	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/main.c	2001-01-19 23:02:36.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/main.c	2001-01-19 23:08:12.0	ssigala	1.1.1.2	64	52	import of version 1.3.
/cvsroot/zile/zile/src/main.c	2001-01-19 23:02:36.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/main.c	2005-02-27 18:43:50.0	rrt	1.50.2.11	3	3	Fix special keys (in particular cursor keys) around suspend andcontinue. Fix copied from Zee.
/cvsroot/zile/zile/src/main.c	2005-02-08 00:29:18.0	rrt	1.50.2.10	6	5	Fix minibuffer being cleared too early in Allegro back end.
/cvsroot/zile/zile/src/main.c	2005-02-03 03:20:50.0	rrt	1.50.2.9	5	4	Backport David Capello&apos;s term_allegro fixes from CVS HEAD.
/cvsroot/zile/zile/src/main.c	2005-01-29 12:59:39.0	rrt	1.50.2.8	5	1	Make sigaction optional, so that Zile compiles again on EPOC.
/cvsroot/zile/zile/src/main.c	2005-01-26 16:17:22.0	rrt	1.50.2.7	1	3	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/src/main.c	2005-01-24 23:29:42.0	rrt	1.50.2.6	7	6	Don&apos;t pause before displaying buffer if the splash screen is skipped.
/cvsroot/zile/zile/src/main.c	2005-01-18 21:57:02.0	rrt	1.50.2.5	4	4	Don&apos;t mention function keys in the splash screen, as they don&apos;t workin some back-ends.
/cvsroot/zile/zile/src/main.c	2005-01-18 21:41:28.0	rrt	1.50.2.4	8	2	Fix minibuffer welcome message when splash screen shown.
/cvsroot/zile/zile/src/main.c	2005-01-18 01:33:08.0	rrt	1.50.2.3	59	11	Adapted code from nano 1.2.4 to fix suspend/resume when Zile is usede.g. under pine or mutt.
/cvsroot/zile/zile/src/main.c	2005-01-17 18:58:02.0	rrt	1.50.2.2	2	2	Bump copyright year for Reuben Thomas to 2005.
/cvsroot/zile/zile/src/main.c	2005-01-11 18:41:35.0	rrt	1.50.2.1	3	1	Fixes for non-C locales: call setlocale in main, and in term_addchtruncate the character added to 8 bits (copes with systems where charis signed).
/cvsroot/zile/zile/src/marker.c	2005-01-25 21:45:15.0	rrt	1.7	8	8	Make unchain_marker static, since it&apos;s used nowhere else and is ofdubious utility outside marker.c.
/cvsroot/zile/zile/src/marker.c	2005-01-22 00:25:36.0	rrt	1.6	1	11	Simplify marker adjusting code in line.c to just adjust_markers.Remove Marker.type (don&apos;t need it any more).
/cvsroot/zile/zile/src/marker.c	2005-01-10 00:56:05.0	rrt	1.5	50	50	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/marker.c	2005-01-09 19:19:15.0	rrt	1.4	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/marker.c	2004-03-09 17:20:28.0	rrt	1.3	2	1	#include string.h for mem* functions.
/cvsroot/zile/zile/src/marker.c	2004-02-17 21:21:18.0	ssigala	1.2	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/marker.c	2004-02-08 05:39:26.0	dacap	1.1	0	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/minibuf.c	2005-02-05 14:49:06.0	rrt	1.37	2	2	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/minibuf.c	2005-01-27 02:33:17.0	rrt	1.36	3	3	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/minibuf.c	2005-01-27 02:27:23.0	rrt	1.35	3	3	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/minibuf.c	2005-01-24 15:58:31.0	rrt	1.34	2	5	Simplify minibuf_read a little.
/cvsroot/zile/zile/src/minibuf.c	2005-01-16 14:07:44.0	rrt	1.33	2	2	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/minibuf.c	2005-01-14 18:15:06.0	rrt	1.32	3	5	Remove return argument from agetcwd and get_current_dir and make themallocate the returned value instead.
/cvsroot/zile/zile/src/minibuf.c	2005-01-13 01:16:16.0	rrt	1.31	4	4	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/minibuf.c	2005-01-10 01:24:59.0	rrt	1.30	1	2	Move agetcwd into file.c and the prototype into extern.h (this is aZile function, not a reimplementation of a standard function).
/cvsroot/zile/zile/src/minibuf.c	2005-01-10 00:56:05.0	rrt	1.29	172	172	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/minibuf.c	2005-01-09 19:11:13.0	rrt	1.28	32	27	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/minibuf.c	2004-12-20 14:17:25.0	rrt	1.27	2	2	branches:  1.27.2;Add a flag to completion_try, popup_when_complete that signals if wewant the *Completions* window even when the string supplied is alreadycomplete (i.e. when it is both a completion and a prefix of some othercompletion(s)). We want to pop up the completions list in this caseonly when completions were expressly requested by pressing TAB.In fact completion_try should really be factored into two functions,one of which deals with the screen and the other of which looks forcompletions.
/cvsroot/zile/zile/src/minibuf.c	2004-12-20 13:48:53.0	rrt	1.26	2	2	Get rid of action functions for completions; at the moment we onlyhave one (the default action), and frankly YAGNI.
/cvsroot/zile/zile/src/minibuf.c	2004-12-20 12:15:38.0	rrt	1.25	5	1	Make minibuf_write update the screen (this won&apos;t slow things down muchand avoids having to remember to call it).This fixes an unreported bug where describe-key would not display&quot;Which key:&quot; correctly.
/cvsroot/zile/zile/src/minibuf.c	2004-11-15 00:57:55.0	rrt	1.24	2	2	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/minibuf.c	2004-10-16 22:17:04.0	rrt	1.23	2	2	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/minibuf.c	2004-10-08 15:30:45.0	rrt	1.22	1	41	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/minibuf.c	2004-07-11 02:29:37.0	rrt	1.21	2	2	Get rid of term_minibuf_clear, and replace it withterm_minibuf_write(&quot;&quot;), which is functionally identical.Get rid of term_getyx, as it can&apos;t be implemented in termcap (I wasusing the ncurses getyx call, which returned nonsense results).Fix a bug in term_addnstr in term_termcap.c.Comment:It seems that not calling term_getyx to save the position of thecursor when writing to the minibuffer has caused no ill effects, but Icould be wrong; something to watch out for...The display now seems basically to work under termcap, as the changeschecked in here fix the minibuffer.
/cvsroot/zile/zile/src/minibuf.c	2004-05-21 00:34:50.0	rrt	1.20	9	9	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/minibuf.c	2004-05-10 18:00:36.0	rrt	1.19	2	2	Add code to configure.ac so that if we&apos;re building with GCC we getplenty of compiler warnings turned on. Always.As a result of this warnings bonanza, fix all the warnings found inthe rest of the code. Given a recent warnings cleanup, this was mostlylimited to extern functions that were not declared before beingdefined. In all cases here this was fixed by making the function static.
/cvsroot/zile/zile/src/minibuf.c	2004-04-23 22:42:39.0	rrt	1.18	181	181	Make compact_path allocate its result, rather than taking it as aparameter.
/cvsroot/zile/zile/src/minibuf.c	2004-04-05 15:27:44.0	rrt	1.17	6	3	Tidy up implementation of global-set-key.Make a few messages more Emacs-like.Remove describe-key-briefly: describe-key is fine.Note: there&apos;s now a function keyvectostr to turn a list of key chordsinto a string.
/cvsroot/zile/zile/src/minibuf.c	2004-03-30 00:47:01.0	rrt	1.16	5	5	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/minibuf.c	2004-03-11 14:50:14.0	rrt	1.15	23	22	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/minibuf.c	2004-03-09 17:21:11.0	rrt	1.14	2	2	Remove a couple of unused variables from minibuf_format
/cvsroot/zile/zile/src/minibuf.c	2004-02-17 21:21:18.0	ssigala	1.13	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/minibuf.c	2004-02-14 11:17:19.0	dacap	1.12	13	107	Removed color support from minibuf.
/cvsroot/zile/zile/src/minibuf.c	2004-02-08 05:39:26.0	dacap	1.11	48	358	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/minibuf.c	2003-12-08 22:48:44.0	rrt	1.10	3	1	Clear dir and fname before calling expand_path a second time.
/cvsroot/zile/zile/src/minibuf.c	2003-11-28 22:24:30.0	rrt	1.9	4	4	Whitespace cleanup.
/cvsroot/zile/zile/src/minibuf.c	2003-10-25 01:32:09.0	ssigala	1.8	6	6	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/minibuf.c	2003-05-25 23:34:56.0	rrt	1.7	9	16	Make historyp.try take an astr for symmetry with historyp.reread.
/cvsroot/zile/zile/src/minibuf.c	2003-05-25 23:23:24.0	rrt	1.6	4	2	Remove the ugly astr_delete_struct_only function and dangerousastr_str function/macro.
/cvsroot/zile/zile/src/minibuf.c	2003-05-19 23:50:25.0	rrt	1.5	61	66	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/minibuf.c	2003-05-07 00:28:42.0	rrt	1.4	8	4	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/minibuf.c	2003-04-24 17:36:51.0	rrt	1.3	68	36	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/minibuf.c	2003-04-24 17:11:59.0	rrt	1.2	153	125	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/minibuf.c	2001-01-19 23:02:42.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/minibuf.c	2001-01-19 23:08:12.0	ssigala	1.1.1.2	15	86	import of version 1.3.
/cvsroot/zile/zile/src/minibuf.c	2001-01-19 23:02:42.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/minibuf.c	2005-02-11 22:15:41.0	rrt	1.27.2.2	1	2	Remove bogus vsprintf after vasprintf in minibuf_format (this fixshould&apos;ve been applied ages ago, and was already in CVS HEAD).
/cvsroot/zile/zile/src/minibuf.c	2005-01-09 18:45:42.0	rrt	1.27.2.1	5	1	Fix minibuf_error to refresh the terminal. (Different fix alreadyapplied to head.)
/cvsroot/zile/zile/src/parser.c	2005-01-27 02:27:24.0	rrt	1.9	3	3	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/parser.c	2005-01-25 01:54:45.0	rrt	1.8	2	5	Remove never-used enumeration elements T_NONE and C_NONE
/cvsroot/zile/zile/src/parser.c	2005-01-25 01:52:05.0	rrt	1.7	9	9	Fix an endless loop on EOF.Format case labels better.
/cvsroot/zile/zile/src/parser.c	2005-01-25 01:28:39.0	rrt	1.6	63	66	Fix some potential buffer overflows by using dynamic strings insteadof static buffers.Make snagAToken static.
/cvsroot/zile/zile/src/parser.c	2005-01-25 00:13:24.0	rrt	1.5	10	13	Untangle some nonsense code.
/cvsroot/zile/zile/src/parser.c	2005-01-22 00:51:08.0	rrt	1.4	107	173	Don&apos;t allow # comments.Reformat code to match rest of Zile code.Do some trivial tidying.
/cvsroot/zile/zile/src/parser.c	2005-01-19 01:41:01.0	rrt	1.3	5	4	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/parser.c	2005-01-13 08:45:52.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/parser.c	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/parser.h	2005-02-09 01:25:04.0	rrt	1.5	10	5	Guard against multiple inclusion.
/cvsroot/zile/zile/src/parser.h	2005-01-25 01:54:45.0	rrt	1.4	3	4	Remove never-used enumeration elements T_NONE and C_NONE
/cvsroot/zile/zile/src/parser.h	2005-01-25 01:28:39.0	rrt	1.3	1	4	Fix some potential buffer overflows by using dynamic strings insteadof static buffers.Make snagAToken static.
/cvsroot/zile/zile/src/parser.h	2005-01-13 08:45:52.0	rrt	1.2	32	24	Add copyright notices.
/cvsroot/zile/zile/src/parser.h	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/Attic/pathbuffer.c	2003-05-19 23:50:25.0	rrt	1.2	0	0	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/Attic/pathbuffer.c	2003-04-25 14:39:31.0	rrt	1.1	0	0	Add files from nduboc@sf.net as part of his patch to support systemslacking PATH_MAX.
/cvsroot/zile/zile/src/Attic/pathbuffer.h	2003-05-19 23:50:25.0	rrt	1.2	0	0	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/Attic/pathbuffer.h	2003-04-25 14:39:31.0	rrt	1.1	0	0	Add files from nduboc@sf.net as part of his patch to support systemslacking PATH_MAX.
/cvsroot/zile/zile/src/point.c	2005-01-27 02:33:17.0	rrt	1.10	2	2	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/point.c	2005-01-27 01:21:25.0	rrt	1.9	2	2	Fix -Wconversion warnings in search.c.
/cvsroot/zile/zile/src/point.c	2005-01-14 23:31:49.0	rrt	1.8	3	3	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/point.c	2005-01-10 15:09:47.0	rrt	1.7	13	24	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/point.c	2005-01-10 02:31:53.0	rrt	1.6	10	10	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/point.c	2005-01-10 00:56:05.0	rrt	1.5	75	75	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/point.c	2004-12-09 01:51:44.0	rrt	1.4	13	6	Use assignment instead of initialisers for non-constant valuesassigned to aggregates, as required by C90.
/cvsroot/zile/zile/src/point.c	2004-10-06 18:32:22.0	rrt	1.3	5	5	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/point.c	2004-02-17 21:21:18.0	ssigala	1.2	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/point.c	2004-02-08 05:39:26.0	dacap	1.1	0	0	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-22 14:13:14.0	rrt	1.22	1	1	Remove rc.c, and fold read_rc_file into main.Tidy some comments in funcs.c.
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-22 13:32:04.0	rrt	1.21	3	130	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-16 14:07:44.0	rrt	1.20	2	2	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-15 01:32:38.0	rrt	1.19	8	17	Remove option allowing a named init file; it&apos;s replaced by --load,which allows any Lisp file to be loaded, and -q, which stops ~/.zilebeing loaded.
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-14 17:56:57.0	rrt	1.18	3	7	Remove sanity_checks from main.c and replace it with an intelligentget_home_dir in file.c.A first, very dumb, implementation of -e in main.c (it should reallybe called -l, and will be).
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-10 00:56:05.0	rrt	1.17	107	107	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/Attic/rc.c	2004-11-15 00:57:55.0	rrt	1.16	3	3	branches:  1.16.2;Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/Attic/rc.c	2004-10-16 22:17:04.0	rrt	1.15	3	3	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/Attic/rc.c	2004-03-30 00:47:01.0	rrt	1.14	3	3	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/Attic/rc.c	2004-03-13 17:31:20.0	rrt	1.13	2	2	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/src/Attic/rc.c	2004-03-09 17:23:30.0	rrt	1.12	9	8	Fix some signed vs unsigned comparison warnings.Make some debugging code use ZTRACE instead of fprintf, and ifdef itwith DEBUG rather than 0.
/cvsroot/zile/zile/src/Attic/rc.c	2004-03-03 02:50:33.0	rrt	1.11	4	3	Audit possible static buffer overflows (I basically searched for\[[0-9] and identified all those instances that could overflow).I have fixed rc.c and ncurses_redisplay.c, which were two of the worstoffenders; the remaining problematic files are now listed inKNOWNBUGS. As far as I can see, all other uses of static char buffersare safe.
/cvsroot/zile/zile/src/Attic/rc.c	2004-02-18 00:20:33.0	rrt	1.10	5	3	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/Attic/rc.c	2004-02-17 21:21:18.0	ssigala	1.9	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/Attic/rc.c	2004-02-08 05:39:26.0	dacap	1.8	6	6	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/Attic/rc.c	2004-01-21 02:20:59.0	dacap	1.7	38	11	Fixed overflow in parse_id_line() for long variable names inconfiguration file.
/cvsroot/zile/zile/src/Attic/rc.c	2003-10-25 01:32:09.0	ssigala	1.6	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/Attic/rc.c	2003-05-19 23:50:25.0	rrt	1.5	13	14	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/Attic/rc.c	2003-05-07 00:28:42.0	rrt	1.4	21	8	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/rc.c	2003-04-24 17:36:51.0	rrt	1.3	16	9	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/Attic/rc.c	2003-04-24 17:11:59.0	rrt	1.2	11	10	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/Attic/rc.c	2001-01-19 23:02:43.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/rc.c	2001-01-19 23:08:12.0	ssigala	1.1.1.2	2	2	import of version 1.3.
/cvsroot/zile/zile/src/Attic/rc.c	2001-01-19 23:02:43.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/Attic/rc.c	2005-01-26 16:17:23.0	rrt	1.16.2.1	1	3	There are no code changes since 2.0beta9.Bump version to 2.0beta10.Remove irrelevant bits from configure.ac as on HEAD.Fix use of vasprintf.c and strrstr.c: don&apos;t compile them when they&apos;renot needed, but make sure to include both in the distribution.Fix use of AC_REPLACE_FUNCS.
/cvsroot/zile/zile/src/redisplay.c	2005-02-07 02:36:44.0	rrt	1.13	3	2	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/redisplay.c	2005-01-29 13:40:35.0	rrt	1.12	4	10	Fix unsigned vs signed comparison warning in and simplifyresync_display.
/cvsroot/zile/zile/src/redisplay.c	2005-01-10 00:56:05.0	rrt	1.11	66	67	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/redisplay.c	2004-10-13 17:47:56.0	rrt	1.10	43	1	Move the function resize_windows to redisplay.c, because it doesn&apos;tuse any term_* functions.
/cvsroot/zile/zile/src/redisplay.c	2004-10-11 02:47:19.0	rrt	1.9	1	9	Remove irrelevant comment from main.c.Remove #if 1 ... #else from redisplay.c.
/cvsroot/zile/zile/src/redisplay.c	2004-05-21 00:34:50.0	rrt	1.8	2	2	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/redisplay.c	2004-04-04 22:33:12.0	rrt	1.7	1	3	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/redisplay.c	2004-02-17 21:21:18.0	ssigala	1.6	20	28	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/redisplay.c	2004-02-08 05:39:26.0	dacap	1.5	15	16	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/redisplay.c	2003-10-25 01:32:09.0	ssigala	1.4	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/redisplay.c	2003-05-07 00:28:42.0	rrt	1.3	2	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/redisplay.c	2003-04-24 17:11:59.0	rrt	1.2	3	1	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/redisplay.c	2001-01-19 23:02:43.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/redisplay.c	2001-01-19 23:08:12.0	ssigala	1.1.1.2	3	3	import of version 1.3.
/cvsroot/zile/zile/src/redisplay.c	2001-01-19 23:02:43.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/regex.c	2005-01-26 19:24:24.0	rrt	1.9	1	6	Give re_search a proper prototype.
/cvsroot/zile/zile/src/regex.c	2005-01-23 19:32:47.0	rrt	1.8	20	8	Add regfree back, because we need it, and remove some more junk.
/cvsroot/zile/zile/src/regex.c	2005-01-23 18:16:35.0	rrt	1.7	5	21	Remove some more unnecessary code.
/cvsroot/zile/zile/src/regex.c	2005-01-23 18:03:21.0	rrt	1.6	2	827	Remove debugging code from regex.c (it&apos;s pretty well debugged, and Idon&apos;t intend to debug it further!) and remove POSIX functions fromregex.c and regex.h, and BSD prototypes from regex.h.The less mess I have to maintain, the better. Removing the POSIX codeshould also cut down the binary size on EPOC a bit further.
/cvsroot/zile/zile/src/regex.c	2005-01-12 13:47:10.0	rrt	1.5	2	86	Remove more (for us) dead code.
/cvsroot/zile/zile/src/regex.c	2005-01-12 01:48:31.0	rrt	1.4	0	127	Remove #ifdef emacs blocks from regex.c.Remove emacs local var settings from regex.h.
/cvsroot/zile/zile/src/regex.c	2004-11-15 01:47:12.0	rrt	1.3	330	330	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/regex.c	2004-02-14 23:19:03.0	ssigala	1.2	0	0	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/src/regex.c	2004-02-05 03:26:49.0	dacap	1.1	0	0	Added regex files.
/cvsroot/zile/zile/src/regex.h	2005-01-23 19:32:47.0	rrt	1.7	3	1	Add regfree back, because we need it, and remove some more junk.
/cvsroot/zile/zile/src/regex.h	2005-01-23 18:16:36.0	rrt	1.6	16	34	Remove some more unnecessary code.
/cvsroot/zile/zile/src/regex.h	2005-01-23 18:03:21.0	rrt	1.5	0	14	Remove debugging code from regex.c (it&apos;s pretty well debugged, and Idon&apos;t intend to debug it further!) and remove POSIX functions fromregex.c and regex.h, and BSD prototypes from regex.h.The less mess I have to maintain, the better. Removing the POSIX codeshould also cut down the binary size on EPOC a bit further.
/cvsroot/zile/zile/src/regex.h	2005-01-12 01:48:32.0	rrt	1.4	0	8	Remove #ifdef emacs blocks from regex.c.Remove emacs local var settings from regex.h.
/cvsroot/zile/zile/src/regex.h	2004-11-15 01:47:12.0	rrt	1.3	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/regex.h	2004-02-14 23:19:03.0	ssigala	1.2	0	0	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/src/regex.h	2004-02-05 03:33:15.0	dacap	1.1	0	0	Added regex files.
/cvsroot/zile/zile/src/registers.c	2005-02-07 02:36:44.0	rrt	1.18	7	4	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/registers.c	2005-02-05 02:49:14.0	rrt	1.17	3	3	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/registers.c	2005-01-27 02:33:17.0	rrt	1.16	2	2	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/registers.c	2005-01-27 00:45:00.0	rrt	1.15	2	2	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/registers.c	2005-01-25 13:28:29.0	rrt	1.14	2	2	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/registers.c	2005-01-10 00:56:05.0	rrt	1.13	90	90	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/registers.c	2004-10-13 18:04:06.0	rrt	1.12	3	1	Find all the times where the minibuffer is written to and then akeypress required, and insert term_refresh() to bring the screen up todate.
/cvsroot/zile/zile/src/registers.c	2004-05-21 00:34:50.0	rrt	1.11	3	3	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/registers.c	2004-03-10 12:00:51.0	rrt	1.10	2	2	Rename desactivate_mark to deactivate_mark (better English).
/cvsroot/zile/zile/src/registers.c	2004-03-09 23:43:00.0	rrt	1.9	7	6	Use astr instead of char array in write_registers_list.
/cvsroot/zile/zile/src/registers.c	2004-03-09 17:24:10.0	rrt	1.8	2	1	Fix an unused parameter warning.
/cvsroot/zile/zile/src/registers.c	2004-02-17 21:21:18.0	ssigala	1.7	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/registers.c	2004-02-17 02:09:52.0	dacap	1.6	4	2	Now insert-register doesn&apos;t move the point.
/cvsroot/zile/zile/src/registers.c	2004-02-08 05:39:26.0	dacap	1.5	7	9	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/registers.c	2003-10-25 01:32:09.0	ssigala	1.4	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/registers.c	2003-05-07 00:28:42.0	rrt	1.3	16	8	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/registers.c	2003-04-24 17:11:59.0	rrt	1.2	7	6	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/registers.c	2001-01-19 23:02:44.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/registers.c	2001-01-19 23:02:44.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/search.c	2005-02-07 02:36:44.0	rrt	1.44	13	7	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/search.c	2005-02-05 02:49:15.0	rrt	1.43	3	3	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/search.c	2005-01-30 18:46:16.0	rrt	1.42	2	13	Replace Macro struct with something simpler: just build a list ofkeys.Remove the static alternative_bindings in bind.c, which was set butnever read.Tweak minibuffer message for global-set-key.Remove unused FLAG_EXECUTING_MACRO flag from zile.h.
/cvsroot/zile/zile/src/search.c	2005-01-29 13:22:12.0	rrt	1.41	2	2	Fix unsigned vs signed comparison warning.
/cvsroot/zile/zile/src/search.c	2005-01-27 02:33:17.0	rrt	1.40	3	3	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/search.c	2005-01-27 02:27:24.0	rrt	1.39	5	5	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/search.c	2005-01-27 01:21:25.0	rrt	1.38	9	9	Fix -Wconversion warnings in search.c.
/cvsroot/zile/zile/src/search.c	2005-01-26 19:46:43.0	rrt	1.37	9	9	Fix search properly; previous fix was misguided (also fixed in 2.0).
/cvsroot/zile/zile/src/search.c	2005-01-26 19:26:48.0	rrt	1.36	48	193	Remove non-regex search functions.Rebind regex functions to normal non-regex key combinations.As a side effect, replace functions now use regexs (closes #1088402).
/cvsroot/zile/zile/src/search.c	2005-01-26 01:52:55.0	rrt	1.35	25	11	Implement case-fold-search for searching.
/cvsroot/zile/zile/src/search.c	2005-01-26 01:25:20.0	rrt	1.34	15	15	Use size_t instead of unsigned for string lengths (duh).Use case-fold-search and case-replace to check whether stringreplacement should follow case.
/cvsroot/zile/zile/src/search.c	2005-01-26 01:03:47.0	rrt	1.33	32	24	Make recasing on replace work as in Emacs (only case-replace andcase-fold-search are not yet implemented).Add length of replacement string as a parameter to line_replace_text.
/cvsroot/zile/zile/src/search.c	2005-01-25 22:37:36.0	rrt	1.32	4	14	Tidy a switch into an if.
/cvsroot/zile/zile/src/search.c	2005-01-16 14:07:44.0	rrt	1.31	2	2	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/search.c	2005-01-14 23:31:49.0	rrt	1.30	4	4	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/search.c	2005-01-10 15:09:47.0	rrt	1.29	3	3	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/search.c	2005-01-10 02:31:53.0	rrt	1.28	13	13	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/search.c	2005-01-10 00:56:05.0	rrt	1.27	519	519	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/search.c	2005-01-09 19:19:15.0	rrt	1.26	1	2	Fold editfns.h into extern.h. It might be nice to have a more modularstructure, but we don&apos;t, so might as well keep things simple.
/cvsroot/zile/zile/src/search.c	2004-12-20 12:15:39.0	rrt	1.25	1	6	branches:  1.25.2;Make minibuf_write update the screen (this won&apos;t slow things down muchand avoids having to remember to call it).This fixes an unreported bug where describe-key would not display&quot;Which key:&quot; correctly.
/cvsroot/zile/zile/src/search.c	2004-11-15 00:57:55.0	rrt	1.24	2	2	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/search.c	2004-11-15 00:17:43.0	rrt	1.23	3	2	Fix display during query-replace.
/cvsroot/zile/zile/src/search.c	2004-10-16 22:17:04.0	rrt	1.22	2	2	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/search.c	2004-10-14 23:06:47.0	rrt	1.21	1	5	Remove no-longer needed DEBUG code (was used by code in regex.c thatno longer exists).
/cvsroot/zile/zile/src/search.c	2004-10-13 23:12:25.0	rrt	1.20	4	3	Fix a stupid bug I introduced in forward isearch.
/cvsroot/zile/zile/src/search.c	2004-10-06 18:32:22.0	rrt	1.19	29	42	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/search.c	2004-09-26 00:43:18.0	rrt	1.18	4	3	Fix copyright notice.
/cvsroot/zile/zile/src/search.c	2004-09-20 03:07:35.0	dacap	1.17	3	2	Fixed a bug with the cursor in isearch (the new minibuf_write doesn&apos;trestore the cursor position).
/cvsroot/zile/zile/src/search.c	2004-05-21 00:34:50.0	rrt	1.16	7	7	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/search.c	2004-04-23 22:34:56.0	rrt	1.15	7	7	Rename the size and maxsize fields of the astr structure to len andmaxlen (makes more sense).Fix a comment typo in astr.h.
/cvsroot/zile/zile/src/search.c	2004-03-30 00:47:01.0	rrt	1.14	3	3	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/search.c	2004-03-13 17:31:20.0	rrt	1.13	3	2	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/src/search.c	2004-03-09 17:25:19.0	rrt	1.12	3	2	Fix an signed vs unsigned comparison warning.#include &quot;editfns.h&quot; for set_mark.
/cvsroot/zile/zile/src/search.c	2004-02-20 17:04:27.0	rrt	1.11	2	2	Whitespace correction.
/cvsroot/zile/zile/src/search.c	2004-02-17 21:21:18.0	ssigala	1.10	21	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/search.c	2004-02-16 02:07:00.0	dacap	1.9	3	3	Fixed `line_replace_text&apos; with `replace_case&apos; argument to copy orreplace characters case.
/cvsroot/zile/zile/src/search.c	2004-02-14 11:22:56.0	dacap	1.8	34	32	Removed color support from minibuf.And restored the `last_search&apos; variable.
/cvsroot/zile/zile/src/search.c	2004-02-08 05:39:26.0	dacap	1.7	95	82	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/search.c	2004-02-05 03:43:21.0	dacap	1.6	215	35	Added regexp search functions.
/cvsroot/zile/zile/src/search.c	2004-01-21 03:09:37.0	dacap	1.5	18	3	Added BFLAG_ISEARCH functionality, and now C-g in I-search loop stopsrecording macros.
/cvsroot/zile/zile/src/search.c	2003-10-25 01:32:09.0	ssigala	1.4	13	15	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/search.c	2003-05-07 00:28:42.0	rrt	1.3	19	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/search.c	2003-04-24 17:11:59.0	rrt	1.2	363	66	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/search.c	2001-01-19 23:02:45.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/search.c	2001-01-19 23:08:14.0	ssigala	1.1.1.2	3	2	import of version 1.3.
/cvsroot/zile/zile/src/search.c	2001-01-19 23:02:45.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/search.c	2005-01-26 19:45:09.0	rrt	1.25.2.2	10	6	Fix regex search properly; previous fix was misguided.
/cvsroot/zile/zile/src/search.c	2005-01-26 19:11:20.0	rrt	1.25.2.1	3	7	Fix bug in incremental search (merged from HEAD).
/cvsroot/zile/zile/src/strrstr.c	2005-01-10 10:19:20.0	rrt	1.4	3	2	Clarify empty for loops.
/cvsroot/zile/zile/src/strrstr.c	2005-01-10 00:56:06.0	rrt	1.3	10	10	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/strrstr.c	2004-12-20 19:23:22.0	rrt	1.2	3	1	Add an empty config.h so that the config.h (for the host platform)doesn&apos;t interfere with building mkdoc (for the build platform).Fix some little problems revealed by not having any HAVE_* macrosdefined.
/cvsroot/zile/zile/src/strrstr.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-02-27 23:50:33.0	rrt	1.34	1	3	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-02-06 02:49:13.0	rrt	1.33	3	3	Add where-is (closes feature request #1088394).Remove list-functions (not in Emacs, and no longer needed).Add case for space key to chordtostr.Change some int&apos;s to size_t&apos;s in key conversion routines.Fix a bug in write_bindings left over from conversion from alist tolist.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-26 19:26:48.0	rrt	1.32	5	9	Remove non-regex search functions.Rebind regex functions to normal non-regex key combinations.As a side effect, replace functions now use regexs (closes #1088402).
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-25 21:27:04.0	rrt	1.31	2	2	Remove key binding for shrink-window, as there is none by default, andin any case M-s should be for center-line (which doesn&apos;t currentlyexist).
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-25 13:28:29.0	rrt	1.30	3	2	Make calculate_region take two points; rename old calculate_region tocalculate_the_region.Make eval-expression insert the result at point when given a prefixarg.Add eval-last-sexp.Make forward_sexp and backward_sexp extern.Make leDumpEval give more minimal output, more in line with Emacs forinserting at point.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-24 23:50:51.0	rrt	1.29	2	1	Implement eval-expression.Stop lisp_read evaluating the expression it reads. Move thisfunctionality to lisp_dump.Fix getc_string for end of string (return EOF).Don&apos;t pause before showing first buffer if the splash screen isskipped (fix merged from 2.0 branch).
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-22 12:27:17.0	rrt	1.28	1	2	Store the variables in a Lisp list.Remove list-variables: doesn&apos;t exist in Emacs.Remove unset_variable: no longer needed.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-16 21:59:27.0	rrt	1.27	2	2	Change list-bindings binding to C-h b, as in Emacs. Thanks for JariAalto for reporting this bug.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-13 08:31:04.0	rrt	1.26	2	2	Put view-zile-FAQ in alphabetical order.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-12 11:55:34.0	rrt	1.25	3	3	Rename help-faq to view-zile-FAQ and help-tutorial tohelp-with-tutorial for consistency with Emacs.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-12 00:02:08.0	rrt	1.24	1	5	Remove sentence command stubs and references to the commands in thetutorial. Implementing them is still in the wish list, but when ithappens it will almost certainly not be in C, but Lisp.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-12-17 12:31:10.0	rrt	1.23	2	1	branches:  1.23.2;Add open-line. Closes Requests-972472.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-11-14 23:35:21.0	rrt	1.22	2	2	Bind query-replace to M-%, as in Emacs.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-11-14 22:34:56.0	rrt	1.21	1	3	Remove minihelp files and functions. They are a pain to maintain,they&apos;re not Emacs-like, and this editor is not designed for novices(who should use nano or something similar).
/cvsroot/zile/zile/src/tbl_funcs.h	2004-11-14 21:35:48.0	rrt	1.20	2	3	Remove note about refcard.tex, which no longer exists.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-10-16 22:36:50.0	rrt	1.19	1	2	Remove LATEST_VERSION and associated command and replace it with aquestion in the FAQ.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-10-16 22:24:09.0	rrt	1.18	1	2	Remove switch-to-correlated-buffer. This is not used often enough tobe in zile.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-05-07 00:16:53.0	rrt	1.17	2	1	Add dummy function for name-last-kbd-macro and tidy up TODO.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-04-05 19:30:35.0	rrt	1.16	1	2	Remove text-mode, which no longer does anything.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-04-05 18:06:55.0	rrt	1.15	3	3	Correct shortcuts for forward- and backward-paragraph to the same asEmacs.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-04-05 15:27:44.0	rrt	1.14	1	2	Tidy up implementation of global-set-key.Make a few messages more Emacs-like.Remove describe-key-briefly: describe-key is fine.Note: there&apos;s now a function keyvectostr to turn a list of key chordsinto a string.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-04-05 02:50:47.0	rrt	1.13	2	1	Add keybinding (global-set-key).
/cvsroot/zile/zile/src/tbl_funcs.h	2004-04-04 22:33:12.0	rrt	1.12	1	3	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-03-14 15:36:05.0	rrt	1.11	1	23	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-02-18 17:21:54.0	ssigala	1.10	8	8	minor tweaks
/cvsroot/zile/zile/src/tbl_funcs.h	2004-02-17 21:21:18.0	ssigala	1.9	1	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-02-08 05:39:26.0	dacap	1.8	7	2	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-02-05 03:40:35.0	dacap	1.7	5	1	Added regexp search functions.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-01-29 11:40:22.0	rrt	1.6	4	1	Add Lua support, enabled with --enable-lua. At the moment, the onlyway it can be used is via M-x lua, which allows a lua statement to beexecuted in a single, persistent Lua state. If the statement returns astring or number, it is pasted at point.
/cvsroot/zile/zile/src/tbl_funcs.h	2004-01-21 02:57:13.0	dacap	1.5	8	1	Added forward-line, forward-sexp, backward-sexp, mark-sexp, anddelete-region.
/cvsroot/zile/zile/src/tbl_funcs.h	2003-10-25 01:32:09.0	ssigala	1.4	2	4	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/tbl_funcs.h	2003-05-07 00:28:42.0	rrt	1.3	26	19	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/tbl_funcs.h	2003-04-24 17:11:59.0	rrt	1.2	60	12	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/tbl_funcs.h	2001-01-19 23:02:48.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/tbl_funcs.h	2001-01-19 23:08:14.0	ssigala	1.1.1.2	10	13	import of version 1.3.
/cvsroot/zile/zile/src/tbl_funcs.h	2001-01-19 23:02:48.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/tbl_funcs.h	2005-01-16 21:57:47.0	rrt	1.23.2.1	2	2	Rebind list-bindings to C-h b, as in Emacs. Thanks to Jari Aalto forreporting this bug.
/cvsroot/zile/zile/src/tbl_vars.h	2005-02-14 22:57:48.0	rrt	1.22	2	2	Change references to .zilerc to references to .zile.
/cvsroot/zile/zile/src/tbl_vars.h	2005-02-06 21:09:33.0	rrt	1.21	3	1	Add kill-whole-line (closes #1108706).
/cvsroot/zile/zile/src/tbl_vars.h	2005-01-26 19:34:17.0	rrt	1.20	1	4	Remove case-fold-search, which no longer has a point.
/cvsroot/zile/zile/src/tbl_vars.h	2005-01-25 21:45:41.0	rrt	1.19	10	3	Add case-fold-search and case-replace, and improve some of thedocumentation for other vars.
/cvsroot/zile/zile/src/tbl_vars.h	2005-01-13 01:16:16.0	rrt	1.18	3	3	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/tbl_vars.h	2004-11-14 22:57:54.0	rrt	1.17	1	5	Remove novice-mode, and always add string to *scratch* buffer, asEmacs does.
/cvsroot/zile/zile/src/tbl_vars.h	2004-11-14 22:52:27.0	rrt	1.16	3	3	Really extirpate mini help.
/cvsroot/zile/zile/src/tbl_vars.h	2004-10-11 03:21:00.0	rrt	1.15	1	21	Remove the rest of the docs and code pertaining to displayable-chars.
/cvsroot/zile/zile/src/tbl_vars.h	2004-10-08 15:30:45.0	rrt	1.14	1	6	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/tbl_vars.h	2004-10-05 20:51:12.0	rrt	1.13	1	36	Remove support for putting the time in the status bar. This featureinvolved a lot of (sometimes tricky) code for very little return interms of functionality.
/cvsroot/zile/zile/src/tbl_vars.h	2004-05-09 20:07:41.0	rrt	1.12	1	3	Remove documentation for show-eob-marker, which I&apos;ve removed.
/cvsroot/zile/zile/src/tbl_vars.h	2004-05-09 20:03:43.0	rrt	1.11	4	27	Remove the font-* variables, which are no longer used.Improve the help for novice-level.
/cvsroot/zile/zile/src/tbl_vars.h	2004-04-05 19:18:14.0	rrt	1.10	3	3	Remove mail mode mentions in documentation.Change the variable text-mode-auto-fill to auto-fill-mode.
/cvsroot/zile/zile/src/tbl_vars.h	2004-04-04 22:33:12.0	rrt	1.9	1	7	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/tbl_vars.h	2004-04-04 21:48:53.0	rrt	1.8	3	17	Remove &quot;revision&quot; mode of backup, which is just bloat. Again, if youwant this level of functionality, use a bigger editor.
/cvsroot/zile/zile/src/tbl_vars.h	2004-03-14 15:36:05.0	rrt	1.7	1	26	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/tbl_vars.h	2004-02-17 21:21:18.0	ssigala	1.6	1	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/tbl_vars.h	2004-02-08 05:39:26.0	dacap	1.5	13	4	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/tbl_vars.h	2003-10-25 01:32:09.0	ssigala	1.4	5	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/tbl_vars.h	2003-05-07 00:28:42.0	rrt	1.3	35	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/tbl_vars.h	2003-04-24 17:11:59.0	rrt	1.2	18	15	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/tbl_vars.h	2001-01-19 23:02:51.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/tbl_vars.h	2001-01-19 23:08:14.0	ssigala	1.1.1.2	36	77	import of version 1.3.
/cvsroot/zile/zile/src/tbl_vars.h	2001-01-19 23:02:51.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_allegro.c	2005-02-05 14:32:41.0	rrt	1.26	3	3	There is no zcalloc, use zmalloc instead.
/cvsroot/zile/zile/src/term_allegro.c	2005-02-05 03:01:40.0	rrt	1.25	3	3	Use zcalloc, not calloc.
/cvsroot/zile/zile/src/term_allegro.c	2005-02-05 02:49:15.0	rrt	1.24	11	9	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/term_allegro.c	2005-02-03 03:17:01.0	rrt	1.23	32	35	Fix compiler warnings in term_allegro.c, and make sure cursor iscorrectly positioned in all terminals; add term_redraw_cursor to thisend.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-30 03:43:25.0	dacap	1.22	14	13	Fixed some outdated compilation errors.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-27 02:33:18.0	rrt	1.21	10	10	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-27 00:58:52.0	rrt	1.20	6	6	Change term_xgetkey&apos;s second arg to unsigned to avoid -Wconversionwarnings.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-27 00:45:00.0	rrt	1.19	2	2	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-25 19:01:27.0	rrt	1.18	2	2	Fix key processing (#109179) by unbuffering stdin, and make the keybuffer a dynamic string rather than a fixed-size buffer.Rename term_unget to term_ungetkey for consistency.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-18 13:25:45.0	rrt	1.17	11	8	Move term_addnstr to term_redisplay, as it&apos;s generic.Add default (empty!) implementations of term_suspend and term_resumeto the other terminal types.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-18 13:06:15.0	rrt	1.16	1	13	Move term_printw to term_redisplay, because it&apos;s generic.Add term_suspend and term_resume (incomplete) to term_termcap.c.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-18 00:07:12.0	rrt	1.15	1	6	Remove unused font codes (ZA_* symbols).
/cvsroot/zile/zile/src/term_allegro.c	2005-01-16 14:04:58.0	rrt	1.14	4	5	Allow KBD_NOKEY to be passed to term_unget, and ignore it.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-14 23:31:49.0	rrt	1.13	4	4	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-12 00:13:07.0	rrt	1.12	3	3	Give an error if the screen mode cannot be set.
/cvsroot/zile/zile/src/term_allegro.c	2005-01-10 00:56:06.0	rrt	1.11	226	226	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/term_allegro.c	2004-11-15 23:19:45.0	rrt	1.10	1	7	branches:  1.10.2;Factor code to tidy up the display into main.c; it&apos;s independent ofthe terminal.Similarly, call free_rotation_buffers from main.
/cvsroot/zile/zile/src/term_allegro.c	2004-11-14 17:29:07.0	rrt	1.9	2	2	Rename term_unget_char to term_unget (it really does unget akeystroke, not a char).
/cvsroot/zile/zile/src/term_allegro.c	2004-10-25 01:56:33.0	rrt	1.8	3	5	Fix term_unget_char not to return anything, as per new prototype.
/cvsroot/zile/zile/src/term_allegro.c	2004-10-16 22:19:13.0	rrt	1.7	2	2	Rename term_ungetkey to the more accurate term_unget_char.Redo ungetkey support in term_termcap.c to cope with fast input.In extern.h reflect change to meaning of waitkey functions.
/cvsroot/zile/zile/src/term_allegro.c	2004-10-13 17:52:19.0	rrt	1.6	1	6	term_read_screen_size doesn&apos;t need to be in the API.
/cvsroot/zile/zile/src/term_allegro.c	2004-10-13 17:50:17.0	rrt	1.5	6	1	Make window resizing work for termcap.
/cvsroot/zile/zile/src/term_allegro.c	2004-10-11 02:57:48.0	rrt	1.4	1	6	Remove unused term_open function.
/cvsroot/zile/zile/src/term_allegro.c	2004-10-08 15:30:45.0	rrt	1.3	29	82	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/term_allegro.c	2004-09-20 16:22:07.0	rrt	1.2	10	3	Make term_attrset vararg, so it will cope with both allegro/cursesstyle of attributes (all set at once) and termcap style (cumulative).Reverse video is now working in the termcap terminal!
/cvsroot/zile/zile/src/term_allegro.c	2004-09-03 04:09:08.0	dacap	1.1	0	0	Added the Allegro interface.
/cvsroot/zile/zile/src/term_allegro.c	2005-02-03 03:20:50.0	rrt	1.10.2.1	8	7	Backport David Capello&apos;s term_allegro fixes from CVS HEAD.
/cvsroot/zile/zile/src/Attic/term_allegro.h	2004-10-08 15:30:45.0	rrt	1.3	1	1	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/Attic/term_allegro.h	2004-09-20 15:38:14.0	rrt	1.2	6	1	Define Font type in each term_*.h. Hence, need to #include zterm.h inzile.h. In term_termcap, Font is typedef&apos;d to char *.Add ZILE_NORMAL font. Since termcap uses the idea of turningattributes on and off rather than applying them to each character, weneed to move to this model.
/cvsroot/zile/zile/src/Attic/term_allegro.h	2004-09-03 04:09:08.0	dacap	1.1	0	0	Added the Allegro interface.
/cvsroot/zile/zile/src/term_epocemx.c	2005-02-05 02:49:15.0	rrt	1.13	4	4	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-31 00:24:34.0	rrt	1.12	5	5	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-27 02:33:18.0	rrt	1.11	4	4	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-27 00:58:52.0	rrt	1.10	2	2	Change term_xgetkey&apos;s second arg to unsigned to avoid -Wconversionwarnings.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-27 00:45:00.0	rrt	1.9	3	3	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-25 19:01:27.0	rrt	1.8	2	2	Fix key processing (#109179) by unbuffering stdin, and make the keybuffer a dynamic string rather than a fixed-size buffer.Rename term_unget to term_ungetkey for consistency.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-18 13:25:45.0	rrt	1.7	11	8	Move term_addnstr to term_redisplay, as it&apos;s generic.Add default (empty!) implementations of term_suspend and term_resumeto the other terminal types.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-18 13:06:15.0	rrt	1.6	1	14	Move term_printw to term_redisplay, because it&apos;s generic.Add term_suspend and term_resume (incomplete) to term_termcap.c.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-17 19:15:38.0	rrt	1.5	1	3	Remove ZILE_BOLD, which is no longer used.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-16 14:04:58.0	rrt	1.4	2	2	Allow KBD_NOKEY to be passed to term_unget, and ignore it.
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-10 00:56:06.0	rrt	1.3	235	235	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/term_epocemx.c	2005-01-05 23:52:00.0	rrt	1.2	4	4	Fix a bug in term_refresh which led to far too many cursor updates,making screen refresh very slow on slow links and slow machines.
/cvsroot/zile/zile/src/term_epocemx.c	2004-11-16 01:35:44.0	rrt	1.1	0	0	Add EPOC support (in term_epocemx.c).Add --enable-epocemx to configure.acRemove gperf test from configure.ac.Note: term_epocemx.c currently duplicates quite a lot ofterm_termcap.c, of which it is a heavily modified version. I willfactor out the comon bits shortly.Also, building under epocemx requires a configure line something like:./configure --build=&lt;current-platform&gt; --host=arm-epoc-pe --enable-epocemx
/cvsroot/zile/zile/src/term_minibuf.c	2005-02-05 02:49:15.0	rrt	1.19	2	2	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/term_minibuf.c	2005-01-29 13:21:00.0	rrt	1.18	4	4	Fix unsigned vs signed comparison warnings.
/cvsroot/zile/zile/src/term_minibuf.c	2005-01-27 02:33:18.0	rrt	1.17	4	4	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/term_minibuf.c	2005-01-27 00:49:58.0	rrt	1.16	7	6	Fix -Wconversion warnings in term_minibuf.c.
/cvsroot/zile/zile/src/term_minibuf.c	2005-01-12 01:16:53.0	rrt	1.15	4	4	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/term_minibuf.c	2005-01-10 00:56:06.0	rrt	1.14	283	283	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/term_minibuf.c	2004-12-20 14:17:25.0	rrt	1.13	2	2	Add a flag to completion_try, popup_when_complete that signals if wewant the *Completions* window even when the string supplied is alreadycomplete (i.e. when it is both a completion and a prefix of some othercompletion(s)). We want to pop up the completions list in this caseonly when completions were expressly requested by pressing TAB.In fact completion_try should really be factored into two functions,one of which deals with the screen and the other of which looks forcompletions.
/cvsroot/zile/zile/src/term_minibuf.c	2004-12-20 13:48:53.0	rrt	1.12	13	10	Get rid of action functions for completions; at the moment we onlyhave one (the default action), and frankly YAGNI.
/cvsroot/zile/zile/src/term_minibuf.c	2004-10-12 01:32:16.0	rrt	1.11	17	20	Fix another bug, this time when the minibuffer contents is longer thanthe width of the screen.
/cvsroot/zile/zile/src/term_minibuf.c	2004-10-12 00:10:18.0	rrt	1.10	5	3	Fix drawing of minibuffer. In draw_minibuffer_read, call term_refreshto update the screen after drawing the minibuffer. When callingterm_addnstr, make sure we don&apos;t try to add more characters than arein the string (i.e. it&apos;s not like strncat, but always adds the givennumber of characters).
/cvsroot/zile/zile/src/term_minibuf.c	2004-10-08 15:30:45.0	rrt	1.9	4	5	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/term_minibuf.c	2004-07-11 02:29:37.0	rrt	1.8	4	24	Get rid of term_minibuf_clear, and replace it withterm_minibuf_write(&quot;&quot;), which is functionally identical.Get rid of term_getyx, as it can&apos;t be implemented in termcap (I wasusing the ncurses getyx call, which returned nonsense results).Fix a bug in term_addnstr in term_termcap.c.Comment:It seems that not calling term_getyx to save the position of thecursor when writing to the minibuffer has caused no ill effects, but Icould be wrong; something to watch out for...The display now seems basically to work under termcap, as the changeschecked in here fix the minibuffer.
/cvsroot/zile/zile/src/term_minibuf.c	2004-07-11 01:52:45.0	rrt	1.7	6	7	Marginal tidy up.
/cvsroot/zile/zile/src/term_minibuf.c	2004-07-01 00:52:41.0	rrt	1.6	2	2	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/term_minibuf.c	2004-05-21 00:34:50.0	rrt	1.5	2	2	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/term_minibuf.c	2004-05-21 00:13:53.0	rrt	1.4	5	5	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/term_minibuf.c	2004-05-20 23:48:40.0	rrt	1.3	11	7	Remove term_mv* and term_addstr and replace them with equivalent code.The aim is to make the API that needs to be reimplemented for termiosupport rather smaller.
/cvsroot/zile/zile/src/term_minibuf.c	2004-05-10 18:49:50.0	rrt	1.2	2	2	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_minibuf.c	2004-05-09 20:31:07.0	rrt	1.1	0	0	Move term_ncurses/ncurses_minibuf.c to term_minibuf.c.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-10-11 03:08:42.0	rrt	1.12	1	1	Remove ncurses interface. We no longer have any dependencies onexternal libraries!
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-10-08 15:30:45.0	rrt	1.11	27	67	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-09-20 16:22:07.0	rrt	1.10	10	3	Make term_attrset vararg, so it will cope with both allegro/cursesstyle of attributes (all set at once) and termcap style (cumulative).Reverse video is now working in the termcap terminal!
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-09-20 15:42:59.0	rrt	1.9	4	2	Define ZILE_NORMAL.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-07-11 02:29:37.0	rrt	1.8	1	6	Get rid of term_minibuf_clear, and replace it withterm_minibuf_write(&quot;&quot;), which is functionally identical.Get rid of term_getyx, as it can&apos;t be implemented in termcap (I wasusing the ncurses getyx call, which returned nonsense results).Fix a bug in term_addnstr in term_termcap.c.Comment:It seems that not calling term_getyx to save the position of thecursor when writing to the minibuffer has caused no ill effects, but Icould be wrong; something to watch out for...The display now seems basically to work under termcap, as the changeschecked in here fix the minibuffer.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-07-01 00:52:41.0	rrt	1.7	9	9	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-05-29 18:38:43.0	rrt	1.6	2	2	A few small bits of twiddling to make the term interface tidier, andfix bug 962722 (selection highlighting broken).
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-05-23 23:47:20.0	rrt	1.5	1	5	Remove comment about exports that is no longer true.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-05-21 00:34:50.0	rrt	1.4	5	21	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-05-21 00:13:53.0	rrt	1.3	10	12	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-05-20 23:48:40.0	rrt	1.2	1	16	Remove term_mv* and term_addstr and replace them with equivalent code.The aim is to make the API that needs to be reimplemented for termiosupport rather smaller.
/cvsroot/zile/zile/src/Attic/term_ncurses.c	2004-05-10 18:49:50.0	rrt	1.1	0	0	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-10-08 15:30:45.0	rrt	1.8	1	1	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-09-20 15:38:14.0	rrt	1.7	6	2	Define Font type in each term_*.h. Hence, need to #include zterm.h inzile.h. In term_termcap, Font is typedef&apos;d to char *.Add ZILE_NORMAL font. Since termcap uses the idea of turningattributes on and off rather than applying them to each character, weneed to move to this model.
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-07-01 00:52:41.0	rrt	1.6	2	2	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-05-29 18:38:43.0	rrt	1.5	1	2	A few small bits of twiddling to make the term interface tidier, andfix bug 962722 (selection highlighting broken).
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-05-21 00:34:50.0	rrt	1.4	1	27	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-05-21 00:13:53.0	rrt	1.3	11	10	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-05-20 23:48:40.0	rrt	1.2	1	4	Remove term_mv* and term_addstr and replace them with equivalent code.The aim is to make the API that needs to be reimplemented for termiosupport rather smaller.
/cvsroot/zile/zile/src/Attic/term_ncurses.h	2004-05-10 18:49:50.0	rrt	1.1	0	0	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_redisplay.c	2005-02-05 14:49:06.0	rrt	1.39	9	9	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/term_redisplay.c	2005-02-03 03:17:01.0	rrt	1.38	11	5	Fix compiler warnings in term_allegro.c, and make sure cursor iscorrectly positioned in all terminals; add term_redraw_cursor to thisend.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-29 13:17:19.0	rrt	1.37	5	4	Fix unsigned vs signed comparison warnings.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-27 02:33:18.0	rrt	1.36	19	19	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-27 02:27:24.0	rrt	1.35	4	4	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-27 00:45:00.0	rrt	1.34	26	26	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-27 00:04:48.0	rrt	1.33	3	3	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-20 22:23:28.0	rrt	1.32	2	2	Fix splash screen on small terminals.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-18 22:55:22.0	rrt	1.31	1	4	Make minibuffer welcome message be displayed when splash screen is too(fix ported from 2.0 branch).Don&apos;t mention F1 in splash screen, because it doesn&apos;t work on allplatforms (not even termcap at the moment).
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-18 13:25:45.0	rrt	1.30	11	1	Move term_addnstr to term_redisplay, as it&apos;s generic.Add default (empty!) implementations of term_suspend and term_resumeto the other terminal types.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-18 13:06:15.0	rrt	1.29	17	1	Move term_printw to term_redisplay, because it&apos;s generic.Add term_suspend and term_resume (incomplete) to term_termcap.c.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-16 14:06:53.0	rrt	1.28	5	14	Get rid of formatting code in show_splash_screen; the string no longercontains formatting. After showing the string, call waitkey(20 * 10)to make sure the message stays up long enough to be read.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-13 08:31:32.0	rrt	1.27	3	5	Tidy a comment.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-12 13:53:44.0	rrt	1.26	12	1	Factor term_tidy out of main, to tidy up the terminal before leavingZile, and use it in suspend_zile (which already existed, duh) to clearup the screen before suspending. Also fix suspend_zile to redraw thescreen on restarting. A version of this fix will also be applied tothe 2.0 branch.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-12 01:27:18.0	rrt	1.25	1	3	Remove debugging left in by mistake.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-12 01:16:53.0	rrt	1.24	6	7	Simplify zap_buffer_content massively.Remove the unused argument from completion_scroll_{up,down}.Improve error messages in new_buffer.Fix // expansion in expand_path (thanks, Nicolas Duboc for reportingthe problem, which is also fixed in 2.0).Remove redundant memset from new_buffer.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-10 15:09:47.0	rrt	1.23	3	3	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-10 02:31:53.0	rrt	1.22	10	10	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-10 00:56:06.0	rrt	1.21	238	238	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/term_redisplay.c	2004-11-13 00:50:35.0	rrt	1.20	2	2	branches:  1.20.2;Tidy up some spacing.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-13 17:47:56.0	rrt	1.19	1	43	Move the function resize_windows to redisplay.c, because it doesn&apos;tuse any term_* functions.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-11 05:03:43.0	rrt	1.18	3	3	Use isprint, not isgraph to test whether to display characters. Oops.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-11 05:02:05.0	rrt	1.17	5	1	Fix the display of the splash screen.Other minor tidy-up.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-11 03:17:40.0	rrt	1.16	4	149	Get rid of ad-hoc printable character support, and use isgraph.Printable support should be done using locales.As a result, we no longer have any cached variables, so get rid ofcached variable support too.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-10 19:18:49.0	rrt	1.15	4	19	Remove ENABLE_FULL_HSCROLL. The fact that no-one has ever added codeto make this configurable shows that it&apos;s not wanted. What we arguablydo want is wrapping, but that&apos;s another matter.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-08 15:30:45.0	rrt	1.14	8	65	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-06 18:32:22.0	rrt	1.13	8	8	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-05 21:34:50.0	rrt	1.12	5	15	Remove support for buggy ncurses (NEEDS_REDUNDANT_REFRESH). Suchsupport shouldn&apos;t be in this file anyway.Update the code for #ifndef ENABLE_FULL_HSCROLL to use new term_functions (term_mvaddch no longer exists).
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-05 20:51:12.0	rrt	1.11	1	29	Remove support for putting the time in the status bar. This featureinvolved a lot of (sometimes tricky) code for very little return interms of functionality.
/cvsroot/zile/zile/src/term_redisplay.c	2004-10-05 20:13:29.0	rrt	1.10	5	1	In outch, call term_attrset to set font (I&apos;d forgotten to re-add thisafter changing the way fonts work).
/cvsroot/zile/zile/src/term_redisplay.c	2004-09-20 16:22:08.0	rrt	1.9	12	9	Make term_attrset vararg, so it will cope with both allegro/cursesstyle of attributes (all set at once) and termcap style (cumulative).Reverse video is now working in the termcap terminal!
/cvsroot/zile/zile/src/term_redisplay.c	2004-07-01 00:52:41.0	rrt	1.8	5	5	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-29 18:38:43.0	rrt	1.7	2	2	A few small bits of twiddling to make the term interface tidier, andfix bug 962722 (selection highlighting broken).
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-21 00:34:50.0	rrt	1.6	4	4	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-21 00:13:53.0	rrt	1.5	10	38	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-20 23:48:40.0	rrt	1.4	9	5	Remove term_mv* and term_addstr and replace them with equivalent code.The aim is to make the API that needs to be reimplemented for termiosupport rather smaller.
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-10 18:49:50.0	rrt	1.3	2	2	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-10 18:39:54.0	rrt	1.2	88	1	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/term_redisplay.c	2004-05-10 18:05:49.0	rrt	1.1	0	0	Move ncurses_redisplay.c up to term_ncurses.c; it no longer needsncurses.h. Only two more files to go!
/cvsroot/zile/zile/src/term_redisplay.c	2005-02-03 03:20:50.0	rrt	1.20.2.4	10	4	Backport David Capello&apos;s term_allegro fixes from CVS HEAD.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-20 22:22:06.0	rrt	1.20.2.3	2	2	Fix splash screen on small displays.Don&apos;t allow buffer overrun in term_addch.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-18 21:41:30.0	rrt	1.20.2.2	2	6	Fix minibuffer welcome message when splash screen shown.
/cvsroot/zile/zile/src/term_redisplay.c	2005-01-16 14:31:21.0	rrt	1.20.2.1	4	2	Fix splash screen to display for a reasonable length of time.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-27 18:47:54.0	rrt	1.68	6	5	Unset and reset special keys around suspend/resume. Fix ported fromZee.Thanks to Tomi Ollila for reporting the bug.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-21 17:25:22.0	rrt	1.67	5	7	Fix window resizing (fix ported from 2.0 branch).
/cvsroot/zile/zile/src/term_termcap.c	2005-02-14 22:51:21.0	rrt	1.66	12	13	Reallocate screen buffers on SIGWINCH to prevent buffer overrun. Fixcopied from rel-2-0.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-09 01:26:24.0	rrt	1.65	4	2	Fix a space leak in _xgetkey.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-05 02:49:15.0	rrt	1.64	5	13	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-04 03:10:08.0	rrt	1.63	18	47	Reimplement macro keystrokes so they work for interactive commandstoo.Simplify term_ungetkey: we no longer need to decompose keys back intocharacters, because unbuffered stdin means that keystrokes alwaysarrive whole.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-30 21:24:13.0	rrt	1.62	9	8	Fix translate_key for nbytes == 0 (bug introduced by changing nbytesto unsigned).
/cvsroot/zile/zile/src/term_termcap.c	2005-01-30 18:46:16.0	rrt	1.61	2	2	Replace Macro struct with something simpler: just build a list ofkeys.Remove the static alternative_bindings in bind.c, which was set butnever read.Tweak minibuffer message for global-set-key.Remove unused FLAG_EXECUTING_MACRO flag from zile.h.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-29 01:36:58.0	rrt	1.60	20	22	Fix signed vs unsigned comparison warnings.Remove pointless parentheses from octal constants in zile.h.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-27 02:33:18.0	rrt	1.59	19	19	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-27 00:58:52.0	rrt	1.58	4	4	Change term_xgetkey&apos;s second arg to unsigned to avoid -Wconversionwarnings.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-27 00:45:00.0	rrt	1.57	3	3	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-27 00:10:35.0	rrt	1.56	9	9	Fix -Wconversion warnings.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-25 21:19:40.0	rrt	1.55	5	4	Add support for function keys F1-F12. Closes #1088400.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-25 21:04:57.0	rrt	1.54	4	4	Reword a comment.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-25 19:01:28.0	rrt	1.53	43	40	Fix key processing (#109179) by unbuffering stdin, and make the keybuffer a dynamic string rather than a fixed-size buffer.Rename term_unget to term_ungetkey for consistency.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-20 22:24:13.0	rrt	1.52	24	20	Fix overrun of terminal buffers in term_addch, and change some ints tounsigned to make such overruns less likely.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-19 19:45:59.0	rrt	1.51	2	2	Fix unfiltered mode in xgetkey.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-18 23:49:07.0	rrt	1.50	2	2	Calling term_resume in term_init was a mistake, as it can&apos;t call thesigwinch handler! Oops...
/cvsroot/zile/zile/src/term_termcap.c	2005-01-18 23:45:49.0	rrt	1.49	29	27	Make term_suspend reset the terminal and term_resume set it up again.Call term_suspend and term_resume in term_init and term_close.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-18 13:25:45.0	rrt	1.48	12	21	Move term_addnstr to term_redisplay, as it&apos;s generic.Add default (empty!) implementations of term_suspend and term_resumeto the other terminal types.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-18 13:06:15.0	rrt	1.47	14	14	Move term_printw to term_redisplay, because it&apos;s generic.Add term_suspend and term_resume (incomplete) to term_termcap.c.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-17 19:15:28.0	rrt	1.46	4	14	Remove ZILE_BOLD, which is no longer used.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-16 14:04:58.0	rrt	1.45	2	2	Allow KBD_NOKEY to be passed to term_unget, and ignore it.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-11 23:33:28.0	rrt	1.44	2	2	In term_addch, and the character being added with 0xff to cope withtop-bit-set characters when char is signed.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-10 00:56:06.0	rrt	1.43	359	359	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/term_termcap.c	2005-01-05 23:52:01.0	rrt	1.42	5	5	branches:  1.42.2;Fix a bug in term_refresh which led to far too many cursor updates,making screen refresh very slow on slow links and slow machines.
/cvsroot/zile/zile/src/term_termcap.c	2004-12-20 14:27:08.0	rrt	1.41	2	2	A little bit of defensive programming: ensure that the signal numberpassed to the SIGWINCH handler is indeed SIGWINCH.
/cvsroot/zile/zile/src/term_termcap.c	2004-12-09 01:53:10.0	rrt	1.40	3	3	Fix the change made in version 1.31 (I did it completely wrong, but italmost worked; sigh).
/cvsroot/zile/zile/src/term_termcap.c	2004-12-09 00:47:27.0	rrt	1.39	17	15	Dynamically allocate the keys array in xgetkey, as its size isdynamically computed, which is non-ANSI.Simplify the rest of xgetkey.
/cvsroot/zile/zile/src/term_termcap.c	2004-11-15 23:19:45.0	rrt	1.38	1	7	Factor code to tidy up the display into main.c; it&apos;s independent ofthe terminal.Similarly, call free_rotation_buffers from main.
/cvsroot/zile/zile/src/term_termcap.c	2004-11-14 17:29:07.0	rrt	1.37	4	4	Rename term_unget_char to term_unget (it really does unget akeystroke, not a char).
/cvsroot/zile/zile/src/term_termcap.c	2004-11-14 16:22:39.0	rrt	1.36	3	5	Remove unnecessary static empty_string (just use &quot;&quot;).
/cvsroot/zile/zile/src/term_termcap.c	2004-11-14 00:39:36.0	rrt	1.35	16	6	Revert to 1.33 and add a comment explaining why the eol flag andassociated machinations are necessary.
/cvsroot/zile/zile/src/term_termcap.c	2004-11-13 01:09:30.0	rrt	1.34	7	11	Simplify term_refresh: when we get to the end of a line, break out ofthe inner loop. The eol flag is no longer needed, and skipped can beset to FALSE every time a character is printed.
/cvsroot/zile/zile/src/term_termcap.c	2004-11-13 00:56:35.0	rrt	1.33	4	2	In term_refresh:1. Set skipped = FALSE every time round the main loop, since we now   explicitly move to the start of each line.2. Don&apos;t bother initialising eol and skipped, since they&apos;re   initialised every time round the main loop.
/cvsroot/zile/zile/src/term_termcap.c	2004-11-13 00:51:28.0	rrt	1.32	2	1	In term_refresh, explicitly move to the start of each line, to curedisplay problems.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-25 10:58:24.0	rrt	1.31	3	3	Fix key detection when there are no characters in the input buffer.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-25 01:55:58.0	rrt	1.30	24	6	Fix term_unget_char so that it works with keystrokes includingmodifiers.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-25 00:37:07.0	rrt	1.29	53	67	Add support for keypad keys, and fix a bug in the case where one ormore keys are not supported by the termcap description.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-24 21:15:44.0	rrt	1.28	36	21	Don&apos;t count length of non-cursor-key termcap capability strings.Use &quot;ce&quot; capability to clear to EOL, so that X copy works properly.Closes #1052800.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-23 16:10:09.0	rrt	1.27	6	4	Fix crash when a terminal doesn&apos;t have one of the capabilities we want.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-16 22:37:31.0	rrt	1.26	1	9	Remove accidentally left-in debugging code.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-16 22:19:13.0	rrt	1.25	103	67	Rename term_ungetkey to the more accurate term_unget_char.Redo ungetkey support in term_termcap.c to cope with fast input.In extern.h reflect change to meaning of waitkey functions.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-15 01:32:11.0	rrt	1.24	11	3	Free memory used for termcap strings properly when finished, plusnorm_string.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-13 17:53:53.0	rrt	1.23	4	4	Since term_read_screen_size is not an API call any more, rename it toread_screen_size.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-13 17:52:19.0	rrt	1.22	2	2	term_read_screen_size doesn&apos;t need to be in the API.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-13 17:50:17.0	rrt	1.21	62	23	Make window resizing work for termcap.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-13 01:22:22.0	rrt	1.20	5	4	Unget characters in the right order in translate_key.Use read not fread after all. What was I thinking?Add a comment about use of unbuffered stdout.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-13 00:39:03.0	rrt	1.19	12	10	Remove some old code to do with no-longer used select.If we receive multiple characters and they don&apos;t match amulti-character key, return the first one and unget the rest.Use fread instead of read to get input (be ANSI as much as possible).
/cvsroot/zile/zile/src/term_termcap.c	2004-10-12 14:07:34.0	rrt	1.18	6	7	Make cursor keys work in xterm (use &quot;ks&quot; capability).
/cvsroot/zile/zile/src/term_termcap.c	2004-10-12 13:36:41.0	rrt	1.17	64	54	Make cursor keys work.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-11 14:57:43.0	rrt	1.16	53	20	Optimise term_refresh for acceptable performance.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-11 05:02:06.0	rrt	1.15	11	9	Fix the display of the splash screen.Other minor tidy-up.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-11 02:57:48.0	rrt	1.14	1	5	Remove unused term_open function.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-10 23:52:03.0	rrt	1.13	28	40	Fix keyboard input (stop trying to use select, use termio timeout).Use unbuffered stdout for immediate update.Fix screen update on exit in term_close.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-10 19:08:56.0	rrt	1.12	26	16	Modify term_refresh so that it only prints characters that havechanged since the last call.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-09 01:56:03.0	rrt	1.11	26	5	Add font interpretation back into the new buffered termcap scheme.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-08 15:30:45.0	rrt	1.10	82	47	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-06 18:32:22.0	rrt	1.9	40	21	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/term_termcap.c	2004-10-05 22:42:33.0	rrt	1.8	5	3	First go at using select for input. At the moment nothing is done withmulti-key sequences. fflush(stdout) before calling select to ensurethe display is up to date.
/cvsroot/zile/zile/src/term_termcap.c	2004-10-05 21:38:15.0	rrt	1.7	43	89	Various fixes and updates.In particular rewrite key handling code to prepare for handlingmulti-byte sequences using select. This doesn&apos;t seem to work yet, sothe actual calls to select are commented out for now.
/cvsroot/zile/zile/src/term_termcap.c	2004-09-20 16:22:08.0	rrt	1.6	8	3	Make term_attrset vararg, so it will cope with both allegro/cursesstyle of attributes (all set at once) and termcap style (cumulative).Reverse video is now working in the termcap terminal!
/cvsroot/zile/zile/src/term_termcap.c	2004-09-20 15:40:53.0	rrt	1.5	15	10	Get several more cap strings, including font attributed forZILE_NORMAL and ZILE_REVERSE, and the strings generated by the cursorkeys (these are not used yet).Remove Linux-specific code.Implement term_attrset, so the minibuffer is now printed in inverse video!
/cvsroot/zile/zile/src/term_termcap.c	2004-07-11 02:29:37.0	rrt	1.4	2	6	Get rid of term_minibuf_clear, and replace it withterm_minibuf_write(&quot;&quot;), which is functionally identical.Get rid of term_getyx, as it can&apos;t be implemented in termcap (I wasusing the ncurses getyx call, which returned nonsense results).Fix a bug in term_addnstr in term_termcap.c.Comment:It seems that not calling term_getyx to save the position of thecursor when writing to the minibuffer has caused no ill effects, but Icould be wrong; something to watch out for...The display now seems basically to work under termcap, as the changeschecked in here fix the minibuffer.
/cvsroot/zile/zile/src/term_termcap.c	2004-07-11 01:52:55.0	rrt	1.3	17	14	Tidy up some comments.
/cvsroot/zile/zile/src/term_termcap.c	2004-07-11 00:49:16.0	rrt	1.2	4	4	Cosmetic &amp; copyright tidy-up.
/cvsroot/zile/zile/src/term_termcap.c	2004-07-01 00:52:41.0	rrt	1.1	0	0	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/term_termcap.c	2005-03-08 00:01:04.0	rrt	1.42.2.8	7	1	Filter out \34 characters, which seem to be emitted by the Linuxconsole on some machines when a cursor key is pressed.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-27 18:43:50.0	rrt	1.42.2.7	28	11	Fix special keys (in particular cursor keys) around suspend andcontinue. Fix copied from Zee.
/cvsroot/zile/zile/src/term_termcap.c	2005-02-21 17:26:13.0	rrt	1.42.2.6	5	7	Fix window resizing (thanks to Nicolas Duboc for reporting the bug).
/cvsroot/zile/zile/src/term_termcap.c	2005-02-14 22:52:07.0	rrt	1.42.2.5	16	17	Fix buffer overrun on SIGWINCH by reallocating screen buffers. Thanksto the original reporter and for Nicolas Duboc for bringing it back tomy attention when I thought it cured.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-25 18:48:29.0	rrt	1.42.2.4	19	22	Set unbuffered stdin, and make key_buf a dynamic string so it can&apos;toverflow. Fixes merged from HEAD; fixes #1108630.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-20 22:22:06.0	rrt	1.42.2.3	5	1	Fix splash screen on small displays.Don&apos;t allow buffer overrun in term_addch.
/cvsroot/zile/zile/src/term_termcap.c	2005-01-20 00:58:11.0	rrt	1.42.2.2	2	2	Fix GETKEY_NONFILTERED mode in xgetkey (fix merged from cvs HEAD).
/cvsroot/zile/zile/src/term_termcap.c	2005-01-11 18:41:37.0	rrt	1.42.2.1	2	2	Fixes for non-C locales: call setlocale in main, and in term_addchtruncate the character added to 8 bits (copes with systems where charis signed).
/cvsroot/zile/zile/src/Attic/term_termcap.h	2004-10-08 15:30:45.0	rrt	1.4	1	1	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/Attic/term_termcap.h	2004-09-20 15:38:14.0	rrt	1.3	6	2	Define Font type in each term_*.h. Hence, need to #include zterm.h inzile.h. In term_termcap, Font is typedef&apos;d to char *.Add ZILE_NORMAL font. Since termcap uses the idea of turningattributes on and off rather than applying them to each character, weneed to move to this model.
/cvsroot/zile/zile/src/Attic/term_termcap.h	2004-07-11 00:49:16.0	rrt	1.2	4	2	Cosmetic &amp; copyright tidy-up.
/cvsroot/zile/zile/src/Attic/term_termcap.h	2004-07-01 00:52:41.0	rrt	1.1	0	0	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/test1.el	2005-01-22 00:40:58.0	rrt	1.2	0	1	Remove trailing blank line.
/cvsroot/zile/zile/src/test1.el	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/test1.output	2005-01-25 17:46:42.0	rrt	1.2	18	8	Update output (now less verbose).
/cvsroot/zile/zile/src/test1.output	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/test2.el	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/test2.output	2005-01-25 17:46:42.0	rrt	1.2	25	29	Update output (now less verbose).
/cvsroot/zile/zile/src/test2.output	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/test3.el	2005-01-25 17:46:25.0	rrt	1.3	4	4	Remove or update tests that use now-removed functions.
/cvsroot/zile/zile/src/test3.el	2005-01-23 15:14:56.0	rrt	1.2	0	37	Remove garbage_collect, which was just a stub, and the correspondingeval_cb_nothing.Tidy up eval.c, formatting it like the rest of the Zile code, andtidying up a lot of the code.Make leWipe not free leNIL, and add leReallyWipe, which does freeleNIL. Could use this for other constants, but really need a gc.Remove tests of functions that no longer exist from test3.el.
/cvsroot/zile/zile/src/test3.el	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/test3.output	2005-01-25 17:46:42.0	rrt	1.2	89	245	Update output (now less verbose).
/cvsroot/zile/zile/src/test3.output	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/tests	2005-01-25 17:45:33.0	rrt	1.3	23	1	Add -q to command line so that .zile doesn&apos;t affect the output.
/cvsroot/zile/zile/src/tests	2005-01-22 00:37:04.0	rrt	1.2	1	1	Make Lisp tests get counted properly by make check.
/cvsroot/zile/zile/src/tests	2005-01-19 02:24:27.0	rrt	1.1	0	0	Add Lisp tests. These do not seem to be counted in the test suitepass/fail count yet, but they are correctly run by make check.
/cvsroot/zile/zile/src/undo.c	2005-02-07 02:36:44.0	rrt	1.21	5	4	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/undo.c	2005-01-29 13:21:32.0	rrt	1.20	2	2	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/undo.c	2005-01-27 02:33:19.0	rrt	1.19	3	3	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/undo.c	2005-01-27 02:27:24.0	rrt	1.18	12	11	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/undo.c	2005-01-27 00:52:43.0	rrt	1.17	7	7	Fix -Wconversion warnings in undo.c.
/cvsroot/zile/zile/src/undo.c	2005-01-10 02:31:53.0	rrt	1.16	3	3	Use new Line struct, which is just a typedef for list_s.Rename the limitp member of Buffer to lines.
/cvsroot/zile/zile/src/undo.c	2005-01-10 00:56:06.0	rrt	1.15	130	130	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/undo.c	2004-12-27 02:10:07.0	rrt	1.14	11	8	Rewrite the undo code to behave more like Emacs: record all bufferstates that are unchanged, and reset them when the buffer is saved.
/cvsroot/zile/zile/src/undo.c	2004-10-06 18:32:22.0	rrt	1.13	3	3	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/undo.c	2004-04-23 23:18:54.0	rrt	1.12	128	128	Add a save_undop member to Terminal struct and use it to record thenext undo point each time the file is saved so that the &quot;modified&quot;flag is only cleared when the buffer matches its last saved state.
/cvsroot/zile/zile/src/undo.c	2004-04-04 22:33:12.0	rrt	1.11	1	3	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/undo.c	2004-03-14 15:36:05.0	rrt	1.10	1	3	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/undo.c	2004-02-17 21:21:18.0	ssigala	1.9	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/undo.c	2004-02-08 05:39:26.0	dacap	1.8	19	20	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/undo.c	2004-01-21 02:48:55.0	dacap	1.7	1	24	Moved `goto_point&apos; routine to glue.c (because `transpose_subr&apos; infuncs.c need it).
/cvsroot/zile/zile/src/undo.c	2004-01-21 02:14:14.0	dacap	1.6	2	3	Fixed `revert_action&apos; to handle nested undo-sequences.
/cvsroot/zile/zile/src/undo.c	2003-10-25 01:32:09.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/undo.c	2003-05-07 00:28:42.0	rrt	1.4	11	9	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/undo.c	2003-04-24 17:47:40.0	rrt	1.3	9	2	Fix [ 723165 ] zile 1.6.1 mishandles undo command in overwrite mode;patch by Nicolas Duboc (nduboc@sf.net)
/cvsroot/zile/zile/src/undo.c	2003-04-24 17:12:00.0	rrt	1.2	8	6	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/undo.c	2001-01-19 23:02:52.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/undo.c	2001-01-19 23:08:15.0	ssigala	1.1.1.2	60	81	import of version 1.3.
/cvsroot/zile/zile/src/undo.c	2001-01-19 23:02:52.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/variables.c	2005-02-07 02:36:44.0	rrt	1.30	4	3	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/variables.c	2005-01-28 03:38:32.0	rrt	1.29	4	8	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/variables.c	2005-01-27 00:04:48.0	rrt	1.28	39	32	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/variables.c	2005-01-23 15:09:41.0	rrt	1.27	1	6	Remove some pointless debugging code.
/cvsroot/zile/zile/src/variables.c	2005-01-22 13:32:04.0	rrt	1.26	1	6	Remove list-variables (FAQ and zilerc.texi).Replace .zilerc with .zile (just like .emacs).Update documentation for initialization file.Remove free_variables (just call variableFree(mainVarList)).In lisp_read, don&apos;t allocate and destroy the Lisp state; move thiscode to main instead.
/cvsroot/zile/zile/src/variables.c	2005-01-22 12:27:17.0	rrt	1.25	12	79	Store the variables in a Lisp list.Remove list-variables: doesn&apos;t exist in Emacs.Remove unset_variable: no longer needed.
/cvsroot/zile/zile/src/variables.c	2005-01-16 14:07:44.0	rrt	1.24	5	5	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/variables.c	2005-01-13 01:16:16.0	rrt	1.23	2	2	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/variables.c	2005-01-10 00:56:06.0	rrt	1.22	142	142	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/variables.c	2005-01-09 19:11:14.0	rrt	1.21	9	8	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/variables.c	2004-11-15 00:57:55.0	rrt	1.20	5	5	Sort out waitkey:1. Get rid of waitkey_discard. User input should not be discarded.2. Don&apos;t bother waiting for half a second during universal argument   input. This is pointless finessing (although Emacs does do it).3. Standardise on a two second pause when wait is required, and remove   the argument from waitkey. Before most of the pauses were 2 secs,   some were 3 and 1 was 1, for no obvious reason.4. Remove the 20 second waitkey for the splash screen. Let the user   take as long as they want to read it.
/cvsroot/zile/zile/src/variables.c	2004-10-16 22:17:04.0	rrt	1.19	5	5	Change waitkey functions to work in deciseconds. For a UI, msecs isunnecessarily fine.
/cvsroot/zile/zile/src/variables.c	2004-10-11 03:17:40.0	rrt	1.18	2	5	Get rid of ad-hoc printable character support, and use isgraph.Printable support should be done using locales.As a result, we no longer have any cached variables, so get rid ofcached variable support too.
/cvsroot/zile/zile/src/variables.c	2004-10-08 15:30:45.0	rrt	1.17	4	7	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/variables.c	2004-05-29 18:38:43.0	rrt	1.16	2	2	A few small bits of twiddling to make the term interface tidier, andfix bug 962722 (selection highlighting broken).
/cvsroot/zile/zile/src/variables.c	2004-05-21 00:13:53.0	rrt	1.15	2	2	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/variables.c	2004-03-30 00:47:01.0	rrt	1.14	2	2	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/variables.c	2004-03-13 21:32:25.0	rrt	1.13	6	15	Use htable_foreach for variable completion.
/cvsroot/zile/zile/src/variables.c	2004-03-13 21:06:59.0	rrt	1.12	12	14	Overhaul htable, removing unused functions, moving the docs intohtable.h, and removing htable.3.In particular add a general-purpose iterator, htable_foreach, andrewrite htable_list in terms of it; also in variables.c usehtable_foreach directly to free the variables while shutting down.
/cvsroot/zile/zile/src/variables.c	2004-03-13 17:31:20.0	rrt	1.11	3	3	Make astr_fgets allocate its result, and return an empty string ratherthan NULL when eof is reached.Get rid of astr_fmt and astr_vfmt.
/cvsroot/zile/zile/src/variables.c	2004-03-10 00:27:49.0	rrt	1.10	9	6	Remove char buffers.
/cvsroot/zile/zile/src/variables.c	2004-02-18 00:20:33.0	rrt	1.9	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/variables.c	2004-02-17 21:21:18.0	ssigala	1.8	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/variables.c	2004-02-14 11:18:54.0	dacap	1.7	5	5	Removed color support from minibuf.
/cvsroot/zile/zile/src/variables.c	2004-02-08 05:39:26.0	dacap	1.6	13	13	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/variables.c	2004-01-07 01:36:14.0	rrt	1.5	12	3	Fix some memory leaks:1. Unset a variable before setting it so as not to leak its previous   contents.2. In free_variables, free the contents of the list before freeing the   list itself.Fix a crash in set_variable, by having get_variable_format alwaysreturn a string, so that we don&apos;t try to do string comparisons withNULL.
/cvsroot/zile/zile/src/variables.c	2003-10-25 01:32:09.0	ssigala	1.4	14	6	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/variables.c	2003-05-07 00:28:42.0	rrt	1.3	3	4	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/variables.c	2003-04-24 17:12:00.0	rrt	1.2	44	67	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/variables.c	2001-01-19 23:02:55.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/variables.c	2001-01-19 23:08:15.0	ssigala	1.1.1.2	8	30	import of version 1.3.
/cvsroot/zile/zile/src/variables.c	2001-01-19 23:02:55.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/vars.c	2005-02-27 23:50:33.0	rrt	1.11	1	2	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/vars.c	2005-02-05 14:49:06.0	rrt	1.10	4	4	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/vars.c	2005-01-28 03:38:32.0	rrt	1.9	8	13	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/vars.c	2005-01-27 00:04:48.0	rrt	1.8	18	6	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/vars.c	2005-01-22 12:24:59.0	rrt	1.7	2	2	In variableDump, don&apos;t need to check that the name of the variable isnon-NULL.
/cvsroot/zile/zile/src/vars.c	2005-01-22 02:06:00.0	rrt	1.6	2	2	Make variableGetString return NIL rather than -1 if the variable isundefined. This should avoid some problems, causing errors soonerrather than later.
/cvsroot/zile/zile/src/vars.c	2005-01-22 01:13:27.0	rrt	1.5	3	3	Change variableGetString not to strdup its return value. Since it&apos;snot called anywhere (yet) this is fine.
/cvsroot/zile/zile/src/vars.c	2005-01-19 01:41:01.0	rrt	1.4	12	9	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/vars.c	2005-01-15 00:46:47.0	rrt	1.3	49	69	Make dumping functions return an astr.Tidy up the code to conform to formatting in the rest of Zile.
/cvsroot/zile/zile/src/vars.c	2005-01-13 08:45:52.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/vars.c	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/vars.h	2005-02-27 23:50:33.0	rrt	1.7	1	2	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/vars.h	2005-01-28 03:38:32.0	rrt	1.6	4	4	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/vars.h	2005-01-27 00:04:48.0	rrt	1.5	2	1	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/vars.h	2005-01-19 01:41:01.0	rrt	1.4	2	2	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/vars.h	2005-01-15 00:46:47.0	rrt	1.3	12	11	Make dumping functions return an astr.Tidy up the code to conform to formatting in the rest of Zile.
/cvsroot/zile/zile/src/vars.h	2005-01-13 08:45:52.0	rrt	1.2	24	0	Add copyright notices.
/cvsroot/zile/zile/src/vars.h	2005-01-12 02:47:45.0	rrt	1.1	0	0	Add a lisp interpreter, code taken from lithp 0.6(http://www.cis.rit.edu/~jerry/Software/lithp/).Since the original was written with noweb, I&apos;ve tangled the code,stripped out the #line directives, and reformatted it.I&apos;ve also done something a bit naughty: I&apos;ve fixed up most of the gccwarnings, and done a little tidying to make that work, hence the codeis not quite the same as lithp 0.6. I&apos;m checking it in now before Ireally start changing stuff.At the moment the code is simply compiled into Zile, but not calledanywhere.Justification: having a Lisp interpreter will simplify and unify a lotof things. First, it will handle the .zilerc file (and hence get ridof rc.c and a lot of variables.c). Secondly, it will simplify addingkey rebinding. Thirdly, it&apos;s entirely in line with Emacs emulation. Itwill similarly simplify the handling of macros, and allow Zile to beextended at last by the user. Fourthly, it will help implement keymaps, which are needed to remove horrible code duplication in theminibuffer code. Finally, some of the current C code will be rewrittenin Lisp, and it will hence improve stability (as Lisp code won&apos;tcrash, right?!).I will try very hard to reduce the binary size to at most the same asit was before I added the interpreter, which is only 2,000 lines ofcode. It adds about 50Kb to the unstrippped binary; I have alreadyremoved nearly 20Kb since the current 2.0 beta, so that leaves another30Kb to remove. I&apos;ll try to do the same in the source code, but that&apos;sless important (and less likely). Anyway, Zile should get no morecomplex than it is at present until some other major feature is added(the only one planned is Unicode support).I have yet to put in proper copyright notices in the files from lithpand proper acknowledgement for this major contribution in the docs.The lithp code will also doubtless be heavily modified (and reduced!).
/cvsroot/zile/zile/src/vasprintf.c	2005-02-06 00:47:07.0	rrt	1.9	4	4	A little more tidying.
/cvsroot/zile/zile/src/vasprintf.c	2005-02-06 00:44:37.0	rrt	1.8	2	13	Tidy some comments.
/cvsroot/zile/zile/src/vasprintf.c	2005-02-05 22:01:00.0	rrt	1.7	99	131	Reformat the rest of the file to be consistent with the rest of Zile.
/cvsroot/zile/zile/src/vasprintf.c	2005-02-05 14:49:06.0	rrt	1.6	7	20	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/vasprintf.c	2005-01-27 02:33:19.0	rrt	1.5	5	5	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/vasprintf.c	2005-01-27 00:45:00.0	rrt	1.4	5	5	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/vasprintf.c	2005-01-22 00:10:38.0	rrt	1.3	327	336	Reformat code to match the rest of the zile code.Use va_copy (patch from Nicolas Duboc). (Patch also made to 2.0branch)Fix a typo concerning the &apos;c&apos; format (which is not currently used byzile).
/cvsroot/zile/zile/src/vasprintf.c	2005-01-03 12:07:49.0	rrt	1.2	1	1	branches:  1.2.2;Correct spelling in a comment.
/cvsroot/zile/zile/src/vasprintf.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/vasprintf.c	2005-01-22 18:48:05.0	rrt	1.2.2.2	1	1	Fix a typo that stops the code compiling.
/cvsroot/zile/zile/src/vasprintf.c	2005-01-22 00:12:07.0	rrt	1.2.2.1	2	1	Apply patch from Nicolas Duboc to use va_copy.
/cvsroot/zile/zile/src/vector.c	2005-02-04 03:08:06.0	rrt	1.3	6	11	Reformat function prototypes for consistency.
/cvsroot/zile/zile/src/vector.c	2005-01-10 00:56:06.0	rrt	1.2	22	22	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/vector.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/vector.h	2005-01-10 00:56:06.0	rrt	1.2	5	5	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/vector.h	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Attic/version.h	2004-01-29 08:23:10.0	rrt	1.5	0	0	Use VERSION from automake, not version.h.
/cvsroot/zile/zile/src/Attic/version.h	2003-10-25 01:32:09.0	ssigala	1.4	1	1	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/Attic/version.h	2003-05-07 00:28:42.0	rrt	1.3	1	1	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/version.h	2003-04-24 17:12:00.0	rrt	1.2	1	1	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/Attic/version.h	2001-01-19 23:02:55.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/version.h	2001-01-19 23:08:15.0	ssigala	1.1.1.2	1	1	import of version 1.3.
/cvsroot/zile/zile/src/Attic/version.h	2001-01-19 23:02:55.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/window.c	2005-02-07 02:36:44.0	rrt	1.17	13	7	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/window.c	2005-01-17 19:09:23.0	rrt	1.16	2	4	Fix auto-fill-mode so it applies to all buffers, not just the scratchbuffer. Fix already applied to 2.0.Use ^ instead of &amp; and | to toggle flags.Fix formatting of a docstring.Move cancel in funcs.c to directly before keyboard_quit (morelogical).
/cvsroot/zile/zile/src/window.c	2005-01-14 23:31:49.0	rrt	1.15	2	2	Reformat some ?: operators for consistency.
/cvsroot/zile/zile/src/window.c	2005-01-13 08:32:18.0	rrt	1.14	8	4	Add some assertions to window_pt.
/cvsroot/zile/zile/src/window.c	2005-01-13 01:16:16.0	rrt	1.13	4	4	Rename new_* functions to *_new for consistency.Remove window_new from extern.h and make it static as it isn&apos;t usedoutside window.c.Put auto-fill-mode in alphabetical order in tbl_vars.h.Other minor tidy-up, especially of comments.
/cvsroot/zile/zile/src/window.c	2005-01-10 00:56:06.0	rrt	1.12	204	204	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/window.c	2004-12-17 02:21:09.0	rrt	1.11	6	3	branches:  1.11.2;Replace a slightly odd use of ? : with clearer if...else. Themotivation is to work around a bug in tcc 0.9.22, but the resultingcode is a little clearer too! Also correct a typo in the accompanyingcomment.
/cvsroot/zile/zile/src/window.c	2004-10-11 03:34:46.0	rrt	1.10	5	5	Remove select_terminal. We&apos;ve never had more than one interfacecompiled in.
/cvsroot/zile/zile/src/window.c	2004-04-05 19:18:14.0	rrt	1.9	2	2	Remove mail mode mentions in documentation.Change the variable text-mode-auto-fill to auto-fill-mode.
/cvsroot/zile/zile/src/window.c	2004-03-13 20:59:51.0	rrt	1.8	1	22	For the remaining #if 0 code (except for one bit of dacap&apos;s which isunfinished) either remove it or change #if 0 to #if DEBUG.
/cvsroot/zile/zile/src/window.c	2004-02-17 21:21:18.0	ssigala	1.7	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/window.c	2004-02-08 05:39:26.0	dacap	1.6	68	64	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/window.c	2003-10-25 01:32:09.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/window.c	2003-05-19 23:50:25.0	rrt	1.4	2	2	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/window.c	2003-05-07 00:28:42.0	rrt	1.3	29	2	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/window.c	2003-04-24 17:12:00.0	rrt	1.2	9	6	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/window.c	2001-01-19 23:02:57.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/window.c	2001-01-19 23:08:15.0	ssigala	1.1.1.2	4	5	import of version 1.3.
/cvsroot/zile/zile/src/window.c	2001-01-19 23:02:57.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/window.c	2005-01-17 19:02:18.0	rrt	1.11.2.1	2	4	Fix auto-fill-mode so it applies to all new buffers, not just thefirst.
/cvsroot/zile/zile/src/Attic/zile.1	2003-05-06 13:56:14.0	rrt	1.3	1	1	zile.1 is autogenerated, so don&apos;t have it in CVS.
/cvsroot/zile/zile/src/Attic/zile.1	2003-04-24 17:47:40.0	rrt	1.2	63	14	Fix [ 723165 ] zile 1.6.1 mishandles undo command in overwrite mode;patch by Nicolas Duboc (nduboc@sf.net)
/cvsroot/zile/zile/src/Attic/zile.1	2001-01-19 23:08:17.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/zile.1	2001-01-19 23:08:17.0	ssigala	1.1.1.1	0	0	import of version 1.3.
/cvsroot/zile/zile/src/Attic/zile.1.in	2005-01-12 01:43:05.0	rrt	1.12	1	1	Move the man page into the doc directory.
/cvsroot/zile/zile/src/Attic/zile.1.in	2005-01-12 01:38:06.0	rrt	1.11	2	168	Remove keystrokes from man page. Here is not the place for them, andit&apos;s yet another duplicate source of information to go wrong.
/cvsroot/zile/zile/src/Attic/zile.1.in	2004-11-14 22:52:27.0	rrt	1.10	1	5	Really extirpate mini help.
/cvsroot/zile/zile/src/Attic/zile.1.in	2004-11-14 22:39:48.0	rrt	1.9	1	6	Remove last vestiges of minihelp.
/cvsroot/zile/zile/src/Attic/zile.1.in	2004-10-16 22:36:50.0	rrt	1.8	1	5	Remove LATEST_VERSION and associated command and replace it with aquestion in the FAQ.
/cvsroot/zile/zile/src/Attic/zile.1.in	2004-03-14 15:36:05.0	rrt	1.7	2	2	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/Attic/zile.1.in	2004-02-17 21:21:18.0	ssigala	1.6	5	1	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/Attic/zile.1.in	2004-01-23 02:49:54.0	dacap	1.5	8	8	Modified the variable name to get the data directory (ETCDIR -&gt; pkgdatadir).
/cvsroot/zile/zile/src/Attic/zile.1.in	2003-10-25 01:32:09.0	ssigala	1.4	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/Attic/zile.1.in	2003-05-07 00:28:42.0	rrt	1.3	67	234	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/Attic/zile.1.in	2003-04-24 17:12:00.0	rrt	1.2	40	20	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/Attic/zile.1.in	2001-01-19 23:03:04.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/Attic/zile.1.in	2001-01-19 23:03:04.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/zile.h	2005-02-27 23:50:33.0	rrt	1.66	14	17	Rip out most of the Lisp interpreter, and use it only for theinitialisation file. Now we are much closer to having a releasableZile 2.2.
/cvsroot/zile/zile/src/zile.h	2005-02-15 01:46:28.0	rrt	1.65	4	2	Update versions and copyright year.In zile.h, add an leWipe to tidy up the argument of each DEFUN. Thisdoesn&apos;t actually work yet, because each DEFUN has already returnedbefore this call is reached. Need to change DEFUNs to set a returnvalue (and never return themselves) to fix this...
/cvsroot/zile/zile/src/zile.h	2005-02-08 00:18:24.0	rrt	1.64	5	3	Add new DEFUN macro for general arguments to Zile commands.Fix a bug in setting of uniused.Make global-set-key work from Lisp.
/cvsroot/zile/zile/src/zile.h	2005-02-07 02:36:45.0	rrt	1.63	17	14	Redefine DEFUN, FUNCALL and FUNCALL_ARG so that Zile commands are nowof type int (*f)(int argc, le *branch), i.e. almost of type eval_cb.Rename DEFUN to DEFUN_INT.Now arbitrary arguments can be passed by Lisp to Zile commands (intheory). This will require a new DEFUN macro.
/cvsroot/zile/zile/src/zile.h	2005-02-06 21:21:08.0	rrt	1.62	5	5	Add an argument indicating the presence of the universal arg to theprototype for Zile commands. Since many commands assume uniarg == 0means no uniarg, don&apos;t violate this assumption yet.Move execute_command next to execute_extended_command.
/cvsroot/zile/zile/src/zile.h	2005-02-05 02:49:15.0	rrt	1.61	2	2	Make interactive commands work in macro; fixes #1088414 (again...).Rename term_getkey --&gt; getkey, and add xgetkey, defined in terms ofit.Move macro handling code from term_xgetkey in term_termcap.c toxgetkey (which is in glue.c).Rename GETKEY_NONFILTERED to GETKEY_UNFILTERED.
/cvsroot/zile/zile/src/zile.h	2005-01-31 00:24:34.0	rrt	1.60	14	7	Implement name-last-kbd-macro.Reorder extern.h to get more files in alphabetical order.Add get_macro and call_macro.
/cvsroot/zile/zile/src/zile.h	2005-01-30 18:46:20.0	rrt	1.59	2	4	Replace Macro struct with something simpler: just build a list ofkeys.Remove the static alternative_bindings in bind.c, which was set butnever read.Tweak minibuffer message for global-set-key.Remove unused FLAG_EXECUTING_MACRO flag from zile.h.
/cvsroot/zile/zile/src/zile.h	2005-01-29 13:44:48.0	rrt	1.58	2	2	Fix signed vs unsigned comparison warnings.
/cvsroot/zile/zile/src/zile.h	2005-01-29 01:36:57.0	rrt	1.57	42	40	Fix signed vs unsigned comparison warnings.Remove pointless parentheses from octal constants in zile.h.
/cvsroot/zile/zile/src/zile.h	2005-01-28 03:38:32.0	rrt	1.56	2	2	Fix unsigned vs signed comparison warnings in basic.c.Make variableSet* update the variable list rather than returning thenew list. This avoids forgetting to assign the result, which I&apos;ve donea couple of times already.In set-variable, don&apos;t pre-insert the old value of the variable intothe minibuffer. Emacs doesn&apos;t, and it&apos;s irritating.
/cvsroot/zile/zile/src/zile.h	2005-01-27 17:18:59.0	rrt	1.55	3	3	Fix some formatting.
/cvsroot/zile/zile/src/zile.h	2005-01-27 02:33:19.0	rrt	1.54	12	12	For simplicity, change unsigned and unsigned long to size_t.
/cvsroot/zile/zile/src/zile.h	2005-01-27 02:27:24.0	rrt	1.53	4	4	Fix -Wconversion warnings.Make astr_truncate take a pos rather than a size.Fix setting of fill-column.
/cvsroot/zile/zile/src/zile.h	2005-01-27 00:49:58.0	rrt	1.52	2	2	Fix -Wconversion warnings in term_minibuf.c.
/cvsroot/zile/zile/src/zile.h	2005-01-27 00:45:01.0	rrt	1.51	7	7	Fix -Wconversion warnings in term_redisplay.c, and fix other placesthat this affects.Change &quot;unsigned int&quot; to &quot;unsigned&quot;.
/cvsroot/zile/zile/src/zile.h	2005-01-27 00:04:48.0	rrt	1.50	4	3	Add a buffer-local variable list to the Buffer struct, and move thetwo buffer-local variables (fill-column and tab-width) into it. Removetab_width and fill_column.Add tab_width to return a &quot;safe&quot; tab width, i.e. at least 1.Add get_variable_bp to get a variable for a particular buffer,get_variable_number to get a variable&apos;s value as a number, andget_variable_number_bp.Add variableSetNumber.Reduce the number of calls to read the value of tab-width where thisis easy.Make describe-variable get the value for the current buffer for abuffer-local variable.Improve doc strings for newline-and-indent and indent-command.
/cvsroot/zile/zile/src/zile.h	2005-01-23 19:39:03.0	rrt	1.49	2	2	Remove test for limits.h, it&apos;s a standard ISO/ANSI header file.Some code and comment reformatting, including a couple of docstringimprovements.
/cvsroot/zile/zile/src/zile.h	2005-01-22 00:25:36.0	rrt	1.48	2	4	Simplify marker adjusting code in line.c to just adjust_markers.Remove Marker.type (don&apos;t need it any more).
/cvsroot/zile/zile/src/zile.h	2005-01-19 01:41:01.0	rrt	1.47	2	1	Rename lithp.c to lisp.c.Rename lithp to lisp_read_file, and add lisp_read_string and genericlisp_read.Implement --batch, --eval and --load.When using --load or --eval in non-batch mode, insert the results intothe scratch buffer instead of the default scratch message.Fix some space leaks in lisp_read and in the Lisp interpreter itself.Reformat some more of the Lisp code (mostly excess spaces).
/cvsroot/zile/zile/src/zile.h	2005-01-17 19:15:34.0	rrt	1.46	1	2	Remove ZILE_BOLD, which is no longer used.
/cvsroot/zile/zile/src/zile.h	2005-01-16 14:07:44.0	rrt	1.45	4	1	Add a delay argument to waitkey, and have a default, WAITKEY_DEFAULT,current 2s.
/cvsroot/zile/zile/src/zile.h	2005-01-11 23:34:09.0	rrt	1.44	3	3	Bump copyright year and tidy a couple of comments.
/cvsroot/zile/zile/src/zile.h	2005-01-10 16:01:07.0	rrt	1.43	6	3	Get rid of new_line and free_line (these don&apos;t really work sensiblywith lists, as it Depends What You Want To Do.
/cvsroot/zile/zile/src/zile.h	2005-01-10 15:09:48.0	rrt	1.42	2	2	Use list API instead of -&gt;next and -&gt;prev. Sometimes the API calls areused as lvalues, which is evil, but it&apos;s better than it was.
/cvsroot/zile/zile/src/zile.h	2005-01-10 02:30:31.0	rrt	1.41	3	8	Change Line to a list_s, so that the list API can be used on Lineobjects.
/cvsroot/zile/zile/src/zile.h	2005-01-10 00:56:06.0	rrt	1.40	121	121	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/zile.h	2005-01-09 19:23:12.0	rrt	1.39	11	1	Move definition of PATH_MAX into zile.h. Now we&apos;re sure that PATH_MAXwill always be defined, there&apos;s no need to check in main.c.
/cvsroot/zile/zile/src/zile.h	2005-01-09 19:11:14.0	rrt	1.38	6	6	Replace the list implementation. The new implementation is mine, andalthough its publically released form (rrtlib) is unstable, thisparticular library is small and has been used several times indifferent projects and can be considered mature.The new implmentation is better because:1. It is smaller and simpler.2. The new lists are stateless (do not store a position during list   traversal).3. The new list type can replace Line (they&apos;re basically the same   type).3. The new lists are manipulated entirely via the API, so that in   particular the next and prev links won&apos;t be corrupted by sloppy   programming, and check_list in main is made redundant (once the   list type has been used to replace Line).Remove spurious vsprintf from minibuf_format (which just repeated thework of the preceding vasprintf).Factor most of minibuf_write and minibuf_error into minibuf_vwrite;this also fixes the bug that minibuf_error now refreshes the terminal.Remove redundant term_refresh calls after minibuf_write andminibuf_error, which already call it.
/cvsroot/zile/zile/src/zile.h	2004-12-27 02:10:07.0	rrt	1.37	6	4	Rewrite the undo code to behave more like Emacs: record all bufferstates that are unchanged, and reset them when the buffer is saved.
/cvsroot/zile/zile/src/zile.h	2004-12-20 13:48:54.0	rrt	1.36	1	7	Get rid of action functions for completions; at the moment we onlyhave one (the default action), and frankly YAGNI.
/cvsroot/zile/zile/src/zile.h	2004-12-17 12:53:53.0	rrt	1.35	4	1	Add auto line-end detection. Copes with CR, LF, CRLF and LFCR.
/cvsroot/zile/zile/src/zile.h	2004-12-09 01:51:13.0	rrt	1.34	2	2	Remove the comma at the end of the completion enum list, to avoid a-pedantic warning.
/cvsroot/zile/zile/src/zile.h	2004-10-15 01:29:38.0	rrt	1.33	8	8	Tidy up some comments.
/cvsroot/zile/zile/src/zile.h	2004-10-08 15:30:45.0	rrt	1.32	18	5	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/zile.h	2004-10-06 19:26:57.0	rrt	1.31	2	2	Remove exaggeration.
/cvsroot/zile/zile/src/zile.h	2004-10-06 18:32:22.0	rrt	1.30	3	15	Change Line structure so that the text member is an astr. This meansthat the malloc system is worked a bit harder, but that line pointersdon&apos;t need to be twiddled when the length of a line changes, and thatthe code is simplified (we make far more use of standard astrroutines).As well as general code simplification, this should make instantdisplay updating easier to program.These changes are potentially capable of introducing bugs, but initialtests with simple editing have run cleanly in valgrind.Other misc cleanup, and further experimentation in term_termcap.c(which is still far from finished).
/cvsroot/zile/zile/src/zile.h	2004-09-25 04:06:01.0	dacap	1.29	1	18	Removed the anchors stuff.
/cvsroot/zile/zile/src/zile.h	2004-09-20 15:38:14.0	rrt	1.28	3	4	Define Font type in each term_*.h. Hence, need to #include zterm.h inzile.h. In term_termcap, Font is typedef&apos;d to char *.Add ZILE_NORMAL font. Since termcap uses the idea of turningattributes on and off rather than applying them to each character, weneed to move to this model.
/cvsroot/zile/zile/src/zile.h	2004-05-21 00:34:50.0	rrt	1.27	4	17	Get rid of the function pointers from the Terminal type; we have nodesire to make a binary of zile that can use more than one sort ofterminal. (This doesn&apos;t stop us choosing at compile-time, of course!)
/cvsroot/zile/zile/src/zile.h	2004-05-21 00:13:53.0	rrt	1.26	1	3	Expunge ncurses_* functions from files other than term_ncurses.c.Mostly this was done by simply renaming them after ensuring that theycalled no ncurses functions directly. Now all ncurses code definitelylives in term_ncurses.c (unless I have made a mistake).
/cvsroot/zile/zile/src/zile.h	2004-05-10 18:39:54.0	rrt	1.25	2	2	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/zile.h	2004-05-09 21:32:38.0	rrt	1.24	2	3	Remove unused GETKEY_NONBLOCKING.
/cvsroot/zile/zile/src/zile.h	2004-05-09 20:01:57.0	rrt	1.23	2	4	Remove EOB marker. It&apos;s a frivolous feature.
/cvsroot/zile/zile/src/zile.h	2004-04-23 23:18:55.0	rrt	1.22	228	227	Add a save_undop member to Terminal struct and use it to record thenext undo point each time the file is saved so that the &quot;modified&quot;flag is only cleared when the buffer matches its last saved state.
/cvsroot/zile/zile/src/zile.h	2004-04-05 02:50:26.0	rrt	1.21	1	7	Remove major mode. There aren&apos;t any left.
/cvsroot/zile/zile/src/zile.h	2004-04-04 23:01:50.0	rrt	1.20	5	7	Get rid of BFLAG_FONTLOCK.In funcs.c, rename make_buffer_mode to make_buffer_modeline forclarity. Don&apos;t bother putting &quot;Text&quot; in the modeline, as we don&apos;t havemajor modes any more.
/cvsroot/zile/zile/src/zile.h	2004-03-14 15:36:05.0	rrt	1.19	1	7	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/zile.h	2004-03-08 16:34:11.0	rrt	1.18	2	1	Use a vector for holding key code sequences instead of an array.
/cvsroot/zile/zile/src/zile.h	2004-02-18 00:20:32.0	rrt	1.17	5	3	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/zile.h	2004-02-17 21:21:18.0	ssigala	1.16	59	62	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/zile.h	2004-02-08 05:39:26.0	dacap	1.15	176	189	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/zile.h	2004-01-28 11:50:21.0	rrt	1.14	4	8	Remove commented out include of curses headers; they shouldn&apos;t bethere. Add a comment to the screen member of struct terminal toexplain what it is.
/cvsroot/zile/zile/src/zile.h	2004-01-21 03:08:18.0	dacap	1.13	9	7	Added BFLAG_ISEARCH flag.  Fixed the ncurses dependence.
/cvsroot/zile/zile/src/zile.h	2004-01-07 01:45:20.0	rrt	1.12	7	1	Get rid of some ncurses memory leaks. This is really ncurses&apos;s fault,not ours, but since most of the leaks can easily be removed by callingnewterm and delscreen, it seemed reasonable to do so.I&apos;ve discussed the rest of the leaks (detected by valgrind) with themaintainer, and he doesn&apos;t want to or can&apos;t fix the remainder: oneleak would &quot;require changing the ABI&quot;, and another is asetbuffer/setvbuf buffer that &quot;tends to cause core dumps&quot; if it&apos;sfreed.I&apos;m inclined to add a suppressions file to valgrind for these thatignores them.
/cvsroot/zile/zile/src/zile.h	2003-10-25 01:32:09.0	ssigala	1.11	14	15	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/zile.h	2003-05-25 23:41:39.0	rrt	1.10	2	2	Fix typo: HAS_VASPRINTF --&gt; HAVE_VASPRINTF
/cvsroot/zile/zile/src/zile.h	2003-05-25 23:34:56.0	rrt	1.9	2	2	Make historyp.try take an astr for symmetry with historyp.reread.
/cvsroot/zile/zile/src/zile.h	2003-05-25 23:20:12.0	rrt	1.8	9	1	Make vasprintf mandatory, and provide an implementation for thoseplatforms that lack it (courtesy of David Taillandier&apos;s xnprintf library).
/cvsroot/zile/zile/src/zile.h	2003-05-23 11:37:25.0	ssigala	1.7	3	3	shut up some implicit (const char *) -&gt; (char *) casts warnings
/cvsroot/zile/zile/src/zile.h	2003-05-19 23:50:25.0	rrt	1.6	7	7	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/zile.h	2003-05-07 00:28:42.0	rrt	1.5	20	6	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/zile.h	2003-04-24 17:47:40.0	rrt	1.4	3	1	Fix [ 723165 ] zile 1.6.1 mishandles undo command in overwrite mode;patch by Nicolas Duboc (nduboc@sf.net)
/cvsroot/zile/zile/src/zile.h	2003-04-24 17:36:51.0	rrt	1.3	3	2	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/zile.h	2003-04-24 17:12:00.0	rrt	1.2	64	53	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/zile.h	2001-01-19 23:03:07.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/zile.h	2001-01-19 23:08:17.0	ssigala	1.1.1.2	9	33	import of version 1.3.
/cvsroot/zile/zile/src/zile.h	2001-01-19 23:03:07.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/zmalloc.c	2005-02-05 14:49:06.0	rrt	1.3	32	2	Add zasprintf and zvasprintf to zmalloc.c.Remove asprintf from vasprintf.c (no longer needed).Fix compilation warnings in vasprintf.Use new functions.
/cvsroot/zile/zile/src/zmalloc.c	2005-01-10 00:56:06.0	rrt	1.2	16	16	Since I currently seem to be the only person contributing code toZile, it seems reasonable to have the code formatted as I like it.Hence, reformat to 2-space columns rather than 8-space. Ah...that&apos;sbetter!
/cvsroot/zile/zile/src/zmalloc.c	2004-11-15 01:47:12.0	rrt	1.1	0	0	Move contents of lib/ into src/. This is slightly awkward at themoment, but means that x{malloc,realloc,strdup} can be replaced bycalls to z{malloc,realloc,dup}, and the machinery for building libzileis not needed (it was rather pointless, although it was used by mkdocand the test programs of the libraries, which now won&apos;t work and willhave to be resurrected).This makes the arrangement of the code a bit simpler.Also move the z* functions into zmalloc.c so they can easily be linkedinto mkdoc.c.
/cvsroot/zile/zile/src/Attic/zterm.h	2004-10-08 15:30:45.0	rrt	1.4	1	1	Remove colour support.Simplify the terminal interface further. The per-interface header fileis no longer required.Start rewriting the termcap back-end so that it can have a simplencurses-like optimisation and not have to redraw the entire screenevery time.
/cvsroot/zile/zile/src/Attic/zterm.h	2004-09-03 04:09:08.0	dacap	1.3	4	2	Added the Allegro interface.
/cvsroot/zile/zile/src/Attic/zterm.h	2004-07-09 01:39:25.0	rrt	1.2	3	1	#include config.h in zterm.h so we get the CURSES macro if it&apos;s defined.
/cvsroot/zile/zile/src/Attic/zterm.h	2004-07-01 00:52:41.0	rrt	1.1	0	0	Add support for different implementations of the terminal interface,and add preliminary term.h/termio.h interface. The default interfaceis still curses, and it can be disabled with --disable-curses passedto configure.zterm.h is now the header included by C files, which in turn includesthe implementation header, currently either term_ncurses.h orterm_termcap.h.
/cvsroot/zile/zile/src/term_ncurses/Attic/.cvsignore	2004-09-03 04:17:13.0	dacap	1.3	0	0	*** empty log message ***
/cvsroot/zile/zile/src/term_ncurses/Attic/.cvsignore	2004-01-28 13:07:59.0	rrt	1.2	2	0	Add .deps and Makefile.in
/cvsroot/zile/zile/src/term_ncurses/Attic/.cvsignore	2003-05-16 17:17:55.0	ssigala	1.1	0	0	added files to ignore configure generated files.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.am	2004-05-10 18:49:51.0	rrt	1.5	1	1	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.am	2004-05-10 18:39:56.0	rrt	1.4	1	2	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.am	2004-05-10 18:05:49.0	rrt	1.3	1	2	Move ncurses_redisplay.c up to term_ncurses.c; it no longer needsncurses.h. Only two more files to go!
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.am	2004-05-09 20:31:09.0	rrt	1.2	1	2	Move term_ncurses/ncurses_minibuf.c to term_minibuf.c.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.am	2004-01-23 02:46:22.0	dacap	1.1	0	0	Added the automake support.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.in	2004-01-23 03:15:06.0	dacap	1.4	1	1	Removed auto-generated and unnecessary files.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.in	2003-05-07 00:28:42.0	rrt	1.3	4	4	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.in	2003-04-24 17:12:00.0	rrt	1.2	2	2	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.in	2001-01-19 23:03:07.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.in	2001-01-19 23:08:17.0	ssigala	1.1.1.2	2	7	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/Makefile.in	2001-01-19 23:03:07.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/README	2004-05-10 18:49:51.0	rrt	1.3	0	0	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_ncurses/Attic/README	2003-04-24 17:12:00.0	rrt	1.2	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/README	2001-01-19 23:03:07.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/README	2001-01-19 23:08:17.0	ssigala	1.1.1.2	1	1	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/README	2001-01-19 23:03:07.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-05-10 18:49:51.0	rrt	1.13	1	1	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-05-10 18:02:13.0	rrt	1.12	1	3	Continue the ncurses cleanup. Move more code into term_ncurses.c. Now,ncurses_redisplay.c no longer #includes ncurses.h and will shortly bemoved out of the term_ncurses directory.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-05-09 21:32:43.0	rrt	1.11	1	11	Remove unused GETKEY_NONBLOCKING.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-03-13 20:59:50.0	rrt	1.10	1	12	For the remaining #if 0 code (except for one bit of dacap&apos;s which isunfinished) either remove it or change #if 0 to #if DEBUG.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-02-18 00:20:32.0	rrt	1.9	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-02-17 21:21:18.0	ssigala	1.8	24	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-01-29 11:36:01.0	rrt	1.7	1	6	To use curses/ncurses, just #include &lt;curses.h&gt;. This is provided byncurses, and in fact HAVE_NCURSES_H wasn&apos;t being defined recentlyanyway, so even though ncurses was being used, curses.h was the headerused.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2004-01-28 10:24:23.0	rrt	1.6	5	5	Use proper APIs for switching between blocking and non-blocking readin ncurses, rather than twiddling private struct members.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2003-10-25 01:32:09.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2003-06-24 16:00:52.0	rrt	1.4	2	2	Fix a slew of compiler warnings caught by -Wall (thanks to NicolasDuboc for putting me on the case!)
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2003-05-07 00:28:42.0	rrt	1.3	48	24	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2003-04-24 17:12:00.0	rrt	1.2	14	35	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2001-01-19 23:03:19.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2001-01-19 23:08:18.0	ssigala	1.1.1.2	2	38	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_key.c	2001-01-19 23:03:19.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-05-09 20:31:09.0	rrt	1.22	1	1	Move term_ncurses/ncurses_minibuf.c to term_minibuf.c.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-05-09 20:00:33.0	rrt	1.21	32	37	More cleanup:1. Removed [EOB] marker. This is not an Emacs feature, and mosteditors (rightly, in my view) don&apos;t have it. It&apos;s easy to know whenyou&apos;re at the end of the buffer by a combination of the status lineand the down key!2. Removed some more vestiges of font-lock: in particular, thefont-lock variables and the OUTCH macro.3. Start isolating the ncurses code. To do this, add stub functionsand variables to term_ncurses.c for ncurses functions. The types andmacros are going to be a bit more annoying, and some code willobviously have to stay in this directory. ncurses_minibuf.c is now&quot;ncurses free&quot;, i.e. doesn&apos;t need to #include ncurses.h.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-03-30 00:47:01.0	rrt	1.20	2	2	Rename some string functions to more ISO standard-like names, e.g.astr_assign* becomes astr_cpy* and astr_append* becomes astr_cat*.They are shorter too!Also add getln (safe gets, I should probably call it agets!) toglue.c, in preparation for the Lisp interpreter, which is takingshape in my working copy.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-03-13 20:59:50.0	rrt	1.19	1	11	For the remaining #if 0 code (except for one bit of dacap&apos;s which isunfinished) either remove it or change #if 0 to #if DEBUG.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-03-11 14:50:14.0	rrt	1.18	3	2	Yet more underused and unused functions removed from astr.c. I&apos;ve alsostarted transferring the documentation from astr.3 to astr.h: sincethese are not general purpose libraries but just code for zile now,there&apos;s no point having man pages. The man page is now ratherbutchered, and probably not valid troff; it will soon disappear.I have made small changes to several other files to work aroundfunctions I have removed. I have also tidied up the code in one or twoinstances. The new code is hardly ever longer than the old, and makesthe astr library much easier to understand (it&apos;s now about half thesize of the original API).
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-03-09 17:25:54.0	rrt	1.17	2	2	Remove an unused parameter in xminibuf_write.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-02-18 17:21:54.0	ssigala	1.16	13	7	minor tweaks
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-02-18 00:20:32.0	rrt	1.15	10	8	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-02-17 21:21:18.0	ssigala	1.14	25	44	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-02-14 11:27:35.0	dacap	1.13	8	40	Removed color support from minibuf.Also the &apos;&lt;&apos; and &apos;&gt;&apos; were modified by &apos;$&apos; character.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-02-08 05:39:26.0	dacap	1.12	88	41	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2004-01-29 11:36:01.0	rrt	1.11	1	6	To use curses/ncurses, just #include &lt;curses.h&gt;. This is provided byncurses, and in fact HAVE_NCURSES_H wasn&apos;t being defined recentlyanyway, so even though ncurses was being used, curses.h was the headerused.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-11-28 23:46:09.0	rrt	1.10	2	2	In ncurses_minibuf_read, don&apos;t change to an old buffer if there isn&apos;tone.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-10-25 01:32:09.0	ssigala	1.9	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-05-25 23:34:57.0	rrt	1.8	4	2	Make historyp.try take an astr for symmetry with historyp.reread.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-05-23 11:37:26.0	ssigala	1.7	4	4	shut up some implicit (const char *) -&gt; (char *) casts warnings
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-05-20 00:26:41.0	rrt	1.6	1	2	Remove an include of pathbuffer.h that escaped the earlier purge.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-05-19 23:50:25.0	rrt	1.5	5	5	Sandro suggested replacing pathbuffer_t with astr. This set of patchesis the rather ugly result, although it&apos;s not as bad as it looks: lotsof the changes are just making char * --&gt; const char *. One or twoinfelicities, such as the fact that one history method now take anastr, while another still takes a char *, need fixing. Since I proposeto carry on cleaning up the code generally, that shouldn&apos;t be too muchof a problem.However, this set of changes definitely validates the decision to gofor a 1.6.2 release before releasing 1.7! 1.7 may now take a littlewhile to stabilise.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-05-07 00:28:42.0	rrt	1.4	5	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-04-24 17:36:52.0	rrt	1.3	4	3	Fix compilation on GNU/HURD. Patch from Nicolas Duboc [nicolas@duboc.net]
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2003-04-24 17:12:00.0	rrt	1.2	14	22	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2001-01-19 23:03:31.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2001-01-19 23:08:18.0	ssigala	1.1.1.2	4	4	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_minibuf.c	2001-01-19 23:03:31.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-05-10 18:39:56.0	rrt	1.22	1	1	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-05-10 18:15:13.0	rrt	1.21	1	16	Remove some duplicate functions.The situation is now looking a little messy: there&apos;s an API interm_ncurses.h, and there&apos;s another one offered by the Terminal type.I intend to get rid of the Terminal type: it&apos;s cute, but it ain&apos;tuseful, as we will end up with the terminal type being a compile-time,not a run-time switch. Preferably with only one setting :-)
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-05-10 18:02:13.0	rrt	1.20	1	3	Continue the ncurses cleanup. Move more code into term_ncurses.c. Now,ncurses_redisplay.c no longer #includes ncurses.h and will shortly bemoved out of the term_ncurses directory.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-05-09 20:00:33.0	rrt	1.19	12	12	More cleanup:1. Removed [EOB] marker. This is not an Emacs feature, and mosteditors (rightly, in my view) don&apos;t have it. It&apos;s easy to know whenyou&apos;re at the end of the buffer by a combination of the status lineand the down key!2. Removed some more vestiges of font-lock: in particular, thefont-lock variables and the OUTCH macro.3. Start isolating the ncurses code. To do this, add stub functionsand variables to term_ncurses.c for ncurses functions. The types andmacros are going to be a bit more annoying, and some code willobviously have to stay in this directory. ncurses_minibuf.c is now&quot;ncurses free&quot;, i.e. doesn&apos;t need to #include ncurses.h.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-04-06 00:31:19.0	rrt	1.18	1	34	Move signal handling code into main.c, as it&apos;s not ncurses-specific.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-03-09 17:26:32.0	rrt	1.17	3	1	Remove an couple of unused parameter warnings.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-18 00:20:32.0	rrt	1.16	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-17 21:21:18.0	ssigala	1.15	24	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-14 23:19:03.0	ssigala	1.14	2	2	Modernize a bit configure.ac (now the maintainer email is generated into the config.h header)move regex.[ch] from src/ to lib/
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-14 11:26:13.0	dacap	1.13	5	9	Better show_splash_screen.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-08 05:39:26.0	dacap	1.12	3	3	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-06 02:59:01.0	dacap	1.11	4	4	Changes in the coding style.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-02-05 11:14:43.0	rrt	1.10	2	2	Update the authors list everywhere, and generally rejig to reflectreality.Change bug-reporting address to the zile-devel mailing list.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-01-29 11:36:01.0	rrt	1.9	1	6	To use curses/ncurses, just #include &lt;curses.h&gt;. This is provided byncurses, and in fact HAVE_NCURSES_H wasn&apos;t being defined recentlyanyway, so even though ncurses was being used, curses.h was the headerused.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-01-28 11:05:14.0	rrt	1.8	2	2	Whitespace correction.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-01-21 02:22:52.0	dacap	1.7	7	1	Now when the program exists the last line in the screen is cleared.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2004-01-07 01:45:20.0	rrt	1.6	5	2	Get rid of some ncurses memory leaks. This is really ncurses&apos;s fault,not ours, but since most of the leaks can easily be removed by callingnewterm and delscreen, it seemed reasonable to do so.I&apos;ve discussed the rest of the leaks (detected by valgrind) with themaintainer, and he doesn&apos;t want to or can&apos;t fix the remainder: oneleak would &quot;require changing the ABI&quot;, and another is asetbuffer/setvbuf buffer that &quot;tends to cause core dumps&quot; if it&apos;sfreed.I&apos;m inclined to add a suppressions file to valgrind for these thatignores them.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2003-10-25 01:32:09.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2003-05-23 11:37:26.0	ssigala	1.4	4	4	shut up some implicit (const char *) -&gt; (char *) casts warnings
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2003-05-07 00:28:42.0	rrt	1.3	25	43	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2003-04-24 17:12:00.0	rrt	1.2	40	17	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2001-01-19 23:03:34.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2001-01-19 23:08:18.0	ssigala	1.1.1.2	25	75	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_misc.c	2001-01-19 23:03:34.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-05-10 18:05:49.0	rrt	1.28	1	1	Move ncurses_redisplay.c up to term_ncurses.c; it no longer needsncurses.h. Only two more files to go!
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-05-10 18:02:13.0	rrt	1.27	18	23	Continue the ncurses cleanup. Move more code into term_ncurses.c. Now,ncurses_redisplay.c no longer #includes ncurses.h and will shortly bemoved out of the term_ncurses directory.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-05-09 20:00:34.0	rrt	1.26	17	75	More cleanup:1. Removed [EOB] marker. This is not an Emacs feature, and mosteditors (rightly, in my view) don&apos;t have it. It&apos;s easy to know whenyou&apos;re at the end of the buffer by a combination of the status lineand the down key!2. Removed some more vestiges of font-lock: in particular, thefont-lock variables and the OUTCH macro.3. Start isolating the ncurses code. To do this, add stub functionsand variables to term_ncurses.c for ncurses functions. The types andmacros are going to be a bit more annoying, and some code willobviously have to stay in this directory. ncurses_minibuf.c is now&quot;ncurses free&quot;, i.e. doesn&apos;t need to #include ncurses.h.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-04-05 02:50:30.0	rrt	1.25	21	15	Remove major mode. There aren&apos;t any left.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-04-04 22:33:12.0	rrt	1.24	2	13	Font-lock removed.FAQ overhauled.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-03-14 15:36:03.0	rrt	1.23	1	343	DON&apos;T PANIC! I have tagged the tree with the tag &quot;fontlock-apocalypse&quot;before committing this set of changes.Remove font-lock modes (N.B. *not* font-lock support!). The font-locksystem in zile was a Bad Thing: * It was a maintenance burden because of conditional compilation and   configure options. * It was a lot of complicated code. Several recent bugs have been   font-lock bugs. * In terms of functionality (and to a lesser extent, code size) it   was a bloat on an editor that should be small, clean and simple. * It added a dependency on gperf (admittedly not a big problem).I have retained font-lock support, and made it always-on. Regex-basedfont-lock should be implemented, similar to that in many othereditors. Preferably, we should adopt an existing regex patterns format(e.g. that of NEdit) so that we have access to a wide range offontlock modes, and users don&apos;t have to make yet another crufty set.Alternatively, it may be better in an editor the size of zile toremove font-lock altogether.Remove experimental Lua support. For similar reasons to those above,it was a bad idea.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-03-13 20:59:50.0	rrt	1.22	2	2	For the remaining #if 0 code (except for one bit of dacap&apos;s which isunfinished) either remove it or change #if 0 to #if DEBUG.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-03-10 12:00:25.0	rrt	1.21	5	7	Remove some unused parameters.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-03-10 11:46:21.0	rrt	1.20	2	2	Fix a couple of compile errors in non-text-mode code caused by recentchanges.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-03-09 17:27:26.0	rrt	1.19	10	10	Remove some unused parameters, and #include config.h for neededfunctions.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-03-03 02:50:34.0	rrt	1.18	30	35	Audit possible static buffer overflows (I basically searched for\[[0-9] and identified all those instances that could overflow).I have fixed rc.c and ncurses_redisplay.c, which were two of the worstoffenders; the remaining problematic files are now listed inKNOWNBUGS. As far as I can see, all other uses of static char buffersare safe.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-02-18 00:20:32.0	rrt	1.17	6	4	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-02-17 21:21:18.0	ssigala	1.16	24	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-02-14 11:25:02.0	dacap	1.15	16	8	Now hscroll move all lines (this can be modified uncomment theENABLE_FULL_HSCROLL macro).Also the &apos;&lt;&apos; and &apos;&gt;&apos; were modified by &apos;$&apos; character.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-02-08 05:39:26.0	dacap	1.14	72	103	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-29 15:03:23.0	rrt	1.13	2	2	Gain modeline space by removing the name of the editor (which we know!).
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-29 11:36:01.0	rrt	1.12	1	6	To use curses/ncurses, just #include &lt;curses.h&gt;. This is provided byncurses, and in fact HAVE_NCURSES_H wasn&apos;t being defined recentlyanyway, so even though ncurses was being used, curses.h was the headerused.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-28 15:40:55.0	rrt	1.11	1	3	No longer call refresh_clock_timeout(); we just always update theclock.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-28 12:57:23.0	rrt	1.10	2	2	Fix the format string, which I had stupidly regressed to allow the&quot;Font&quot; indicator.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-28 10:38:12.0	rrt	1.9	3	4	Remove commented-out font-lock mode indicator on modeline. Thismatches (FSF) Emacs, which doesn&apos;t have an indicator by default, andin any case, the only conceivable use of it is as a debugging aid:normally, you can tell whether you have font lock on or not (or you&apos;rein text mode and you don&apos;t care)!
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-21 03:12:32.0	dacap	1.8	6	5	Fixed the column indicator in the status line (now 0 is the firstcolumn), and modified other minor messages (to be more like Emacs).
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-21 02:34:45.0	dacap	1.7	3	1	Added a call to refresh_clock_timeout() when we want refresh thecached variables.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2004-01-20 13:29:28.0	rrt	1.6	4	4	Whitespace tidy-up.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2003-10-25 01:32:09.0	ssigala	1.5	121	132	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2003-06-24 16:00:52.0	rrt	1.4	8	3	Fix a slew of compiler warnings caught by -Wall (thanks to NicolasDuboc for putting me on the case!)
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2003-05-07 00:28:42.0	rrt	1.3	288	71	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2003-04-24 17:12:00.0	rrt	1.2	63	15	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2001-01-19 23:03:37.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2001-01-19 23:08:19.0	ssigala	1.1.1.2	7	16	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/ncurses_redisplay.c	2001-01-19 23:03:37.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-05-10 18:49:51.0	rrt	1.15	1	1	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-05-10 18:39:56.0	rrt	1.14	82	17	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-05-10 18:15:14.0	rrt	1.13	9	4	Remove some duplicate functions.The situation is now looking a little messy: there&apos;s an API interm_ncurses.h, and there&apos;s another one offered by the Terminal type.I intend to get rid of the Terminal type: it&apos;s cute, but it ain&apos;tuseful, as we will end up with the terminal type being a compile-time,not a run-time switch. Preferably with only one setting :-)
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-05-10 18:02:13.0	rrt	1.12	54	20	Continue the ncurses cleanup. Move more code into term_ncurses.c. Now,ncurses_redisplay.c no longer #includes ncurses.h and will shortly bemoved out of the term_ncurses directory.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-05-09 20:00:34.0	rrt	1.11	41	1	More cleanup:1. Removed [EOB] marker. This is not an Emacs feature, and mosteditors (rightly, in my view) don&apos;t have it. It&apos;s easy to know whenyou&apos;re at the end of the buffer by a combination of the status lineand the down key!2. Removed some more vestiges of font-lock: in particular, thefont-lock variables and the OUTCH macro.3. Start isolating the ncurses code. To do this, add stub functionsand variables to term_ncurses.c for ncurses functions. The types andmacros are going to be a bit more annoying, and some code willobviously have to stay in this directory. ncurses_minibuf.c is now&quot;ncurses free&quot;, i.e. doesn&apos;t need to #include ncurses.h.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-02-18 00:20:31.0	rrt	1.10	4	2	Add copyright lines for Reuben Thomas.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-02-17 21:21:19.0	ssigala	1.9	24	25	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-02-08 05:39:26.0	dacap	1.8	4	4	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-01-29 11:36:01.0	rrt	1.7	1	6	To use curses/ncurses, just #include &lt;curses.h&gt;. This is provided byncurses, and in fact HAVE_NCURSES_H wasn&apos;t being defined recentlyanyway, so even though ncurses was being used, curses.h was the headerused.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2004-01-07 01:45:20.0	rrt	1.6	4	1	Get rid of some ncurses memory leaks. This is really ncurses&apos;s fault,not ours, but since most of the leaks can easily be removed by callingnewterm and delscreen, it seemed reasonable to do so.I&apos;ve discussed the rest of the leaks (detected by valgrind) with themaintainer, and he doesn&apos;t want to or can&apos;t fix the remainder: oneleak would &quot;require changing the ABI&quot;, and another is asetbuffer/setvbuf buffer that &quot;tends to cause core dumps&quot; if it&apos;sfreed.I&apos;m inclined to add a suppressions file to valgrind for these thatignores them.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2003-10-25 01:32:09.0	ssigala	1.5	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2003-05-23 11:37:26.0	ssigala	1.4	3	3	shut up some implicit (const char *) -&gt; (char *) casts warnings
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2003-05-07 00:28:42.0	rrt	1.3	3	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2003-04-24 17:12:00.0	rrt	1.2	4	3	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2001-01-19 23:03:37.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2001-01-19 23:08:19.0	ssigala	1.1.1.2	3	5	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.c	2001-01-19 23:03:37.0	ssigala	1.1.1.1	0	0	import of version 1.4.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-05-10 18:49:51.0	rrt	1.11	1	1	Move contents of ncurses_key.c into term_ncurses.c. Get rid of theterm_ncurses subdirectory altogether. We now have just oneterm_foo.{c,h} file per Terminal implementation, and a number ofterm_*.c files that build on top of this. In fact, this storyis about to get a whole lot simpler too.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-05-10 18:39:56.0	rrt	1.10	3	4	Get rid of ncurses_misc.c. The code went to term_redisplay.c andterm_ncurses.c.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-05-10 18:15:14.0	rrt	1.9	2	3	Remove some duplicate functions.The situation is now looking a little messy: there&apos;s an API interm_ncurses.h, and there&apos;s another one offered by the Terminal type.I intend to get rid of the Terminal type: it&apos;s cute, but it ain&apos;tuseful, as we will end up with the terminal type being a compile-time,not a run-time switch. Preferably with only one setting :-)
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-05-10 18:02:13.0	rrt	1.8	46	16	Continue the ncurses cleanup. Move more code into term_ncurses.c. Now,ncurses_redisplay.c no longer #includes ncurses.h and will shortly bemoved out of the term_ncurses directory.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-05-09 20:00:34.0	rrt	1.7	12	1	More cleanup:1. Removed [EOB] marker. This is not an Emacs feature, and mosteditors (rightly, in my view) don&apos;t have it. It&apos;s easy to know whenyou&apos;re at the end of the buffer by a combination of the status lineand the down key!2. Removed some more vestiges of font-lock: in particular, thefont-lock variables and the OUTCH macro.3. Start isolating the ncurses code. To do this, add stub functionsand variables to term_ncurses.c for ncurses functions. The types andmacros are going to be a bit more annoying, and some code willobviously have to stay in this directory. ncurses_minibuf.c is now&quot;ncurses free&quot;, i.e. doesn&apos;t need to #include ncurses.h.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-02-17 21:21:19.0	ssigala	1.6	20	24	* Changed BSD license to GNU GPL:        - Removed COPYRIGHT file        - Added standard COPYING file        - Changed all the copyright declarations in source files.* Removed old lib/err.[ch] unused Zile heritage.* sed s/sandro@sigala.it/zile-devel@lists.sourceforge.net/* configure now checks for both curses.h and ncurses.h, libcurses.a and  libncurses.a.  e.g. on my box (SuSE 8.2) ncurses is installed as  ncurses.h and libncurses.a, on another as curses.h and libncurses.a...* Cleaned up zile.h:          - Now anchors are identified as an opaque type:                 typedef unsigned char Anchor;          - Enumerated UNDO_* delta types;          - Enumerated BMODE_* buffer major modes;          - Removed MINIBUF_{SET,UNSET}_COLOR stuff.* ncurses_minibuf.c:  removed astrlen() function, obsoleted by colors remove.* some other clean up.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2004-02-08 05:39:26.0	dacap	1.5	2	2	Rewritten point/marker API mainly.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2003-10-25 01:32:09.0	ssigala	1.4	2	2	* minor fixes to expand_path().* fixed memory leak in usage of agetcwd().  Now agetcwd() also uses a  previously allocated astr to store the directory name (simplifies  the code).* fixed problem about relative directories, when zile is called  with filenames on the command line (e.g., `zile term_ncurses/*.c&apos;  now works correctly).* introduced astr_isempty(), astr_first_char(), astr_last_char() sugar  functions.  &quot;astr_last_char(as)&quot; is certainly better than the ugly  &quot;astr_cstr(as)[astr_size(as) - 1]&quot;.* introduced ZTRACE() function to make debugging easier.* renamed ANCHOR_SPECIAL to ANCHOR_HEREDOC because  cat &lt;&lt;EOF  bla  EOF  stuff is usually called here-document.* renamed `font-special&apos; variable to `font-here-document&apos;.* added `font-here-document&apos; to tbl_vars.h, zilerc.sample and Texinfo.* redisplay speedup: cache a few more variables:  status-line-color, display-time-format, displayable-characters.* startup speedup: do not cache the variables too ofter.* made make_heredoc_string more flexible.* fixed zlint.* documented `sh-mode&apos;, `kill-word&apos;, `backward-kill-word&apos; in Texinfo.* other fixes.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2003-05-07 00:28:42.0	rrt	1.3	5	3	Land the 1.7 sources. This is basically 1.7-a7 (unreleased except onSandro&apos;s home page) plus my and Nicolas Duboc&apos;s 1.6.2 fixes, plus somepatches to 1.7-a6 from David Capello.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2003-04-24 17:12:00.0	rrt	1.2	0	0	Committing 1.6.2 sources.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2001-01-19 23:03:37.0	ssigala	1.1	0	0	branches:  1.1.1;Initial revision
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2001-01-19 23:08:19.0	ssigala	1.1.1.2	2	2	import of version 1.3.
/cvsroot/zile/zile/src/term_ncurses/Attic/term_ncurses.h	2001-01-19 23:03:37.0	ssigala	1.1.1.1	0	0	import of version 1.4.
